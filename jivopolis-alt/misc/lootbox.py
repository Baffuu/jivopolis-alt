import random as rand
from typing import Tuple, Any

from . import ITEMS
from .. import bot

def money() -> Tuple[int, str]:
    '''returns random number of money in range from 1 to 75'''
    return rand.randint(1, 75), 'money'
def big_money() -> Tuple[int, str]:
    '''returns random number of money in range from 100 to 300'''
    return rand.randint(100, 300), 'big_money'
def money_steal() -> Tuple[int, str]:
    '''returns random number of money that will be stealen, from -1 to -20'''
    return rand.randint(1, 20), 'money_steal'
def robber_item() -> Tuple[str, str]:
    items = [
        item for item in ITEMS
        if ITEMS[item].type == 'robber'
    ]
    return rand.choice(items), 'robber_item'
def common_masks() -> Tuple[str, str]:
    items = [
        'fox', 'wolf', 'hamster'
    ]
    return rand.choice(items), 'common_mask'
def rare_masks() -> Tuple[str, str]:  
    items = rand.randint(1, 100)
    match (items):
        case x if x in range(1, 70):
            price = rand.choice(RARE_MASKS)
        case x if x in range(71, 90):
            price = rand.choice(EPIC_MASKS)
        case x if x in range(91, 100):
            price = rand.choice(LEGENDARY_MASKS)
        case _:
            price, _ = rare_masks()
    return price, 'rare_masks'
def crypto() -> Tuple[str, str]:
    _crypto = [item for item in ITEMS if ITEMS[item].type == "crypto"]
    return (rand.choice(_crypto), 'crypto')
async def other_event() -> Tuple[Any, str]:
    chances = rand.randint(1, 100) #todo: chances for several events
    return empty_lootbox, 'event'

async def empty_lootbox(chat_id):
    await bot.send_message(chat_id, "üßå –ò–∑ —è—â–∏–∫–∞ –≤—ã–ª–µ–∑ –≥–Ω–æ–º. –ü–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏–ª –∑–∞ –Ω–æ—á–ª–µ–≥ –∏ –ø—Ä–æ–¥–æ–ª–∂–∏–ª —Å–≤–æ—ë —Å—Ç—Ä–∞–Ω—Å—Ç–≤–∏–µ‚Ä¶")
    return
LOOTBOX = {
    'money': "üì§ –í—ã –Ω–∞—à–ª–∏ –º–∞–ª–µ–Ω—å–∫—É—é –ø–∞—á–∫—É –¥–µ–Ω–µ–≥ –Ω–∞ –¥–Ω–µ —è—â–∏–∫–∞‚Ä¶ <b>–ü–æ–ª—É—á–µ–Ω–æ ${}</b>",
    'big_money': "ü§© –ö–∞–∂–µ—Ç—Å—è, —Å–µ–≥–æ–¥–Ω—è –≤–∞–º –ø–æ–≤–µ–∑–ª–æ! <b>–ü–æ–ª—É—á–µ–Ω–æ ${}</b>", 
    'money_steal': "üí© –ò–∑ —è—â–∏–∫–∞ –≤—ã–ª–µ–∑–∞–µ—Ç üòº –ë–æ–ª—å—à–æ–π –®–ª–µ–ø–∞ –∏ –∫—Ä–∞–¥–µ—Ç —É –≤–∞—Å –¥–µ–Ω—å–≥–∏.\
        –í —Å–ª–µ–¥—É—é—â–µ–π —Ä–∞–∑ –±—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ. <b>–ü–æ—Ç–µ—Ä—è–Ω–æ ${}</b>",
    'robber_item': "üëø –ö–∞–∂–µ—Ç—Å—è, –∫—Ç–æ-—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª –≤–∞–º —á—Ç–æ-—Ç–æ –Ω–µ–ª–µ–≥–∞–ª—å–Ω–æ–µ. <b>–ü–æ–ª—É—á–µ–Ω–æ {}</b>",
    'common_mask': "üé≠ –í—ã –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç–µ —è—â–∏–∫ –∏ –Ω–∞—Ö–æ–¥–∏—Ç–µ –≤ –Ω–µ–π –º–∞—Å–∫—É. <b>–ü–æ–ª—É—á–µ–Ω–æ {}</b>",
    'rare_masks': ("‚ÄºÔ∏è –£–ø—Å, –Ω–∞ –∫–æ—Ä–æ–±–∫–µ –Ω–∞–ø–∏—Å–∞–Ω–æ –Ω–µ –≤–∞—à–µ –∏–º—è‚Ä¶ "
        "–ù–æ –Ω–∏–∫—Ç–æ –≤–µ–¥—å –Ω–µ –∑–∞–ø—Ä–µ—â–∞–µ—Ç –≤–∞–º –µ–µ –æ—Ç–∫—Ä—ã—Ç—å, –≤–µ—Ä–Ω–æ? <b>–ü–æ–ª—É—á–µ–Ω–æ {}</b>"),
    'crypto': "üìº –í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ —á—å—é-—Ç–æ —Ñ–ª—ç—à–∫—É —É —Å–µ–±—è –≤ —è—â–∏–∫–µ‚Ä¶ <b>–ü–æ–ª—É—á–µ–Ω–æ {}</b>"
}
'''stores all strings for lootboxes'''
RARE_MASKS = ['cactus']
EPIC_MASKS = ['tulip', 'moyai']
LEGENDARY_MASKS = ['fan']

async def lootbox_open() -> None:
    '''
    lootbox chances controller 
    '''
    chances = rand.randint(1, 100)
    
    if chances in range(1, 50):
        price, price_type = money()
    elif chances in range(50, 60):
        price, price_type = big_money()
    elif chances in range(60, 65):
        price, price_type = money_steal()
    elif chances in range(65, 70):
        price, price_type = await other_event()
    elif chances in range(70, 75):
        price, price_type = robber_item()
    elif chances in range(75, 80):
        price, price_type = crypto()
    elif chances in range(80, 95):
        price, price_type = common_masks()
    elif chances in range(95, 100):
        price, price_type = rare_masks()

    return price, price_type