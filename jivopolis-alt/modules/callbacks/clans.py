import contextlib
from ... import bot, tglog

from ...misc import get_embedded_link
from ...database import cur, insert_clan
from ..start import StartCommand

from aiogram.types import (
    Message,
    CallbackQuery,
    InlineKeyboardButton,
    InlineKeyboardMarkup
)
from aiogram.utils.exceptions import BadRequest


async def create_clan(call: CallbackQuery) -> None:
    '''
    Callback for clan creating.

    :param call - callback:
    '''
    user_id = call.from_user.id
    chat_id = call.message.chat.id
    member = await bot.get_chat_member(chat_id, user_id)

    if (
        not member.is_chat_admin()
        and not member.is_chat_creator()
    ):
        return await call.answer(
            'üëÄ –°–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞',
            show_alert=True
        )

    count = cur.select("count(*)", "clandata").where(clan_id=chat_id).one()

    if count >= 1:
        return await call.answer(
            'üö• –¢–∞–∫–æ–π –∫–ª–∞–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–Ω–∞—á–∞–ª–∞'
            ' —Ä–∞—Å–ø—É—Å—Ç–∏—Ç–µ —Å—Ç–∞—Ä—ã–π',
            show_alert=True
        )
    try:
        link = await insert_clan(call.message.chat, call.from_user)
    except BadRequest as e:
        if str(e) == 'Not enough rights to manage chat invite link':
            return await call.message.edit_text(
                f"<i>{call.message.text}\n\n>>>üö® –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –¥–∞–π—Ç–µ "
                "–±–æ—Ç—É –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</i>"
            )
        else:
            raise

    await tglog(
            message=(
                f"<b>üèò {await get_embedded_link(user_id)}</b>"
                f" —Å–æ–∑–¥–∞–ª –Ω–æ–≤—ã–π –∫–ª–∞–Ω: <b><a href='{link}'>"
                f"{call.message.chat.title}</a></b>. <code>[{chat_id}]</code>"
            ),
            tag='#new_clan'
    )
    await bot.send_message(
        chat_id,
        text=(
            f"<i>üèò <b>{await get_embedded_link(user_id)}</b> —Å–æ–∑–¥–∞–ª –Ω–æ–≤—ã–π –∫–ª–∞–Ω"
            ". –°–∫–æ—Ä–µ–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å!</i>"
        ),
        reply_markup=InlineKeyboardMarkup().add(
            InlineKeyboardButton('‚ûï –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è', callback_data='join_clan')
        )
    )

    await StartCommand()._clan_start(call.message.chat)


async def joinclan(call: CallbackQuery, user_id: int) -> None:
    '''
    Callback for clan joining

    :param call - callback:
    :param user_id:
    '''
    chat_id = call.message.chat.id

    count = cur.select("count(*)", "clandata").where(clan_id=chat_id).one()

    if count < 1:
        return await call.answer(
            "üòì –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            show_alert=True
        )
    elif count > 1:
        raise ValueError("found more than one clan with such ID")

    user_clan = cur.select("clan_id", "userdata").where(user_id=user_id).one()

    if not user_clan or user_clan != chat_id:
        cur.update("userdata").set(clan_id=chat_id).where(
            user_id=user_id).commit()
        await bot.send_message(
            chat_id,
            f'<i><b>{await get_embedded_link(user_id)}</b> –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ '
            '–∫–ª–∞–Ω—É</i>'
        )

        if user_clan:
            with contextlib.suppress(Exception):
                await bot.send_message(
                    user_clan,
                    f"<i><b>{await get_embedded_link(user_id)}</b> –≤—ã—à–µ–ª –∏–∑"
                    " –∫–ª–∞–Ω–∞</i>"
                )
    else:
        cur.update("userdata").set(
            clan_id=None).where(user_id=user_id).commit()
        await bot.send_message(
            chat_id,
            f"<i><b>{await get_embedded_link(user_id)}</b> –≤—ã—à–µ–ª –∏–∑ –∫–ª–∞–Ω–∞</i>"
        )


async def leaveclan(call: CallbackQuery) -> None:
    """
    Callback for leave clan

    :param call - callback:
    """
    user_id = call.from_user.id
    user_clan = cur.select("clan_id", "userdata").where(user_id=user_id).one()

    if not user_clan or user_clan != call.message.chat.id:
        return await call.answer(
            "ü§• –ù–æ —Ç—ã –≤–µ–¥—å –Ω–µ —Å–æ—Å—Ç–æ–∏—à—å –≤ —ç—Ç–æ–º –∫–ª–∞–Ω–µ‚Ä¶ –ù–µ–ª—å–∑—è –≤—ã–π—Ç–∏, –µ—Å–ª–∏ —Ç—ã –Ω–µ "
            "–∑–∞—Ö–æ–¥–∏–ª, –¥–æ—Ä–æ–≥–æ–π!",
            show_alert=True
        )

    cur.update("userdata").set(clan_id=None).where(
        user_id=user_id).commit()

    await call.message.answer(
        f"<i><b>{await get_embedded_link(user_id)}</b> –≤—ã—à–µ–ª –∏–∑ –∫–ª–∞–Ω–∞</i>")


async def clan_members(call: CallbackQuery) -> None:
    """
    Callback for clan members list

    :param call - callback:
    """
    clan_id = call.message.chat.id
    count = cur.select("count(*)", "clandata").where(clan_id=clan_id).one()

    if count < 1:
        return await call.answer(
            "üòì –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            show_alert=True
        )
    elif count > 1:
        raise ValueError("found more than one clan with such ID")

    text = ''
    clan_owner = cur.select("owner_id", "clandata").where(
        clan_id=clan_id).one()
    clan_members = cur.select("user_id", "userdata").where(
        clan_id=clan_id).fetch()

    if clan_owner:
        text += (
            f'üëë –°–æ–∑–¥–∞—Ç–µ–ª—å –∫–ª–∞–Ω–∞:\n{await get_embedded_link(clan_owner)}\n\n'
        )
    if len(clan_members) > 0:
        text += 'üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–ª–∞–Ω–∞:'
        for member_id in clan_members:
            text += f'\n{await get_embedded_link(member_id[0])}'

    markup = InlineKeyboardMarkup().add(
        InlineKeyboardButton(
            text='‚óÄ –°–∫—Ä—ã—Ç—å',
            callback_data='cancel_action'
        )
    )
    await call.message.answer(f'<i><b>{text}</b></i>', reply_markup=markup)


async def call_clan(call: CallbackQuery):
    """
    Callback to call all clan members

    :param call - callback:
    """
    chat_id = call.message.chat.id
    count = cur.select("count(*)", "clandata").where(clan_id=chat_id).one()

    if count < 1:
        return await call.answer(
            "üòì –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            show_alert=True
        )
    elif count > 1:
        raise ValueError("found more than one clan with such ID")

    member = await bot.get_chat_member(chat_id, call.from_user.id)
    if (
        not member.is_chat_admin()
        and not member.is_chat_creator()
    ):
        return await call.answer(
            'üëÄ –°–æ–∑—ã–≤–∞—Ç—å –∫–ª–∞–Ω –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞',
            show_alert=True
        )

    clan_members = cur.select("user_id", "userdata").where(
        clan_id=chat_id).fetch()
    clan_name = cur.select("clan_name", "clandata").where(
        clan_id=chat_id).one()
    link = cur.select("link", "clandata").where(
        clan_id=chat_id).one()

    sent_successfully = 0
    errors = 0
    user_not_exists = 0
    blocked_bot = 0
    for member_id in clan_members:
        try:
            await bot.send_message(
                chat_id=member_id[0],
                text=f'<i>üì£ –í–∞—Å —Å–æ–∑—ã–≤–∞–µ—Ç –∫–ª–∞–Ω <b><a href="{link}">'
                     f'{clan_name}</a></b></i>'
            )
            sent_successfully += 1
        except Exception as e:
            match (str(e)):
                case (
                    "Chat not found" |
                    "Forbidden: user is deactivated" |
                    "Forbidden: bot can't send messages to bots"
                ):
                    user_not_exists += 1
                case 'Forbidden: bot was blocked by the user':
                    blocked_bot += 1
                case _:
                    errors += 1

    markup = InlineKeyboardMarkup().add(
        InlineKeyboardButton(
            text='‚úî –ì–æ—Ç–æ–≤–æ',
            callback_data='cancel_action'
        )
    )

    await call.message.answer(
        '<i><b>üì£ –°–æ–∑—ã–≤ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∑–∞–≤–µ—Ä—à—ë–Ω</b>\n\n'
        f'‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–æ–∑–≤–∞–Ω–æ: <b>{sent_successfully}</b>\n'
        'üöÆ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –∏–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ Telegram: '
        f'<b>{user_not_exists}</b>\n‚úã –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª–∏ –ñ–∏–≤–æ–ø–æ–ª–∏—Å: '
        f'<b>{blocked_bot}</b>\n‚ùå –î—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏: <b>{errors}</b></i>',
        reply_markup=markup
    )


async def clan_top(call: CallbackQuery):
    """
    Callback for 10 clans with the greatest balance

    :param call - callback:
    """

    clans = cur.execute(
        "SELECT * FROM clandata WHERE clan_type=\"public\" AND "
        "clan_balance<1000000 ORDER BY -clan_balance LIMIT 20"
    )

    clan_text = ''
    clan_number = 1
    for clan in clans:
        clan_text += (
            f'{clan_number}. \n<a href="{clan[8]}">{clan[2]}</a> - ${clan[4]}'
            '\n'
        )
        clan_number += 1

    markup = InlineKeyboardMarkup().add(
        InlineKeyboardButton(
            text='‚óÄ –°–∫—Ä—ã—Ç—å',
            callback_data='cancel_action'
        )
    )

    await call.message.answer(
        f'<i><b>üèÜ –¢–æ–ø –∫–ª–∞–Ω–æ–≤ –ø–æ –±–∞–ª–∞–Ω—Å—É\n\n{clan_text}</b></i>',
        reply_markup=markup
    )


async def clan_settings(call: CallbackQuery):
    """
    Callback for clan settings

    :param call - callback:
    """
    chat_id = call.message.chat.id
    count = cur.select("count(*)", "clandata").where(clan_id=chat_id).one()

    if count < 1:
        return await call.answer(
            "üòì –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            show_alert=True
        )
    elif count > 1:
        raise ValueError("found more than one clan with such ID")

    member = await bot.get_chat_member(chat_id, call.from_user.id)
    if (
        not member.is_chat_admin()
        and not member.is_chat_creator()
    ):
        return await call.answer(
            'üëÄ –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∞–Ω–æ–º –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞',
            show_alert=True
        )

    clan_type = cur.select("clan_type", "clandata").where(
        clan_id=chat_id).one()
    clan_type_ru = '–ß–∞—Å—Ç–Ω—ã–π' if clan_type == 'private' else '–ü—É–±–ª–∏—á–Ω—ã–π'
    clan_hq = cur.select("HQ_place", "clandata").where(
        clan_id=chat_id).one()
    user_place = cur.select("current_place", "userdata").where(
        user_id=call.from_user.id).one()

    markup = InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton(
            text=f'üîê –¢–∏–ø –∫–ª–∞–Ω–∞: {clan_type_ru}',
            callback_data='toggle_clan_type'
        ),
        InlineKeyboardButton(
            text='‚úè –ü—Ä–æ—Ñ–∏–ª—å –∫–ª–∞–Ω–∞',
            callback_data='clan_profile'
        ),
        InlineKeyboardButton(
            text=f'üè¨ –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –®–ö: {user_place}',
            callback_data='clan_hq'
        ) if clan_hq == '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ' else InlineKeyboardButton(
            text='üè¨‚ùå –°–Ω–µ—Å—Ç–∏ —à—Ç–∞–±-–∫–≤–∞—Ä—Ç–∏—Ä—É',
            callback_data='clan_hq'
        ),
        InlineKeyboardButton(
            text='üóë –†–∞—Å–ø—É—Å—Ç–∏—Ç—å –∫–ª–∞–Ω',
            callback_data='delete_clan'
        ),
        InlineKeyboardButton(
            text='‚óÄ –ù–∞–∑–∞–¥',
            callback_data='cancel_action'
        )
    )

    await call.message.answer(
        '<i>‚öô –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–Ω–∞</i>',
        reply_markup=markup
    )


async def clan_profile(call: CallbackQuery):
    """
    Callback for clan profile settings

    :param call - callback:
    """
    chat_id = call.message.chat.id
    count = cur.select("count(*)", "clandata").where(clan_id=chat_id).one()

    if count < 1:
        return await call.answer(
            "üòì –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            show_alert=True
        )
    elif count > 1:
        raise ValueError("found more than one clan with such ID")

    member = await bot.get_chat_member(chat_id, call.from_user.id)
    if (
        not member.is_chat_admin()
        and not member.is_chat_creator()
    ):
        return await call.answer(
            'üëÄ –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∞–Ω–æ–º –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞',
            show_alert=True
        )

    markup = InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton(
            text='‚úè –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞',
            callback_data='set_clan_name'
        ),
        InlineKeyboardButton(
            text='üìù –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–∞',
            callback_data='set_clan_bio'
        ),
        InlineKeyboardButton(
            text='üìé –ò–∑–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫–ª–∞–Ω',
            callback_data='set_clan_link'
        ),
        InlineKeyboardButton(
            text='‚óÄ –ù–∞–∑–∞–¥',
            callback_data='cancel_action'
        )
    )

    await call.message.answer(
        '<i>‚úè –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è –∫–ª–∞–Ω–∞</i>',
        reply_markup=markup
    )


async def delete_clan(call: CallbackQuery):
    """
    Callback for a clan deleting menu

    :param call - callback:
    """
    chat_id = call.message.chat.id
    user_id = call.from_user.id
    count = cur.select("count(*)", "clandata").where(clan_id=chat_id).one()

    if count < 1:
        return await call.answer(
            "üòì –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            show_alert=True
        )
    elif count > 1:
        raise ValueError("found more than one clan with such ID")

    owner = cur.select("owner_id", "clandata").where(clan_id=chat_id).one()
    if owner != user_id:
        return await call.answer(
            'üëÄ –†–∞—Å–ø—É—Å—Ç–∏—Ç—å –∫–ª–∞–Ω –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å',
            show_alert=True
        )

    markup = InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton(
            text='‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
            callback_data='delete_clan_confirm'
        ),
        InlineKeyboardButton(
            text='‚ùå –û—Ç–º–µ–Ω–∞',
            callback_data='cancel_action'
        )
    )

    await call.message.answer(
        '<i>üò® –í—ã —Ç–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤–∞—à –∫–ª–∞–Ω –≤–º–µ—Å—Ç–µ —Å–æ –≤—Å–µ–º–∏ –µ–≥–æ '
        '–¥–µ–Ω—å–≥–∞–º–∏, –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è–º–∏ –∏ –ø–æ—Å—Ç—Ä–æ–π–∫–∞–º–∏? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ '
        '–æ—Ç–º–µ–Ω–∏—Ç—å</i>',
        reply_markup=markup
    )


async def delete_clan_confirm(call: CallbackQuery):
    """
    Callback for clan removal

    :param call - callback:
    """
    chat_id = call.message.chat.id
    user_id = call.from_user.id
    count = cur.select("count(*)", "clandata").where(clan_id=chat_id).one()

    if count < 1:
        return await call.answer(
            "üòì –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            show_alert=True
        )
    elif count > 1:
        raise ValueError("found more than one clan with such ID")

    owner = cur.select("owner_id", "clandata").where(clan_id=chat_id).one()
    if owner != user_id:
        return await call.answer(
            'üëÄ –†–∞—Å–ø—É—Å—Ç–∏—Ç—å –∫–ª–∞–Ω –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å',
            show_alert=True
        )

    name = cur.select("clan_name", "clandata").where(clan_id=chat_id).one()
    cur.execute(
        "DELETE FROM clandata WHERE clan_id=?", (chat_id,)
    ).commit()

    markup = InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton(
            text='üò™ –•–æ—Ä–æ—à–æ',
            callback_data='cancel_action'
        ),
        InlineKeyboardButton(
            text='‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–ª–∞–Ω',
            callback_data='create_clan'
        )
    )
    await call.message.answer(
        '<i>üò• –í–æ—Ç –∏ –≤—Å—ë... –í–∞—à –∫–ª–∞–Ω –∫–∞–Ω—É–ª –≤ –õ–µ—Ç—É. –í–µ—Ä–Ω—É—Ç—å –µ–≥–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ</i>',
        reply_markup=markup
    )

    await tglog(
            message=(
                f"üò™ <b>{await get_embedded_link(user_id)}</b>"
                f" —Ä–∞—Å–ø—É—Å—Ç–∏–ª –∫–ª–∞–Ω <b>{name}</b>. <code>[{chat_id}]</code>"
            ),
            tag='#delete_clan'
    )


async def toggle_clan_type(call: CallbackQuery):
    """
    Callback for a clan type changing setting

    :param call - callback:
    """
    chat_id = call.message.chat.id
    count = cur.select("count(*)", "clandata").where(clan_id=chat_id).one()

    if count < 1:
        return await call.answer(
            "üòì –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            show_alert=True
        )
    elif count > 1:
        raise ValueError("found more than one clan with such ID")

    member = await bot.get_chat_member(chat_id, call.from_user.id)
    if (
        not member.is_chat_admin()
        and not member.is_chat_creator()
    ):
        return await call.answer(
            'üëÄ –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∞–Ω–æ–º –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞',
            show_alert=True
        )

    clan_type = cur.select("clan_type", "clandata").where(
        clan_id=chat_id).one()
    new_clan_type = 'public' if clan_type == 'private' else 'private'
    new_clan_type_ru = '–ü—É–±–ª–∏—á–Ω—ã–π' if new_clan_type == 'public' else '–ß–∞—Å—Ç–Ω—ã–π'

    if call.message.chat.username is None:
        chat_data = await bot.get_chat(chat_id)
        username = chat_data.invite_link
    else:
        username = f't.me/{call.message.chat.username}'
    if not username:
        return await call.answer(
            'üö® –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –¥–∞–π—Ç–µ –±–æ—Ç—É –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
            show_alert=True
        )

    cur.update("clandata").set(clan_type=new_clan_type).where(
        clan_id=chat_id).commit()
    cur.update("clandata").set(link=username).where(clan_id=chat_id).commit()

    markup = InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton(
            text='‚úÖ –ì–æ—Ç–æ–≤–æ',
            callback_data='cancel_action'
        )
    )
    await call.message.answer(
        f'<i>ü•≥ –¢–∏–ø –≤–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞ –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ <b>{new_clan_type_ru}</b></i>',
        reply_markup=markup
    )


async def clan_hq(call: CallbackQuery):
    """
    Callback for building or demolition of clan headquarters

    :param call - callback:
    """
    chat_id = call.message.chat.id
    count = cur.select("count(*)", "clandata").where(clan_id=chat_id).one()

    if count < 1:
        return await call.answer(
            "üòì –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            show_alert=True
        )
    elif count > 1:
        raise ValueError("found more than one clan with such ID")

    member = await bot.get_chat_member(chat_id, call.from_user.id)
    if (
        not member.is_chat_admin()
        and not member.is_chat_creator()
    ):
        return await call.answer(
            'üëÄ –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∞–Ω–æ–º –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞',
            show_alert=True
        )

    clan_hq = cur.select("HQ_place", "clandata").where(
        clan_id=chat_id).one()
    user_place = cur.select("current_place", "userdata").where(
        user_id=call.from_user.id).one()

    markup = InlineKeyboardMarkup(row_width=1).add(
        InlineKeyboardButton(
            text='‚úÖ –ì–æ—Ç–æ–≤–æ',
            callback_data='cancel_action'
        )
    )

    if clan_hq == '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ':
        address = cur.select("MAX(address)+1", "clandata").where(
            HQ_place=user_place).one()
        address = address or 1
        cur.update("clandata").set(HQ_place=user_place).where(
            clan_id=chat_id).commit()
        cur.update("clandata").set(address=address).where(
            clan_id=chat_id).commit()
        await call.message.answer(
            f'<i>ü•≥ –®—Ç–∞–±-–∫–≤–∞—Ä—Ç–∏—Ä–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É <b>{user_place}, '
            f'{address}</b></i>',
            reply_markup=markup
        )
    else:
        cur.update("clandata").set(HQ_place='–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ').where(
            clan_id=chat_id).commit()
        cur.update("clandata").set(address=0).where(
            clan_id=chat_id).commit()
        await call.message.answer(
            '<i>üò™ –®—Ç–∞–±-–∫–≤–∞—Ä—Ç–∏—Ä–∞ –≤–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞ —Å–Ω–µ—Å–µ–Ω–∞</i>',
            reply_markup=markup
        )


async def set_clan_name(call: CallbackQuery) -> None:
    '''
    Callback for clan name setting

    :param call - callback*
    '''
    chat_id = call.message.chat.id
    count = cur.select("count(*)", "clandata").where(clan_id=chat_id).one()

    if count < 1:
        return await call.answer(
            "üòì –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            show_alert=True
        )
    elif count > 1:
        raise ValueError("found more than one clan with such ID")

    member = await bot.get_chat_member(chat_id, call.from_user.id)
    if (
        not member.is_chat_admin()
        and not member.is_chat_creator()
    ):
        return await call.answer(
            'üëÄ –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∞–Ω–æ–º –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞',
            show_alert=True
        )

    cur.update("userdata").set(process="set_clan_name").where(
        user_id=call.from_user.id).commit()

    await call.message.answer(
        "<i>‚úè –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞</i>",
        reply_markup=InlineKeyboardMarkup(row_width=1).add(
            InlineKeyboardButton(
                text="üîÑ –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é",
                callback_data="delete_clan_name"
            ),
            InlineKeyboardButton(
                text="üö´ –û—Ç–º–µ–Ω–∞",
                callback_data="cancel_process"
            )
        )
    )


async def delete_clan_name(call: CallbackQuery) -> None:
    '''
    Callback for clan name resetting

    :param call - callback:
    '''
    chat_id = call.message.chat.id
    count = cur.select("count(*)", "clandata").where(clan_id=chat_id).one()

    if count < 1:
        return await call.answer(
            "üòì –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            show_alert=True
        )
    elif count > 1:
        raise ValueError("found more than one clan with such ID")

    member = await bot.get_chat_member(chat_id, call.from_user.id)
    if (
        not member.is_chat_admin()
        and not member.is_chat_creator()
    ):
        return await call.answer(
            'üëÄ –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∞–Ω–æ–º –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞',
            show_alert=True
        )

    cur.update("userdata").set(process="").where(
        user_id=call.from_user.id).commit()
    cur.update("clandata").set(clan_name=call.message.chat.title).where(
        clan_id=chat_id).commit()

    await call.message.answer(
        "<i>üëå –ù–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ</i>",
        reply_markup=InlineKeyboardMarkup().add(
            InlineKeyboardButton(
                text="‚úÖ –ì–æ—Ç–æ–≤–æ",
                callback_data="cancel_action"
            )
        )
    )


async def set_clan_link(call: CallbackQuery) -> None:
    '''
    Callback for clan link setting

    :param call - callback:
    '''
    chat_id = call.message.chat.id
    count = cur.select("count(*)", "clandata").where(clan_id=chat_id).one()

    if count < 1:
        return await call.answer(
            "üòì –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            show_alert=True
        )
    elif count > 1:
        raise ValueError("found more than one clan with such ID")

    member = await bot.get_chat_member(chat_id, call.from_user.id)
    if (
        not member.is_chat_admin()
        and not member.is_chat_creator()
    ):
        return await call.answer(
            'üëÄ –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∞–Ω–æ–º –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞',
            show_alert=True
        )

    cur.update("userdata").set(process="set_clan_link").where(
        user_id=call.from_user.id).commit()

    await call.message.answer(
        "<i>üìé –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∫–ª–∞–Ω.\n\n<b>‚Äº –í–Ω–∏–º–∞–Ω–∏–µ! </b>"
        "–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–ª–∞–Ω –º–æ–∂–µ—Ç –≤–µ—Å—Ç–∏ —Ç–æ–ª—å–∫–æ –Ω–∞ –Ω–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π "
        "Telegram-—á–∞—Ç, –±–æ—Ç –∏–ª–∏ –∫–∞–Ω–∞–ª, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –ñ–∏–≤–æ–ø–æ–ª–∏—Å–æ–º, "
        "–ª–∏–±–æ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram –ø—Ä–∏ –µ–≥–æ —Å–æ–≥–ª–∞—Å–∏–∏ (–µ—Å–ª–∏ "
        "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –ø—Ä—è–º–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –∫–ª–∞–Ω—É).\n\n"
        "–ï—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –≤–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞ –±—É–¥–µ—Ç –≤–µ—Å—Ç–∏ –Ω–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π "
        "—Ä–µ—Å—É—Ä—Å, –≤–Ω–µ—à–Ω–∏–π —Ä–µ—Å—É—Ä—Å –∏–ª–∏ —Ä–µ—Å—É—Ä—Å, –Ω–µ –∏–º–µ—é—â–∏–π –ø—Ä—è–º–æ–≥–æ "
        "–æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫ –ñ–∏–≤–æ–ø–æ–ª–∏—Å—É, –º—ã –º–æ–∂–µ–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–∞—Å –∏–ª–∏ –≤–∞—à "
        "–∫–ª–∞–Ω. –ú—ã –≤–∞—Å –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏–ª–∏</i>",
        reply_markup=InlineKeyboardMarkup(row_width=1).add(
            InlineKeyboardButton(
                text="üîÑ –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é",
                callback_data="delete_clan_link"
            ),
            InlineKeyboardButton(
                text="üö´ –û—Ç–º–µ–Ω–∞",
                callback_data="cancel_process"
            )
        )
    )


async def delete_clan_link(call: CallbackQuery) -> None:
    '''
    Callback for custom clan link resetting

    :param call - callback:
    '''
    chat_id = call.message.chat.id
    count = cur.select("count(*)", "clandata").where(clan_id=chat_id).one()

    if count < 1:
        return await call.answer(
            "üòì –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            show_alert=True
        )
    elif count > 1:
        raise ValueError("found more than one clan with such ID")

    member = await bot.get_chat_member(chat_id, call.from_user.id)
    if (
        not member.is_chat_admin()
        and not member.is_chat_creator()
    ):
        return await call.answer(
            'üëÄ –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∞–Ω–æ–º –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞',
            show_alert=True
        )

    cur.update("userdata").set(process="").where(
        user_id=call.from_user.id).commit()

    if call.message.chat.username is None:
        getchat = await bot.get_chat(chat_id)
        new_chat_link = getchat.invite_link
        if not new_chat_link:
            return await call.answer(
                "üö® –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–Ω–∞—á–∞–ª–∞ –¥–∞–π—Ç–µ –±–æ—Ç—É –ø—Ä–∞–≤–∞ "
                "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
                show_alert=True
            )
    else:
        new_chat_link = f't.me/{call.message.chat.username}'
    cur.update("clandata").set(link=new_chat_link).where(
        clan_id=chat_id).commit()

    await call.message.answer(
        "<i>üëå –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–ª–∞–Ω —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞</i>",
        reply_markup=InlineKeyboardMarkup().add(
            InlineKeyboardButton(
                text="‚úÖ –ì–æ—Ç–æ–≤–æ",
                callback_data="cancel_action"
            )
        )
    )


async def set_clan_bio(call: CallbackQuery) -> None:
    '''
    Callback for clan bio setting

    :param call - callback:
    '''
    chat_id = call.message.chat.id
    count = cur.select("count(*)", "clandata").where(clan_id=chat_id).one()

    if count < 1:
        return await call.answer(
            "üòì –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            show_alert=True
        )
    elif count > 1:
        raise ValueError("found more than one clan with such ID")

    member = await bot.get_chat_member(chat_id, call.from_user.id)
    if (
        not member.is_chat_admin()
        and not member.is_chat_creator()
    ):
        return await call.answer(
            'üëÄ –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∞–Ω–æ–º –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞',
            show_alert=True
        )

    cur.update("userdata").set(process="set_clan_bio").where(
        user_id=call.from_user.id).commit()

    await call.message.answer(
        "<i>üìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–∞</i>",
        reply_markup=InlineKeyboardMarkup(row_width=1).add(
            InlineKeyboardButton(
                text="üóë –£–¥–∞–ª–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–∞",
                callback_data="delete_clan_bio"
            ),
            InlineKeyboardButton(
                text="üö´ –û—Ç–º–µ–Ω–∞",
                callback_data="cancel_process"
            )
        )
    )


async def delete_clan_bio(call: CallbackQuery) -> None:
    '''
    Callback for clan bio deleting

    :param call - callback:
    '''
    chat_id = call.message.chat.id
    count = cur.select("count(*)", "clandata").where(clan_id=chat_id).one()

    if count < 1:
        return await call.answer(
            "üòì –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
            show_alert=True
        )
    elif count > 1:
        raise ValueError("found more than one clan with such ID")

    member = await bot.get_chat_member(chat_id, call.from_user.id)
    if (
        not member.is_chat_admin()
        and not member.is_chat_creator()
    ):
        return await call.answer(
            'üëÄ –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∞–Ω–æ–º –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞',
            show_alert=True
        )

    cur.update("userdata").set(process="").where(
        user_id=call.from_user.id).commit()
    cur.update("clandata").set(description="").where(
        clan_id=chat_id).commit()

    await call.message.answer(
        "<i>üëå –û–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ</i>",
        reply_markup=InlineKeyboardMarkup().add(
            InlineKeyboardButton(
                text="‚úÖ –ì–æ—Ç–æ–≤–æ",
                callback_data="cancel_action"
            )
        )
    )


async def confirm_clan_profile_setting(message: Message, setting: str) -> None:
    '''
    Callback for changing a clan profile setting

    :param message - message:
    :param setting - the setting to be changed:
    '''
    chat_id = message.chat.id
    count = cur.select("count(*)", "clandata").where(clan_id=chat_id).one()

    failure_markup = InlineKeyboardMarkup().add(
        InlineKeyboardButton(
            text='üò™ –•–æ—Ä–æ—à–æ',
            callback_data='cancel_action'
        )
    )

    if count < 1:
        return await message.reply(
            "<i>üòì –ü–æ—Ö–æ–∂–µ, —Ç–∞–∫–æ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</i>",
            reply_markup=failure_markup
        )
    elif count > 1:
        raise ValueError("found more than one clan with such ID")

    member = await bot.get_chat_member(chat_id, message.from_user.id)
    if (
        not member.is_chat_admin()
        and not member.is_chat_creator()
    ):
        return await message.reply(
            '<i>üëÄ –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∞–Ω–æ–º –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>',
            reply_markup=failure_markup
        )

    cur.update("clandata").set(**{setting: message.text}).where(
        clan_id=chat_id).commit()

    await message.answer(
        "<i>ü•≥ –î–∞–Ω–Ω—ã–µ –∫–ª–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã</i>",
        reply_markup=InlineKeyboardMarkup().add(
            InlineKeyboardButton(
                text="‚úÖ –ì–æ—Ç–æ–≤–æ",
                callback_data="cancel_action"
            )
        )
    )
