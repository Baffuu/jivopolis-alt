from ...database.sqlitedb import cur, conn
from ...database.functions import buybutton

from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from ...config import villages, trains

async def phone_shop(call: CallbackQuery):
    place = cur.execute(f"SELECT current_place FROM userdata WHERE user_id={call.from_user.id}").fetchone()[0]
    
    if place != '–ì–µ–Ω–µ—Ä–∞–ª–∞ –®–µ–ª–±–∏':
        return #todo callback answer

    await call.message.answer('<i>üì± –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω —Ç–µ—Ö–Ω–∏–∫–∏ –∏–º–µ–Ω–∏ –®–µ–ª–±–∏</i>', reply_markup = InlineKeyboardMarkup().\
        add(buybutton('phone')), parse_mode = 'html') 

async def candy_shop(call: CallbackQuery):
    place = cur.execute(f"SELECT current_place FROM userdata WHERE user_id={call.from_user.id}").fetchone()[0]
    
    if place != '–ì–µ–æ—Ä–≥–∏–µ–≤—Å–∫–∞—è':
        return
    
    buttons = [buybutton('donut'), buybutton('cake'), 
               buybutton('cookie'), buybutton('yogurt'), 
               buybutton('chocolate'), buybutton('ice_cream'),
               buybutton('shaved_ice')]

    markup = InlineKeyboardMarkup(row_width=1).\
        add(*list(filter(lambda item: item is not None, buttons)))

    return await call.message.answer('<i>&#127856; –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à—É –∫–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫—É—é!</i>', reply_markup = markup, parse_mode = 'html')

async def japan_shop(call: CallbackQuery):
    place = cur.execute(f"SELECT current_place FROM userdata WHERE user_id={call.from_user.id}").fetchone()[0]

    if place != '–¢–¶ –ú–∏–ì':
        return

    buttons = [buybutton('bento'), buybutton('pasta'), 
               buybutton('rice')]

    markup = InlineKeyboardMarkup(row_width=1).\
        add(*list(filter(lambda item: item is not None, buttons)))

    return await call.message.answer('<i>&#127857; –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω –≤–æ—Å—Ç–æ—á–Ω–æ–π –∫—É—Ö–Ω–∏ "–Ø–ø–æ–Ω –ï–Ω–æ—Ç"!</i>', reply_markup = markup, parse_mode = 'html')

async def moda_shop(call: CallbackQuery):
    place = cur.execute(f"SELECT current_place FROM userdata WHERE user_id={call.from_user.id}").fetchone()[0]

    if place != '–¢–¶ –ú–∏–ì':
        return

    markup = InlineKeyboardMarkup(row_width=1)
    markup.add(InlineKeyboardButton(text='‚ùÑÔ∏è –ù–æ–≤–æ–≥–æ–¥–Ω–∏–π –æ—Ç–¥–µ–ª', callback_data='xmas_shop'),
                InlineKeyboardButton(text='üë∫ –ú–∞—Å–∫–∞—Ä–∞–¥–Ω—ã–π –æ—Ç–¥–µ–ª', callback_data='mask_clothes'))

    return await call.message.answer('<i>&#128090; –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>ModaShop</b>! –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –ª—é–±—É—é –æ–¥–µ–∂–¥—É!</i>', reply_markup = markup, parse_mode = 'html')
    
async def xmas_shop(call: CallbackQuery):
    place = cur.execute(f"SELECT current_place FROM userdata WHERE user_id={call.from_user.id}").fetchone()[0]

    if place != '–¢–¶ –ú–∏–ì':
        return
    
    buttons = [buybutton('snowman'), buybutton('snowflake'), 
               buybutton('xmastree'), buybutton('fairy'), 
               buybutton('santa_claus'), buybutton('mrs_claus'), 
               buybutton('firework'), buybutton('fireworks'),
               buybutton('confetti')]

    markup = InlineKeyboardMarkup(row_width=1).\
        add(*list(filter(lambda item: item is not None, buttons)))

    return await call.message.answer('<i>–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?</i>', reply_markup = markup, parse_mode = 'html') 

async def mall(call: CallbackQuery):
    place = cur.execute(f"SELECT current_place FROM userdata WHERE user_id={call.from_user.id}").fetchone()[0]
    
    if place != '–¢–¶ –ú–∏–ì':
        return

    markup = InlineKeyboardMarkup(row_width=1)
    markup.add(InlineKeyboardButton(text='üëö ModaShop', callback_data='moda_shop'), 
               InlineKeyboardButton(text='üçî –ï–Ω–æ—Ç –ö–µ–±–∞–±', callback_data='enot_kebab'),
               InlineKeyboardButton(text='üçö –†–µ—Å—Ç–æ—Ä–∞–Ω –Ø–ø–æ–Ω –ï–Ω–æ—Ç', callback_data='japan_shop'))

    return await call.message.answer('<i>&#127978; –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–æ—Ä–≥–æ–≤—ã–π —Ü–µ–Ω—Ç—Ä!</i>', reply_markup = markup, parse_mode = 'html')

async def fruit_shop(call: CallbackQuery):
    place = cur.execute(f"SELECT current_place FROM userdata WHERE user_id={call.from_user.id}").fetchone()[0]
    
    if place != '–ú–∞–∫–µ–µ–≤–∫–∞':
        return
    
    buttons = [buybutton('apple'), buybutton('cucumber'),
    buybutton('tomato'), buybutton('kiwi'), buybutton('cocoa')]

    markup = InlineKeyboardMarkup(row_width=1).\
        add(*list(filter(lambda item: item is not None, buttons)))

    return await call.message.answer('<i>&#127823; –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∏–Ω–∏-–º–∞–≥–∞–∑–∏–Ω "–ù–∞—Ç—É—Ä–∞–ª"!</i>', reply_markup = markup, parse_mode = 'html')

async def zoo_shop(call: CallbackQuery):
    place = cur.execute(f"SELECT current_place FROM userdata WHERE user_id={call.from_user.id}").fetchone()[0]
    
    if place != '–ó–æ–æ–ø–∞—Ä–∫':
        return
    
    buttons = [buybutton('morj'), buybutton('cow'),
    buybutton('yozh'), buybutton('wolf'), buybutton('fox'),
    buybutton('hamster')]

    markup = InlineKeyboardMarkup(row_width=1).\
        add(*list(filter(lambda item: item is not None, buttons)))
    await call.message.answer('<i>–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?</i>', reply_markup=markup, parse_mode = 'html')

async def enot_kebab_shop(call: CallbackQuery):
    place = cur.execute(f"SELECT current_place FROM userdata WHERE user_id={call.from_user.id}")

    if place not in villages and place not in trains[0]:
        return

    buttons = [buybutton('burger'), buybutton('shaurma'),
               buybutton('fries'), buybutton('cheburek'),
               buybutton('beer')]

    markup = InlineKeyboardMarkup(row_width=1).\
        add(*list(filter(lambda item: item is not None, buttons)))

    await call.message.answer('<i>–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?</i>', reply_markup = markup, parse_mode = 'html')

async def shop_24(call: CallbackQuery):
    buttons = [buybutton('bread', 'limited'), 
               buybutton('pelmeni', 'limited'),
               buybutton('soup', 'limited'), 
               buybutton('meat', 'limited'), 
               buybutton('meatcake', 'limited'), 
               buybutton('tea', 'limited')]

    markup = InlineKeyboardMarkup(row_width=1).\
        add(*list(filter(lambda item: item is not None, buttons)))

    await call.message.answer('<i>–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?</i>', reply_markup = markup, parse_mode = 'html')

async def botan_garden_shop(call: CallbackQuery):
    place = cur.execute(f"SELECT current_place FROM userdata WHERE user_id={call.from_user.id}").fetchone()[0]
    
    if place != '–ë–æ—Ç–∞–Ω–∏—á–µ—Å–∫–∞—è':
        return

    buttons = [buybutton('clover'), buybutton('palm'),
              buybutton('rose'), buybutton('tulip'),
              buybutton('houseplant'), buybutton('cactus')]

    markup = InlineKeyboardMarkup(row_width=1).\
        add(*list(filter(lambda item: item is not None, buttons)))

    await call.message.answer('<i>–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?</i>', reply_markup=markup, parse_mode = 'html')

async def car_shop(call: CallbackQuery):
    place = cur.execute(f"SELECT current_place FROM userdata WHERE user_id={call.from_user.id}").fetchone()[0]
    
    if place != '–ê–≤—Ç–æ–ø–∞—Ä–∫ –∏–º. –ö–æ—Ç–∞':
        return

    buttons = [buybutton('red_car'),
               buybutton('blue_car')]

    markup = InlineKeyboardMarkup(row_width=1).\
        add(*list(filter(lambda item: item is not None, buttons)))

    await call.message.answer('<i>–ö–∞–∫—É—é –º–∞—à–∏–Ω—É —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?</i>', reply_markup = markup, parse_mode = 'html')

async def hospital_shop(call: CallbackQuery):
    place = cur.execute(f"SELECT current_place FROM userdata WHERE user_id={call.from_user.id}").fetchone()[0]

    if place not in ['–†–∞–π–±–æ–ª—å–Ω–∏—Ü–∞', '–°—Ç–∞—Ä–æ–∫–æ—Ç–∞–π—Å–∫–∏–π –§–ê–ü']:
        return

    markup = InlineKeyboardMarkup(row_width=1).\
        add(InlineKeyboardButton(text='üíä –¢–∞–±–ª–µ—Ç–∫–∞ –ö–æ—Ç—Ä–æ–±–µ–Ω–µ - $500', callback_data='buy:pill:1:1'),
            InlineKeyboardButton(text='üíä –ú–∞–ª–µ–Ω—å–∫–∞—è –ø–∞—á–∫–∞ (5 —à—Ç.) - $2500', callback_data='buy:pill:5:5'),
            InlineKeyboardButton(text='üíä –ë–∞–Ω–æ—á–∫–∞ (10 —à—Ç.) - $5000', callback_data='buy:pill:10:10'))

    await call.message.answer('<i>–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏?</i>', reply_markup = markup, parse_mode = 'html')