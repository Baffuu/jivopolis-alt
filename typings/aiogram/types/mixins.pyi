"""
This type stub file was generated by pyright.
"""
# flake8: noqa
import pathlib
from io import IOBase
from typing import Optional, Union

class Downloadable:
    """
    Mixin for files
    """
    async def download(self, destination=..., timeout=..., chunk_size=..., seek=..., make_dirs=..., *, destination_dir: Optional[Union[str, pathlib.Path]] = ..., destination_file: Optional[Union[str, pathlib.Path, IOBase]] = ...):
        """
        Download file

        At most one of these parameters can be used: :param destination_dir:, :param destination_file:

        :param destination: deprecated, use :param destination_dir: or :param destination_file: instead
        :param timeout: Integer
        :param chunk_size: Integer
        :param seek: Boolean - go to start of file when downloading is finished.
        :param make_dirs: Make dirs if not exist
        :param destination_dir: directory for saving files
        :param destination_file: path to the file or instance of :class:`io.IOBase`. For e. g. :class:`io.BytesIO`
        :return: destination
        """
        ...

    async def get_file(self) -> "Downloadable":
        """
        Get file information

        :return: :obj:`aiogram.types.File`
        """
        ...
    
    async def get_url(self) -> str:
        """
        Get file url.

        ## Attention!!
        ### This method has security vulnerabilities for the reason that result contains bot's *access token* in open form. Use at your own risk!

        :return: url
        """
        ...
    
    def __hash__(self) -> int:
        ...
    


