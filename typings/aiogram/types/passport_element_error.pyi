"""
This type stub file was generated by pyright.
"""

import typing
from . import base

class PassportElementError(base.TelegramObject):
    """
    This object represents an error in the Telegram Passport element which was submitted that
    should be resolved by the user.

    https://core.telegram.org/bots/api#passportelementerror
    """
    source: base.String = ...
    type: base.String = ...
    message: base.String = ...


class PassportElementErrorDataField(PassportElementError):
    """
    Represents an issue in one of the data fields that was provided by the user.
    The error is considered resolved when the field's value changes.

    https://core.telegram.org/bots/api#passportelementerrordatafield
    """
    field_name: base.String = ...
    data_hash: base.String = ...
    def __init__(self, source: base.String, type: base.String, field_name: base.String, data_hash: base.String, message: base.String) -> None:
        ...
    


class PassportElementErrorFile(PassportElementError):
    """
    Represents an issue with a document scan.
    The error is considered resolved when the file with the document scan changes.

    https://core.telegram.org/bots/api#passportelementerrorfile
    """
    file_hash: base.String = ...
    def __init__(self, source: base.String, type: base.String, file_hash: base.String, message: base.String) -> None:
        ...
    


class PassportElementErrorFiles(PassportElementError):
    """
    Represents an issue with a list of scans.
    The error is considered resolved when the list of files containing the scans changes.

    https://core.telegram.org/bots/api#passportelementerrorfiles
    """
    file_hashes: typing.List[base.String] = ...
    def __init__(self, source: base.String, type: base.String, file_hashes: typing.List[base.String], message: base.String) -> None:
        ...
    


class PassportElementErrorFrontSide(PassportElementError):
    """
    Represents an issue with the front side of a document.
    The error is considered resolved when the file with the front side of the document changes.

    https://core.telegram.org/bots/api#passportelementerrorfrontside
    """
    file_hash: base.String = ...
    def __init__(self, source: base.String, type: base.String, file_hash: base.String, message: base.String) -> None:
        ...
    


class PassportElementErrorReverseSide(PassportElementError):
    """
    Represents an issue with the reverse side of a document.
    The error is considered resolved when the file with reverse side of the document changes.

    https://core.telegram.org/bots/api#passportelementerrorreverseside
    """
    file_hash: base.String = ...
    def __init__(self, source: base.String, type: base.String, file_hash: base.String, message: base.String) -> None:
        ...
    


class PassportElementErrorSelfie(PassportElementError):
    """
    Represents an issue with the selfie with a document.
    The error is considered resolved when the file with the selfie changes.

    https://core.telegram.org/bots/api#passportelementerrorselfie
    """
    file_hash: base.String = ...
    def __init__(self, source: base.String, type: base.String, file_hash: base.String, message: base.String) -> None:
        ...
    


