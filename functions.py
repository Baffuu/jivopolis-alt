import random

from datetime import datetime
from math import floor
from typing import Union, Optional

from .jivopolis-alt.database import cur, conn
from .jivopolis-alt import bot, logger, get_link, tglog, utils
from .jivopolis-alt.misc import current_time, ITEMS, constants
from .jivopolis-alt.misc.config import limeteds, leveldesc, levelrange, ach, ADMINS, clanitems

from aiogram.types import (
    InlineKeyboardButton,
    InlineKeyboardMarkup, 
    CallbackQuery, 
    User, 
    Message
)
from aiogram.utils.text_decorations import HtmlDecoration


async def poison(user: User, target_id: int | str, chat_id: int| str) -> None | Message | bool:
    '''
    to use poison on a user 
    
    :param user (aiogram.types.User) - user that is poisoning another user 
    :param target_id (int) - telegram user ID of user that will be poisoned 
    :chat_id chat_id (int) - telegram chat ID to which messages will be sent 
    '''

    try:
        my_health = cur.execute(f"SELECT health FROM userdata WHERE user_id={user.id}").fetchone()[0]

        if my_health < 0:
            return await bot.send_message(chat_id, "<i>&#9760; –í—ã —É–º–µ—Ä–ª–∏. –ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∫–æ–≥–æ-–Ω–∏–±—É–¥—å –≤–∞—Å –≤–æ—Å–∫—Ä–µ—Å–∏—Ç—å</i>")

        poison = cur.execute(f"SELECT poison FROM userdata WHERE user_id={user.id}").fetchone()[0]

        if poison < 1:
            return await bot.send_message(chat_id, "<i>&#10060; –£ –≤–∞—Å –Ω–µ—Ç —è–¥–∞. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –∫ –ª—É—á—à–µ–º—É</i>")

        cur.execute(f"UPDATE userdata SET poison=poison-1 WHERE user_id={user.id}")
        conn.commit()

        random_damage = random.randint(50, 200)
        if random.choice([True, False]):
            cur.execute(f"UPDATE userdata SET health=health-{random_damage} WHERE user_id={target_id}")
            conn.commit()

            await tglog(f"<i><b>{await utils.get_embedded_link(user.id)}</b> –æ—Ç—Ä–∞–≤–∏–ª <b>{await utils.get_embedded_link(target_id)}\"</b></i>.", "#user_poison")
            await bot.send_message(chat_id, f"<i>üß™ –í—ã –æ—Ç—Ä–∞–≤–∏–ª–∏ <b>{await utils.get_embedded_link(target_id)}</b></i>")
            await bot.send_message(target_id, f"<i>üß™ –í–∞—Å –æ—Ç—Ä–∞–≤–∏–ª <b>{await utils.get_embedded_link(user.id)}</b></i>")
        else:
            return await bot.send_message(chat_id, "<i>üòµ‚Äçüí´ –ù–µ—É–¥–∞—á–∞. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –∫ –ª—É—á—à–µ–º—É.\n–Ø–¥ –ø–æ—Ç—Ä–∞—á–µ–Ω –∑—Ä—è</i>")

    except Exception as e:
        await bot.send_message(chat_id, constants.ERROR_MESSAGE.format(e))
        return logger.exception(e)


async def shoot(user_id: int | str, target_id: int | str, chat_id: int | str) -> None | Message: #function is useless now...
    '''
    shoot a person
    
    :param user_id (int) - Telegram User ID of user that is shooting another user 
    :param target_id (int) - Telegram User ID of user that will be shooted
    
    :param chat_id (int) - Telegram Chat ID of chat in which messages will be sent 
    '''
    gun = cur.execute(f"SELECT gun FROM userdata WHERE user_id={user_id}").fetchone()

    if gun < 1:
        return await bot.send_message(chat_id, "<i>&#10060; –£ –≤–∞—Å –Ω–µ—Ç –ø–∏—Å—Ç–æ–ª–µ—Ç–∞. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –∫ –ª—É—á—à–µ–º—É</i>")

    cur.execute(f"UPDATE userdata SET gun=gun-1 WHERE user_id={user_id}")
    conn.commit()

    rand = random.randint(100,200)
    if random.choice([True, False]):
        cur.execute(f"UPDATE userdata SET health=health-{rand} WHERE user_id={target_id}")
        conn.commit()

        await tglog(f"<i><b>{await utils.get_embedded_link(user_id)}</a></b> –∑–∞—Å—Ç—Ä–µ–ª–∏–ª <b>{await utils.get_embedded_link(target_id)}</b>", "#user_gunshoot")
        await bot.send_message(chat_id, f"<i>&#128299; –í—ã –∑–∞—Å—Ç—Ä–µ–ª–∏–ª–∏ <b>{await utils.get_embedded_link(target_id)}</b></i>")
        await bot.send_message(target_id, f"<i>&#128299; –í–∞—Å –∑–∞—Å—Ç—Ä–µ–ª–∏–ª <b>{await utils.get_embedded_link(user_id)}</b></i>")

        if random.choice([True, False]):
            cur.execute(f"UPDATE userdata SET prison={current_time() + 1200} WHERE user_id={user_id}")
            conn.commit()

            await bot.send_message(
                chat_id, 
                (
                    f"<i>&#128110; –ì–æ—Å–ø–æ–¥–∏–Ω <b>{await utils.get_embedded_link(target_id)}</b>, –≤—ã –∑–∞–¥–µ—Ä–∂–∞–Ω—ã –∑–∞ —É–±–∏–π—Å—Ç–≤–æ –æ–≥–Ω–µ—Å—Ç—Ä–µ–ª—å–Ω—ã–º –æ—Ä—É–∂–∏–µ–º. "
                    "–ü—Ä–æ–π–¥—ë–º—Ç–µ –≤ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ.\n\n–í—ã –±—ã–ª–∏ –∞—Ä–µ—Å—Ç–æ–≤–∞–Ω—ã –Ω–∞ <b>20 –º–∏–Ω—É—Ç</b></i>"
                )
            )
        else:
            await bot.send_message(chat_id, f"<i>&#10060; –í—ã –≤—ã—Å—Ç—Ä–µ–ª–∏–ª–∏ –º–∏–º–æ. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –∫ –ª—É—á—à–µ–º—É.\n–ü–∏—Å—Ç–æ–ª–µ—Ç –ø–æ—Ç—Ä–∞—á–µ–Ω –∑—Ä—è</i>")


async def achieve(user_id: int | str, chat_id : int | str, achievement: str) -> None: #todo new ACHIEVEMENTS
    """
    achieve a user 
    
    :param user_id (int) - Telegram User ID of user that will be achieved 
    :param chat_id (int) - Telegram Chat ID of chat in which messages will be sent 
    :param achievement (str) - Index of achievement 
    """
    try:
        achieve = cur.execute(f"SELECT {achievement} FROM userdata WHERE user_id={user_id}").fetchone()
        
        if achieve != 0:
            return

        index = ach[0].index(achievement)
        name = ach[1][index]
        desc = ach[2][index]
        money = ach[3][index]
        points = ach[4][index]

        cur.execute(f"UPDATE userdata SET {achievement} = 1 WHERE user_id = {user_id}")
        conn.commit()

        rasa = cur.execute(f"SELECT rasa FROM userdata WHERE user_id = {user_id}").fetchone()
        nick = cur.execute(f"SELECT nick FROM userdata WHERE user_id = {user_id}").fetchone()

        cur.execute(f"UPDATE userdata SET balance = balance + {money} WHERE user_id = {user_id}")
        conn.commit()
        cur.execute(f"UPDATE userdata SET points = points+{points} WHERE user_id = {user_id}")
        conn.commit()

        chat_type = await bot.get_chat(chat_id)
        chat_type = chat_type.type

        if chat_type == "private":
            await bot.send_message(chat_id, f"<i>–£ –≤–∞—Å –Ω–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: <b>{name}</b>\n{desc}. \n–í–∞—à–∞ –Ω–∞–≥—Ä–∞–¥–∞: <b>${money}</b> –∏ &#128161; <b>{points}</b> –æ—á–∫–æ–≤</i>")
        else:
            await bot.send_message(chat_id, f"<i><b><a href=\"tg://user?id={user_id}\">{rasa}{nick}</a></b>, —É –≤–∞—Å –Ω–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: <b>{name}</b>\n{desc}. \n–í–∞—à–∞ –Ω–∞–≥—Ä–∞–¥–∞: <b>${money}</b> –∏ &#128161; <b>{points}</b> –æ—á–∫–æ–≤</i>")
    except Exception as e:
        await bot.send_message(
            chat_id, 
            (
                "&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. "
                "–ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç"
                " –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è"
                "–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é "
                "(t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>"
            ))
        await bot.send_message(chat_id, f"<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{e}</i>")


async def cure(user_id: str, target_id: str, chat_id: str) -> None | Message: #function is useless now...
    '''
    to cure someone...
    '''
    try:
        nerr = 0
        medicine = cur.execute(f"SELECT medicine FROM userdata WHERE user_id={user_id}").fetchone()

        if medicine < 1:
            return await bot.send_message(chat_id, "<i>&#10060; –£ –≤–∞—Å –Ω–µ—Ç —Ç–∞–±–ª–µ—Ç–æ–∫(</i>")

        health = cur.execute(f"SELECT health FROM userdata WHERE user_id={target_id}").fetchone()

        nick = cur.execute(f"SELECT nick FROM userdata WHERE user_id={user_id}").fetchone()
        mask = utils.get_mask(user_id)

        target_nick = cur.execute(f"SELECT nick FROM userdata WHERE user_id={target_id}").fetchone()
        target_mask = utils.get_mask(target_id)

        if health > 0 and health < 100:
            cur.execute(f"UPDATE userdata SET medicine=medicine-1 WHERE user_id={user_id}")
            conn.commit()

            rand = random.randint(1, 100-health)

            cur.execute(f"UPDATE userdata SET health=health+{rand} WHERE user_id={target_id}")
            conn.commit()

            if target_id == user_id:
                return await bot.send_message(chat_id, "<i>&#128138; –£—Å–ø–µ—Ö! –í—ã –≤—ã–ª–µ—á–∏–ª–∏ —Å–µ–±—è</i>")
            await bot.send_message(chat_id, f"<i>&#128138; –£—Å–ø–µ—Ö! –í—ã –≤—ã–ª–µ—á–∏–ª–∏ <b><a href=\"{await get_link(target_id)}\">{target_mask}{target_nick}</a></b></i>")
            await bot.send_message(target_id, f"<i>&#128138; –í–∞—Å –≤—ã–ª–µ—á–∏–ª <b><a href=\"{await get_link(user_id)}\">{mask}{nick}</a></b></i>")
            nerr = 1

        elif health >= 100:
            if target_id != user_id:
                return await bot.send_message(chat_id, f"<i>&#128138; <b><a href=\"{await get_link(target_id)}\">{target_mask}{target_nick}</a></b> –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–¥–æ—Ä–æ–≤, –∑–∞—á–µ–º –≤–∞–º —Ç—Ä–∞—Ç–∏—Ç—å –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ –≤–ø—É—Å—Ç—É—é?\n–õ–µ–∫–∞—Ä—Å—Ç–≤–∞ <b>–Ω–µ –ø–æ—Ç—Ä–∞—á–µ–Ω—ã</b></i>")   
            else:                                   
                return await bot.send_message(chat_id, f"<i>&#128138; –í—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–¥–æ—Ä–æ–≤—ã, –∑–∞—á–µ–º –≤–∞–º —Ç—Ä–∞—Ç–∏—Ç—å –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ –≤–ø—É—Å—Ç—É—é?\n–õ–µ–∫–∞—Ä—Å—Ç–≤–∞ <b>–Ω–µ –ø–æ—Ç—Ä–∞—á–µ–Ω—ã</b></i>")
        else:
            if target_id == user_id:
                return await bot.send_message(chat_id, "<i>&#10060; –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–∫—Ä–µ—Å–∏—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è</i>")

            cur.execute(f"UPDATE userdata SET medicine=medicine-1 WHERE user_id={user_id}")
            conn.commit()

            rand = random.randint(50,100)

            cur.execute(f"UPDATE userdata SET health={rand} WHERE user_id={target_id}")
            conn.commit()

            await bot.send_message(chat_id, f"<i>&#128138; –£—Å–ø–µ—Ö! –í—ã –≤–æ—Å–∫—Ä–µ—Å–∏–ª–∏ <b><a href=\"{await get_link(target_id)}\">{target_mask}{target_nick}</a></b></i>")
            nerr = 1
            await bot.send_message(target_id, f"<i>&#128138; –í–∞—Å –≤–æ—Å–∫—Ä–µ—Å–∏–ª <b><a href=\"{await get_link(user_id)}\">{mask}{nick}</a></b></i>")

            await achieve(user_id, chat_id, "helper")

        if nerr == 1:
            cur.execute(f"UPDATE userdata SET cured=cured+1 WHERE user_id={user_id}")
            conn.commit()

            cured = cur.execute(f"SELECT cured FROM userdata WHERE user_id={user_id}").fetchone()

            if cured >= 20:
                await achieve(user_id, chat_id, "medquest")
                cur.execute(f"UPDATE userdata SET medic=medic+1 WHERE user_id={user_id}")
                conn.commit()
                await bot.send_message(chat_id, "<i>–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ <b>ü©∫ –°—Ç–µ—Ç–æ—Å–∫–æ–ø</b>. –≠—Ç–∞ –º–∞—Å–∫–∞ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Å–µ–º, —á—Ç–æ –≤—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –≤—Ä–∞—á, –∏ –≤–∞–º –º–æ–∂–Ω–æ –¥–æ–≤–µ—Ä—è—Ç—å</i>")

    except Exception as e:
        await bot.send_message(chat_id, "&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>")
        await bot.send_message(chat_id, f"<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{e}</i>")

