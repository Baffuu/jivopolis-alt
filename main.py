import random
import asyncio
from aiogram import types
from time import time
from datetime import datetime
from math import ceil
    less = 15
    more = 30
    lessair = 90
    moreair = 120
    lesstrain = 30
    moretrain = 60
    lessbus = 5
    morebus = 20
    async def battle(message, a, oth):
        try:
            if a == oth:
                await message.answer('&#10060; <i>–¢–∞–∫ –Ω–µ—á–µ—Å—Ç–Ω–æ. –í–æ–µ–≤–∞—Ç—å —Å —Å–∞–º–∏–º —Å–æ–±–æ–π –Ω–µ–ª—å–∑—è</i>', parse_mode='html')
                return
            cursor.execute('SELECT ready FROM userdata WHERE user_id=?', (a,))
            ready = cursor.fetchone()[0]
            cursor.execute('SELECT ready FROM userdata WHERE user_id=?', (oth,))
            oready = cursor.fetchone()[0]
            cursor.execute('SELECT nick FROM userdata WHERE user_id = ?', (oth,))
            onick = cursor.fetchone()[0]
            cursor.execute('SELECT rasa FROM userdata WHERE user_id = ?', (oth,))
            orasa = cursor.fetchone()[0]
            cursor.execute('SELECT nick FROM userdata WHERE user_id = ?', (a,))
            nick = cursor.fetchone()[0]
            cursor.execute('SELECT rasa FROM userdata WHERE user_id = ?', (a,))
            rasa = cursor.fetchone()[0]
            cursor.execute('SELECT lastfight FROM userdata WHERE user_id = ?', (a,))
            lastfight = cursor.fetchone()[0]
            cursor.execute('SELECT lastfight FROM userdata WHERE user_id = ?', (oth,))
            olastfight = cursor.fetchone()[0]
            now = current_time()
            diff = now-lastfight
            odiff = now-olastfight
            if diff<fightlim or odiff<fightlim:
                if fightlim%60==0:
                    time = '{0}'.format(int(fightlim/60))
                    if int(time)==1:
                        time += ' –º–∏–Ω—É—Ç—É'
                    elif int(time)==2 or int(time)==3 or int(time)==4:
                        time += ' –º–∏–Ω—É—Ç—ã'
                    else:
                        time += ' –º–∏–Ω—É—Ç'
                else:
                    time = '{0} —Å–µ–∫—É–Ω–¥'.format(fightlim)
                await message.answer('<i>&#10060; –ë–æ—Ä–æ—Ç—å—Å—è –º–æ–∂–Ω–æ –Ω–µ –±–æ–ª–µ–µ —Ä–∞–∑–∞ –≤ {0}</i>'.format(time), parse_mode='html')
                return
            cursor.execute('UPDATE userdata SET battles = ? WHERE user_id=?', (oth, a,))
            conn.commit()
            cursor.execute('UPDATE userdata SET battles = ? WHERE user_id=?', (a, oth,))
            conn.commit()
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å', callback_data='set_user_mode'))
            if ready == 1:
                if oready == 1:
                    markup = types.InlineKeyboardMarkup()
                    markup.add(types.InlineKeyboardButton(text='üëä –£–¥–∞—Ä', callback_data='fight'))
                    await message.answer('<i><b><a href="tg://user?id={2}">{0}{1}</a></b>, <b><a href="tg://user?id={3}">{4}{5}</a></b>, –ø—Ä–∞–≤–∏–ª–∞ —Ç–∞–∫–æ–≤—ã: –∫—Ç–æ –ø–µ—Ä–≤—ã–π –Ω–∞–∂–º—ë—Ç –Ω–∞ –∫–Ω–æ–ø–∫—É, —Ç–æ—Ç –∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª—å</i>'.format(orasa, onick, oth, a, rasa, nick), parse_mode = 'html', reply_markup = markup)
                    cursor.execute('UPDATE userdata SET ready = ? WHERE user_id = ?', (0,a,))
                    conn.commit()
                    cursor.execute('UPDATE userdata SET ready = ? WHERE user_id = ?', (0,oth,))
                    conn.commit()
                else:
                    await message.answer('<i><b><a href="tg://user?id={2}">{0}{1}</a></b>, <b><a href="tg://user?id={3}">{4}{5}</a></b> —Ö–æ—á–µ—Ç —Å –≤–∞–º–∏ —Å—Ä–∞–∑–∏—Ç—å—Å—è. –ò–∑–º–µ–Ω–∏—Ç–µ —Ä–µ–∂–∏–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏, —á—Ç–æ–±—ã –±–æ–π —Å–º–æ–≥ —Å–æ—Å—Ç–æ—è—Ç—å—Å—è</i>'.format(orasa, onick, oth, a, rasa, nick), parse_mode = 'html', reply_markup = markup)
            else:
                await message.reply('<i>–ò–∑–º–µ–Ω–∏—Ç–µ —Ä–µ–∂–∏–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏, —á—Ç–æ–±—ã –±–æ–π —Å–º–æ–≥ —Å–æ—Å—Ç–æ—è—Ç—å—Å—è</i>', parse_mode = 'html', reply_markup = markup)
        except Exception as e:
            await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
            await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
    async def clancall(call):
        try:
            a = call.from_user.id
            chid = call.message.chat.id
            cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
            count = cursor.fetchone()[0]
            if count == 0:
                return
            if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                await main.send_message(chid, '&#10060; <i>–£–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∞–Ω–æ–º –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                return
            typ = ''
            cursor.execute('SELECT type FROM clandata WHERE group_id=?', (chid,))
            type = cursor.fetchone()[0]
            if type == 'private':
                typ = '–ß–∞—Å—Ç–Ω—ã–π'
            else:
                typ = '–ü—É–±–ª–∏—á–Ω—ã–π'
            cursor.execute('SELECT place FROM userdata WHERE user_id = ?', (a,))
            place = cursor.fetchone()[0]
            cursor.execute('SELECT hqplace FROM clandata WHERE group_id = ?', (chid,))
            hqplace = cursor.fetchone()[0]
            cursor.execute('SELECT notif FROM clandata WHERE group_id = ?', (chid,))
            notf = cursor.fetchone()[0]
            notif = '–í–∫–ª—é—á–µ–Ω—ã' if notf==1 else '–í—ã–∫–ª—é—á–µ–Ω—ã'
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton(text='üîê –¢–∏–ø –∫–ª–∞–Ω–∞: {0}'.format(typ), callback_data='clan_type'))
            markup.add(types.InlineKeyboardButton(text='üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {0}'.format(notif), callback_data='clan_notifications'))
            markup.add(types.InlineKeyboardButton(text='‚úè –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∫–ª–∞–Ω–∞', callback_data='clan_profile'))
            if hqplace == '':
                markup.add(types.InlineKeyboardButton(text='üè¢ –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –®–ö: {0}'.format(place), callback_data='headquarters'))
            else:
                markup.add(types.InlineKeyboardButton(text='üè¢ –°–Ω–µ—Å—Ç–∏ —à—Ç–∞–±-–∫–≤–∞—Ä—Ç–∏—Ä—É', callback_data='clear_headquarters'))
                markup.add(types.InlineKeyboardButton(text='üèõ –õ–æ–∫–∞—Ü–∏—è –∫–ª–∞–Ω–∞', callback_data='clanlocation'))
            markup.add(types.InlineKeyboardButton(text='üèó –ü–æ—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–Ω–∞', callback_data='clan_buildings'))
            markup.add(types.InlineKeyboardButton(text='‚ûï –î–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫–ª–∞–Ω–∞', callback_data='clan_plugins'))
            markup.add(types.InlineKeyboardButton(text='üñº QR-–∫–æ–¥', callback_data='clan_qrcode'))
            markup.add(types.InlineKeyboardButton(text='üóë –†–∞—Å–ø—É—Å—Ç–∏—Ç—å –∫–ª–∞–Ω', callback_data='delete_clan'))
            markup.add(types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='cancel_action2'))
            await main.send_message(chid, '<i>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–Ω–æ–º</i>', parse_mode = 'html', reply_markup = markup)
        except Exception as e:
            await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
            await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
    async def clanprof(call):
        try:
            a = call.from_user.id
            chid = call.message.chat.id
            cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
            count = cursor.fetchone()[0]
            if count == 0:
                return
            if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                await main.send_message(chid, '&#10060; <i>–£–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∞–Ω–æ–º –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                return
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton(text='‚úè –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–ª–∞–Ω', callback_data='clan_name'))
            markup.add(types.InlineKeyboardButton(text='üìÉ –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–∞', callback_data='clan_bio'))
            markup.add(types.InlineKeyboardButton(text='üñº –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ –∫–ª–∞–Ω–∞', callback_data='clan_photo'))
            markup.add(types.InlineKeyboardButton(text='üîó –ò–∑–º–µ–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É', callback_data='clan_link'))
            markup.add(types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='clan_settings2'))
            await main.send_message(chid, '<i>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∞–Ω–æ–º</i>', parse_mode = 'html', reply_markup = markup)
        except Exception as e:
            await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
            await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
    async def aircall(call):
        a = call.from_user.id
        cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
        station = cursor.fetchone()[0]
        airport = ''
        markup = types.InlineKeyboardMarkup()
        if station=='–ê—ç—Ä–æ–ø–æ—Ä—Ç –ö–æ—Ç–∞–π':
            airport = '–ö–æ—Ç–∞–π'
            markup.add(types.InlineKeyboardButton(text='üõ´ –î–æ –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞', callback_data='flight'))
        elif station=='–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞—ç—Ä–æ–ø–æ—Ä—Ç':
            airport = '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞—ç—Ä–æ–ø–æ—Ä—Ç –ñ–∏–≤–æ–ø–æ–ª–∏—Å'
            markup.add(types.InlineKeyboardButton(text='üõ´ –î–æ –ö–æ—Ç–∞—è', callback_data='flight'))
        else:
            return
        markup.add(types.InlineKeyboardButton(text='üèõ –í—ã–π—Ç–∏ –≤ –≥–æ—Ä–æ–¥', callback_data='city'))
        await call.message.answer('‚úà <i>–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∞—ç—Ä–æ–ø–æ—Ä—Ç—É <b>{0}</b></i>'.format(airport), parse_mode = 'html', reply_markup = markup)
    async def traincall(call):
        a = call.from_user.id
        cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
        station = cursor.fetchone()[0]
        rw = ''
        stations = []
        markup = types.InlineKeyboardMarkup(row_width = 2)
        if station in ['–í–æ–∫–∑–∞–ª—å–Ω–∞—è', '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤—Å–∫–∞—è', '–°—Ç–∞–Ω—Ü–∏—è –ö–æ—Ç–∞–π']:
            for st in trains[0]:
                if st!=station:
                    ind = trains[0].index(st)
                    name = trains[1][ind]
                    stations.append(types.InlineKeyboardButton(text='üöÜ {0}'.format(name), callback_data='train_{0}'.format(st)))
        else:
            for st in ['–í–æ–∫–∑–∞–ª—å–Ω–∞—è', '–ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤—Å–∫–∞—è', '–°—Ç–∞–Ω—Ü–∏—è –ö–æ—Ç–∞–π']:
                ind = trains[0].index(st)
                name = trains[1][ind]
                stations.append(types.InlineKeyboardButton(text='üöÜ {0}'.format(name), callback_data='train_{0}'.format(st)))
        markup.add(*stations)
        markup.add(types.InlineKeyboardButton(text='üèõ –í—ã–π—Ç–∏ –≤ –≥–æ—Ä–æ–¥', callback_data='city'))
        await call.message.answer('üöâ <i>–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ —Å—Ç–∞–Ω—Ü–∏–∏ <b>{0}</b></i>'.format(trains[2][trains[0].index(station)]), parse_mode = 'html', reply_markup = markup)
    async def regbuscall(call):
        a = call.from_user.id
        cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
        station = cursor.fetchone()[0]
        stops = []
        markup = types.InlineKeyboardMarkup(row_width = 2)
        if station in ['–ê–≤—Ç–æ–≤–æ–∫–∑–∞–ª –ñ–∏–≤–æ–ø–æ–ª–∏—Å', '–ê–° –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–æ']:
            for st in villages:
                if st!=station:
                    if st in ['–ê–≤—Ç–æ–≤–æ–∫–∑–∞–ª –ñ–∏–≤–æ–ø–æ–ª–∏—Å', '–ê–° –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–æ']:
                        stops.append(types.InlineKeyboardButton(text='üöå {0}'.format(st), callback_data='goreg_{0}'.format(st)))
                    else:
                        stops.append(types.InlineKeyboardButton(text='üöê {0}'.format(st), callback_data='gobus_{0}'.format(st)))
        else:
            for st in ['–ê–≤—Ç–æ–≤–æ–∫–∑–∞–ª –ñ–∏–≤–æ–ø–æ–ª–∏—Å', '–ê–° –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–æ']:	
                stops.append(types.InlineKeyboardButton(text='üöê {0}'.format(st), callback_data='gobus_{0}'.format(st)))
        markup.add(*stops)
        markup.add(types.InlineKeyboardButton(text='üèõ –í—ã–π—Ç–∏ –≤ –≥–æ—Ä–æ–¥', callback_data='city'))
        await call.message.answer('üöè <i>–í—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ <b>{0}</b>\n\n‚ùó –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–π –ø–æ–µ–∑–¥–∫–∏ –Ω–∞ –º–∞—Ä—à—Ä—É—Ç–∫–µ üöê —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>${1}</b>, –Ω–∞ –∞–≤—Ç–æ–±—É—Å–µ üöå - <b>${2}</b></i>'.format(station, buscost, regbuscost), parse_mode = 'html', reply_markup = markup)
    async def ask(user, message):
        try:
            a = user
            now = datetime.now()
            cursor.execute('SELECT pay FROM userdata WHERE user_id = ?', (a,))
            box = cursor.fetchone()[0]
            diff = (now - datetime.fromtimestamp(0)).total_seconds() - box
            if diff >= 86400 and box != 0:
                cursor.execute('UPDATE userdata SET pay = ? WHERE user_id = ?', (0,a,))
                conn.commit()
                rand = random.randint(50,100)
                cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                balance = cursor.fetchone()[0]
                cursor.execute('UPDATE userdata SET balance = ? WHERE user_id = ?', (balance+rand, a,))
                conn.commit()
                await message.answer('<i>–í–∞—à–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞: <b>${0}</b>\n–ü—Ä–∏–Ω–æ—Å–∏–º –∏—Å–∫—Ä–µ–Ω–Ω–∏–µ –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –∑–∞–¥–µ—Ä–∂–∫—É</i>'.format(rand), parse_mode = 'html')
            else:
                if box != 0:
                    h = int(24-ceil(diff/3600))
                    m = int(60-ceil(diff%3600/60))
                    s = int(60-ceil(diff%3600%60))
                    await message.answer('<i>&#10060; –î–æ –∑–∞—Ä–ø–ª–∞—Ç—ã –æ—Å—Ç–∞–ª–æ—Å—å {0} —á–∞—Å–æ–≤ {1} –º–∏–Ω—É—Ç {2} —Å–µ–∫—É–Ω–¥ </i>'.format(h,m,s), parse_mode='html')
                else:
                    markup = types.InlineKeyboardMarkup()
                    markup.add(types.InlineKeyboardButton(text='üíº –†–∞–±–æ—Ç–∞—Ç—å', callback_data='work'))
                    await message.answer('<i>&#10060; –í—ã –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ</i>', parse_mode='html', reply_markup = markup)
        except Exception as e:
            await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
            await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
    async def work(call):
        try:
            a = call.from_user.id
            message = call.message
            now = datetime.now()
            cursor.execute('SELECT pay FROM userdata WHERE user_id = ?', (a,))
            box = cursor.fetchone()[0]
            cursor.execute('SELECT prison FROM userdata WHERE user_id = ?', (a,))
            prson = cursor.fetchone()[0]
            diff = (now - datetime.fromtimestamp(0)).total_seconds() - box
            prison = (now - datetime.fromtimestamp(0)).total_seconds() - prson
            if prison <= 86400*7:
                d = int(7-ceil(prison/86400))
                h = int(24-ceil(prison%86400/3600))
                m = int(60-ceil(prison%86400%3600/60))
                s = int(60-ceil(prison%86400%3600%60))
                await call.answer(text='üëÆ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ–¥–∞–≤–Ω–æ –≤—ã —Å–∏–¥–µ–ª–∏ –≤ —Ç—é—Ä—å–º–µ, –∏ —Ç–µ–ø–µ—Ä—å —É –≤–∞—Å –µ—Å—Ç—å —Å—É–¥–∏–º–æ—Å—Ç—å. –î–æ —Å–Ω—è—Ç–∏—è —Å—É–¥–∏–º–æ—Å—Ç–∏ –æ—Å—Ç–∞–ª–æ—Å—å {0} –¥–Ω–µ–π {1} —á–∞—Å–æ–≤ {2} –º–∏–Ω—É—Ç {3} —Å–µ–∫—É–Ω–¥'.format(d,h,m,s), show_alert = True)
                return
            if box == 0:
                cursor.execute('UPDATE userdata SET pay = ? WHERE user_id = ?', ((now - datetime.fromtimestamp(0)).total_seconds(), a,))
                conn.commit()
                await call.answer(text='üí∞ –í—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å —Å–≤–æ—é –∑–∞—Ä–ø–ª–∞—Ç—É —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞', show_alert = True)
            elif diff <= 86400:
                h = int(24-ceil(diff/3600))
                m = int(60-ceil(diff%3600/60))
                s = int(60-ceil(diff%3600%60))
                await call.answer(text='‚ùå –í—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ. –î–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ—Å—Ç–∞–ª–æ—Å—å {0} —á–∞—Å–æ–≤ {1} –º–∏–Ω—É—Ç {2} —Å–µ–∫—É–Ω–¥'.format(h,m,s), show_alert = True)
            else:
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='üí∞ –ó–∞–±—Ä–∞—Ç—å –∑–∞—Ä–ø–ª–∞—Ç—É', callback_data='salary'))
                await message.answer('<i>&#10060; –ó–∞–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é –∑–∞—Ä–ø–ª–∞—Ç—É –∏ —Å–º–æ–∂–µ—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å —Å–Ω–æ–≤–∞</i>', parse_mode='html', reply_markup = markup)
        except Exception as e:
            await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
            await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')

        except Exception as e:
            await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
            await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
    def access(place, userplace, stage=0):
        acc = ''
        if place in CITY:
            acc+='üöé –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç—Ä–æ–ª–ª–µ–π–±—É—Å–∞ <b>{0}</b>\n'.format(place)
        for line in METRO:
            index = METRO.index(line)
            if place in line:
                if index==0 or index==2:
                    acc+='üöâ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥–æ—Ä–æ–¥—Å–∫–æ–π —ç–ª–µ–∫—Ç—Ä–∏—á–∫–∏ <b>{0}</b> ({1})\n'.format(place, LINES[index].replace(' –≥–æ—Ä–æ–¥—Å–∫–æ–π —ç–ª–µ–∫—Ç—Ä–∏—á–∫–∏', ''))
                else:
                    acc+='üöá –°—Ç–∞–Ω—Ü–∏—è –º–µ—Ç—Ä–æ <b>{0}</b> ({1})\n'.format(place, LINES[index])
        if place in villages:
            acc+='üöê –ê–≤—Ç–æ–±—É—Å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ <b>{0}</b>\n'.format(place)
        if place in trains[0]:
            ind = trains[0].index(place)
            acc+='üöÜ –û—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π –ø—É–Ω–∫—Ç —ç–ª–µ–∫—Ç—Ä–æ–ø–æ–µ–∑–¥–æ–≤ <b>{0}</b> (–ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ - <b>{1}</b>)\n'.format(trains[1][ind], trains[2][ind])
        if stage==0:
            for wlk in walk:
                if place in wlk:
                    ind = wlk.index(place)
                    for wnk in walk:
                        ind2 = walk.index(wnk)
                        if ind2 != walk.index(wlk) and wnk[ind]!='':
                            acc+='üö∂ <b>{0}</b> —Å–µ–∫—É–Ω–¥ —Ö–æ–¥—å–±—ã –¥–æ –º–µ—Å—Ç–Ω–æ—Å—Ç–∏ <b>{1}</b>'.format(walks[ind], wnk[ind])
                            ac = access(wnk[ind], place, 1)
                            if not ac=='–ü–æ—Ö–æ–∂–µ, —á—Ç–æ —Ç–∞–∫–æ–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç':
                                acc+=' –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞:\n‚¨á\n{1}'.format(wnk[ind], ac, place)
                            acc+='\n'
        if place in CITY and userplace in CITY and place!=userplace and stage==0:
            cost = abs(CITY.index(place)-CITY.index(userplace))*cabcost
            acc+='üöï –í—ã–∑–æ–≤ —Ç–∞–∫—Å–∏ –∏–∑ –º–µ—Å—Ç–Ω–æ—Å—Ç–∏ <b>{0}</b> —Å—Ç–æ–∏—Ç <b>${1}</b>\n'.format(userplace, cost)
        if acc!='':
            return acc
        else:
            return '–ü–æ—Ö–æ–∂–µ, —á—Ç–æ —Ç–∞–∫–æ–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'
    async def buscall(call):
        try:
            a = call.from_user.id
            cursor.execute('SELECT line FROM userdata WHERE user_id=?', (a,))
            line = cursor.fetchone()[0]
            cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
            station = cursor.fetchone()[0]
            ind = CITY.index(station)
            markup = types.InlineKeyboardMarkup()
            desc = ''
            if ind == 0 or ind == len(CITY)-1:
                desc = '<b>–ö–æ–Ω–µ—á–Ω–∞—è.</b> –ü—Ä–æ—Å—å–±–∞ –≤—ã–π—Ç–∏ –∏–∑ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω–æ–≥–æ —Å—Ä–µ–¥—Å—Ç–≤–∞'
            if ind > 0:
                prev = CITY[ind-1]
                markup.add(types.InlineKeyboardButton(text='‚¨Ö '+prev, callback_data='trolleybus_back'))
            if ind < len(CITY)-1:
                nxt = CITY[ind+1]
                markup.add(types.InlineKeyboardButton(text='‚û° '+nxt, callback_data='trolleybus_forward'))
            markup.add(types.InlineKeyboardButton(text='üèõ –í—ã–π—Ç–∏ –≤ –≥–æ—Ä–æ–¥', callback_data='city'))
            route = ''
            for stat in CITY:
                if CITY.index(stat)!=0:
                    route+=', '
                if stat!=station:
                    route+=stat
                else:
                    route+='<b>{0}</b>'.format(stat)
            msg = await call.message.answer('<i><b>&#128654; –ú–∞—Ä—à—Ä—É—Ç —Ç—Ä–æ–ª–ª–µ–π–±—É—Å–∞:</b> {2}\n\n–û—Å—Ç–∞–Ω–æ–≤–∫–∞ <b>{0}</b>\n{1}</i>'.format(station, desc, route), parse_mode = 'html', reply_markup = markup)
            await asyncio.sleep(ticket_time)
            try:
                await main.delete_message(call.message.chat.id, msg['message_id'])
            except:
                pass
        except Exception as e:
            await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
            await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
    async def metrocall(call):
        try:
            a = call.from_user.id
            cursor.execute('SELECT line FROM userdata WHERE user_id=?', (a,))
            line = cursor.fetchone()[0]
            cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
            station = cursor.fetchone()[0]
            ind = metro[line].index(station)
            markup = types.InlineKeyboardMarkup()
            desc = ''
            if transfer(a)!='':
                desc+='–ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø–æ–µ–∑–¥–∞–º {0}\n'.format(linez[transfer(a)])
            if station=='–ö–æ—Ç–∞–π—Å–∫–∏–π –ú–µ–¥–∏–Ω—Å—Ç–∏—Ç—É—Ç' or (station=='–ü–ª–æ—â–∞–¥—å –ê–¥–º–∏–Ω–æ–≤' and line==0) or (station=='–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∞—è' and line==0) or station=='–ö—Ä–∞–π–Ω–∏–π –°–µ–≤–µ—Ä' or station=='–°–µ–≤–µ—Ä–æ-–í–æ—Å—Ç–æ–∫':
                desc += '<b>–ö–æ–Ω–µ—á–Ω–∞—è.</b> –ü–æ–µ–∑–¥ –¥–∞–ª—å—à–µ –Ω–µ –∏–¥—ë—Ç, –ø—Ä–æ—Å—å–±–∞ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤ –≤—ã–π—Ç–∏ –∏–∑ –≤–∞–≥–æ–Ω–æ–≤'
            if ind > 0:
                prev = metro[line][ind-1]
                markup.add(types.InlineKeyboardButton(text='‚¨Ö '+prev, callback_data='back'))
            if ind < len(metro[line])-1:
                nxt = metro[line][ind+1]
                markup.add(types.InlineKeyboardButton(text='‚û° '+nxt, callback_data='forward'))
            if transfer(a)!='':
                markup.add(types.InlineKeyboardButton(text='üîÑ '+LINES[transfer(a)], callback_data='transfer'))
            markup.add(types.InlineKeyboardButton(text='üèõ –í—ã–π—Ç–∏ –≤ –≥–æ—Ä–æ–¥', callback_data='city'))
            map = 'https://telegra.ph/file/d8e0fbd1a975625a86713.jpg'
            if line!=2 and line!=0:
                msg = await main.send_photo(call.message.chat.id, map, caption='<i>–°—Ç–∞–Ω—Ü–∏—è <b>{0}</b>\n{1}</i>'.format(station, desc), parse_mode = 'html', reply_markup = markup)
            else:
                msg = await main.send_photo(call.message.chat.id, map, caption='<i>–û—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π –ø—É–Ω–∫—Ç <b>{0}</b>\n{1}</i>'.format(station, desc), parse_mode = 'html', reply_markup = markup)
            await asyncio.sleep(ticket_time)
            try:
                await main.delete_message(call.message.chat.id, msg['message_id'])
            except:
                pass
        except Exception as e:
            await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
            await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
    async def tostation(user, station, line=100):
        a = user
        if line == 100:
            cursor.execute('SELECT line FROM userdata WHERE user_id=?', (a,))
            lines = cursor.fetchone()[0]
        else:
            lines = line
        cursor.execute('UPDATE userdata SET place = ? WHERE user_id=?', (station, a,))
        conn.commit()
        cursor.execute('UPDATE userdata SET line = ? WHERE user_id=?', (lines, a,))
        conn.commit()
    def transfer(user):
        a = user
        cursor.execute('SELECT line FROM userdata WHERE user_id = ?', (a,))
        line = cursor.fetchone()[0]
        cursor.execute('SELECT place FROM userdata WHERE user_id = ?', (a,))
        station = cursor.fetchone()[0]
        for i in range(0,4):
            if i!=line and station in metro[i]:
                return i
        return ''
    async def setrasa(message, user, rasa, photo):
        photos = ['https://te.legra.ph/file/e088cc301adede07db382.jpg', 'https://te.legra.ph/file/ae98cd7c2cad60f6fdcd1.jpg', 'https://te.legra.ph/file/3f3cbfb04a7d1c39bb849.jpg', 'https://te.legra.ph/file/debe702d527967f9afd9a.jpg', 'https://te.legra.ph/file/5a07905d42444f2294418.jpg']
        try:
            a = user.id
            cursor.execute('UPDATE userdata SET rase = ? WHERE user_id = ?', (rasa, a,))
            conn.commit()
            cursor.execute('UPDATE userdata SET  = ? WHERE user_id = ?', (rasa, a,))
            conn.commit()
            cursor.execute('SELECT rasa FROM userdata WHERE user_id = ?', (a,))
            ras = cursor.fetchone()[0]
            await main.send_photo(message.chat.id, photos[photo], caption='<i>–í–∞—à–∞ —Ä–∞—Å–∞: <b>{0}</b></i>'.format(ras), parse_mode = 'html')
        except Exception as e:
            await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
            await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
    @bot.message_handler(content_types=['text'])
    async def get_text_messages(message: types.Message):
        try:
            a = message.from_user.id
            chid = message.chat.id
            user = message.from_user
            cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (message.chat.id,))
            count = cursor.fetchone()[0]
            if count != 0:
                cursor.execute("SELECT mat FROM clandata WHERE group_id=?", (message.chat.id,))
                mat = cursor.fetchone()[0]
                if mat == 0:
                    for WORD in message.text.lower().split(' '):
                        if WORD.replace(',', '').replace(' ', '') in badwords:
                            await main.delete_message(message.chat.id, message.message_id)
                            return
            await check(message.from_user.id, message.chat.id)
            if message.from_user.is_bot:
                return
            try:
                cursor.execute('SELECT process FROM userdata WHERE user_id=?', (a,))
                process = cursor.fetchone()[0]
            except:
                if message.chat.type=='private' and message.text.lower()!=createacc:
                    process = 'login'
                else:
                    process = ''
            if process=='login':
                key = message.text
                cursor.execute('SELECT COUNT(*) FROM userdata WHERE user_id=?', (a,))
                count = cursor.fetchone()[0]
                if count>0:
                    cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                    conn.commit()
                    await main.send_message(chid, '<i>–ö–∞–∂–µ—Ç—Å—è, –≤—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –°–Ω–∞—á–∞–ª–∞ –≤—ã–π–¥–∏—Ç–µ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞</i>', parse_mode='html')
                    return
                cursor.execute('SELECT COUNT(*) FROM userdata WHERE accesskey=? AND user_id=0', (key,))
                count = cursor.fetchone()[0]
                if count!=1:
                    cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                    conn.commit()
                    await main.send_message(chid, '<i>–ö–∞–∂–µ—Ç—Å—è, –≤—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–ª—é—á</i>', parse_mode='html')
                    return
                cursor.execute('UPDATE userdata SET user_id=? WHERE accesskey=?', (a,key,))
                conn.commit()
                cursor.execute('UPDATE userdata SET user_name=? WHERE accesskey=?', (user.first_name,key,))
                conn.commit()
                cursor.execute('UPDATE userdata SET user_surname=? WHERE accesskey=?', (user.last_name,key,))
                conn.commit()
                cursor.execute('UPDATE userdata SET username=? WHERE accesskey=?', (user.username,key,))
                conn.commit()
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                conn.commit()
                await main.send_message(fid, '<i><b><a href="tg://user?id={0}">{1}</a></b> –≤–æ—à—ë–ª(-–∞) –≤ –∞–∫–∫–∞—É–Ω—Ç –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞\n#user_login</i>'.format(user.id, user.first_name), parse_mode='html')
                await startdef(message)
            if process=='setkey':
                if message.chat.type!='private':
                    await main.send_message(chid, '<i>–í —Ü–µ–ª—è—Ö –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –õ–° —Å –±–æ—Ç–æ–º –∏ –∑–∞–Ω–æ–≤–æ –≤–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞</i>', parse_mode='html')
                    cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                    conn.commit()
                    return
                chid = message.chat.id
                a = message.from_user.id
                key = message.text
                cursor.execute('SELECT COUNT(*) FROM userdata WHERE accesskey=?', (key,))
                count = cursor.fetchone()[0]
                if count!=0:
                    await main.send_message(chid, '<i>–¢–∞–∫–æ–π –∫–ª—é—á —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω</i>', parse_mode='html')
                    return
                cursor.execute('UPDATE userdata SET accesskey = ? WHERE user_id = ?', (message.text, a,))
                conn.commit()
                cursor.execute('SELECT accesskey FROM userdata WHERE user_id = ?', (a,))
                desc = cursor.fetchone()[0]
                await message.answer('<i>–í–∞—à –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞: \n<b>{0}</b></i>'.format(desc), parse_mode = 'html')
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                conn.commit()
            if process=='seekhouse':
                if message.chat.type=='private':
                    a = message.from_user.id
                    house = int(message.text)
                    cursor.execute('SELECT place FROM userdata WHERE user_id = ?', (a,))
                    place = cursor.fetchone()[0]
                    clans = ''
                    cursor.execute('SELECT count(*) FROM clandata WHERE hqplace = ? AND type=? AND address=?', (place, 'public', house,))
                    count = cursor.fetchone()[0]
                    if count == 0:
                        await message.answer('<i>–ö–ª–∞–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ :(</i>', parse_mode = 'html')
                        cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                        conn.commit()
                        return
                    cursor.execute('SELECT * FROM clandata WHERE hqplace = ? AND type = ? AND address=? ORDER BY address LIMIT 25', (place, 'public', house,))
                    for row in cursor:
                        clans+='\n<a href = "{0}">{1}</a>'.format(row[8], row[1])
                    markup = types.InlineKeyboardMarkup()
                    markup.add(types.InlineKeyboardButton(text='–ò—Å–∫–∞—Ç—å –ø–æ –Ω–æ–º–µ—Ä—É –¥–æ–º–∞', callback_data='hq_number'))
                    await message.answer('<i>&#127970; –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∫–ª–∞–Ω—ã: <b>{0}</b></i>'.format(clans), parse_mode = 'html', reply_markup=markup)
                    cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                    conn.commit()
            if process=='setbio':
                a = message.from_user.id
                cursor.execute('UPDATE userdata SET desc = ? WHERE user_id = ?', (message.text, a,))
                conn.commit()
                cursor.execute('SELECT desc FROM userdata WHERE user_id = ?', (a,))
                desc = cursor.fetchone()[0]
                await message.answer('<i>–í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ: \n<b>{0}</b></i>'.format(desc), parse_mode = 'html')
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                conn.commit()
            if process=='setnick':
                a = message.from_user.id
                cursor.execute('UPDATE userdata SET nick = ? WHERE user_id = ?', (message.text, a,))
                conn.commit()
                cursor.execute('SELECT nick FROM userdata WHERE user_id = ?', (a,))
                nick = cursor.fetchone()[0]
                await message.answer('<i>–í–∞—à –Ω–∏–∫: <b>{0}</b></i>'.format(nick), parse_mode = 'html')
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                conn.commit()
            if process=='setphoto':
                a = message.from_user.id
                cursor.execute('UPDATE userdata SET photo = ? WHERE user_id = ?', (message.text, a,))
                conn.commit()
                cursor.execute('SELECT photo FROM userdata WHERE user_id = ?', (a,))
                photo = cursor.fetchone()[0]
                try:
                    await main.send_photo(message.chat.id, photo, caption = '<i>–í–∞—à–µ —Ñ–æ—Ç–æ</i>', parse_mode = 'html')
                except:
                    await message.answer('<i>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ñ–æ—Ç–æ. –§–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è —É–¥–∞–ª–µ–Ω–æ</i>', parse_mode = 'html')
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                conn.commit()
            if process=='clanname':
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '<i>&#10060; –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤</i>', parse_mode='html')
                    return
                cursor.execute('UPDATE clandata SET name=? WHERE group_id=?', (message.text, chid,))
                conn.commit()
                cursor.execute('SELECT name FROM clandata WHERE group_id=?', (chid,))
                name = cursor.fetchone()[0]
                await main.send_message(chid, '<i>–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞: <b>{0}</b></i>'.format(name), parse_mode = 'html')
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                conn.commit()
            if process=='clanbio':
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '<i>&#10060; –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤</i>', parse_mode='html')
                    return
                cursor.execute('UPDATE clandata SET bio=? WHERE group_id=?', (message.text, chid,))
                conn.commit()
                cursor.execute('SELECT bio FROM clandata WHERE group_id=?', (chid,))
                bio = cursor.fetchone()[0]
                await main.send_message(chid, '<i>–ù–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–ª–∞–Ω–∞: <b>{0}</b></i>'.format(bio), parse_mode = 'html')
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                conn.commit()
            if process=='clanphoto':
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '<i>&#10060; –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤</i>', parse_mode='html')
                    return
                cursor.execute('UPDATE clandata SET photo=? WHERE group_id=?', (message.text, chid,))
                conn.commit()
                cursor.execute('SELECT photo FROM clandata WHERE group_id=?', (chid,))
                photo = cursor.fetchone()[0]
                try:
                    await main.send_photo(message.chat.id, photo, caption = '<i>–§–æ—Ç–æ –∫–ª–∞–Ω–∞</i>', parse_mode = 'html')
                except:
                    await message.answer('<i>–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ñ–æ—Ç–æ. –§–æ—Ç–æ –∫–ª–∞–Ω–∞ —É–¥–∞–ª–µ–Ω–æ</i>', parse_mode = 'html')
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                conn.commit()
            if process=='clanuser':
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '<i>&#10060; –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤</i>', parse_mode='html')
                    return
                cursor.execute('UPDATE clandata SET username=? WHERE group_id=?', (message.text, chid,))
                conn.commit()
                cursor.execute('SELECT name FROM clandata WHERE group_id=?', (chid,))
                name = cursor.fetchone()[0]
                await startdef(message)
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                conn.commit()
        except Exception as e:
            if 'invalid literal' in str(e):
                await main.send_message(chid, '&#10060; <i><b>–û—à–∏–±–∫–∞:</b> –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ</i>', parse_mode='html')
            else:
                await main.send_message(chid, '&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await main.send_message(chid, '<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if message.text.lower().startswith('–∂–∏–≤–æ–ø–æ–ª–∏—Å, '):
            text = message.text.lower()[11:]
            if text.startswith('–ø—Ä–∏–≤–µ—Ç'):
                await message.reply('<i>{0}</i>'.format(random.choice(['–î–∞-–¥–∞, –ø—Ä–∏–≤–µ—Ç', '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–ó–¥—Ä–∞–≤–∏—è –∂–µ–ª–∞—é', '–í–µ—á–µ—Ä –≤ —Ö–∞—Ç—É', '–ù—É –ø—Ä–∏–≤–µ—Ç!'])), parse_mode='html')
            elif text.startswith('–∫–∞–∫ –¥–µ–ª–∞'):
                await message.reply('<i>{0}</i>'.format(random.choice(['–ù–æ—Ä–º–∞–ª—å–Ω–æ', '–ù–æ—Ä–º–∞–ª—å–Ω–æ. –ê —É —Ç–µ–±—è?', '–¢–∏–ø–∞ —Ç–æ–≥–æ', '–ù–æ—Ä–º', '–ù—É, –Ω–æ—Ä–º–∞—Å —Ç–∏–ø–∞'])), parse_mode='html')
            elif '–∏–ª–∏' in text:
                await message.reply('<i>{0}</i>'.format(random.choice(text.split(' –∏–ª–∏ '))), parse_mode='html')
            else:
                await message.reply('<i>{0}</i>'.format(random.choice(['–ê?', '–ß—Ç–æ –Ω–∞–¥–æ?', '–ß—ë –∑–≤–∞–ª?', '–ï—â—ë —Ä–∞–∑ –ø–æ–∑–æ–≤—ë—à—å - –ø–æ–ª—É—á–∏—à—å –±–∞–Ω!', '–ò —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç', '–î–∞?'])), parse_mode='html')
        if message.text.lower() == createacc:
            await create_acc(message.from_user, message.chat.id)
        if message.text.lower() == '/id':
            if hasattr(message.reply_to_message, "text"):
                await message.reply('{0.id}'.format(message.reply_to_message.from_user))
            else:
                await message.reply('{0.id}'.format(message.from_user))
        if message.text.lower() == '—Ö—Ç–æ —è':
            await message.reply('–¢—ã –¥–∞—É–Ω' if message.from_user.id == 1002930622 else '–¢—ã {0.first_name}'.format(message.from_user))
        if message.text.lower() == '–∞—Ö–∞—Ö':
            await message.reply('–†–∞–∑—Ä—ã–≤–Ω–∞—è')
        if message.text.lower() == '–∏–¥':
            try:
                a = message.from_user.id
                cursor.execute('SELECT user_id FROM userdata WHERE user_id=?', (a,))
                for ids in cursor.fetchall():
                    await message.answer(ids)
            except Exception as e:
                await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if message.text.lower() == '–º–æ–π –±–∞–ª–∞–Ω—Å':
            try:
                a = message.from_user.id
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                money = cursor.fetchone()[0]
                cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                nick = cursor.fetchone()[0]
                cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                rasa = cursor.fetchone()[0]
                await message.answer('<i><b><a href="tg://user?id={1}">{3}{0}</a></b> —Ä–∞–∑–º–∞—Ö–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–¥ –≤—Å–µ–º–∏ —Å–≤–æ–∏–º–∏ –Ω–∞–∫–æ–ø–ª–µ–Ω–∏—è–º–∏ –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ <b>${2}</b></i>'.format(nick, a, money, rasa), parse_mode = 'html')
            except Exception as e:
                await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if message.text.startswith('$='):
            try:
                a = message.from_user.id
                cursor.execute('SELECT rang FROM userdata WHERE user_id=?', (a,))
                rang = cursor.fetchone()[0]
                if rang<2:
                    await message.answer('&#10060; <i>–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —Ä–∞–Ω–≥–∞ <b>[2] –ê–¥–º–∏–Ω</b></i>', parse_mode='html')
                    return
                cursor.execute('UPDATE userdata SET balance = ? WHERE user_id = ?', (int(message.text[2:]), message.from_user.id,))
                conn.commit()
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                await message.answer('–í–∞—à –±–∞–ª–∞–Ω—Å: {0}'.format(cursor.fetchone()[0]))
            except Exception as e:
                await message.answer('&#10060; <i><b>–û—à–∏–±–∫–∞:</b> {0}</i>'.format(e), parse_mode='html')
        if message.text.lower()=='–≤—ã–ª–µ—á–∏—Ç—å':
            if not hasattr(message.reply_to_message, 'text'):
                await message.answer('<i>–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>', parse_mode='html')
            else:
                await cure(message.from_user.id, message.reply_to_message.from_user.id, message.chat.id)
        if message.text.lower()=='–æ—Ç—Ä–∞–≤–∏—Ç—å':
            if not hasattr(message.reply_to_message, 'text'):
                await message.answer('<i>–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>', parse_mode='html')
            else:
                await poison(message.from_user.id, message.reply_to_message.from_user.id, message.chat.id)
        if message.text.lower()=='–≤—ã—Å—Ç—Ä–µ–ª':
            if not hasattr(message.reply_to_message, 'text'):
                await message.answer('<i>–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>', parse_mode='html')
            else:
                await shoot(message.from_user.id, message.reply_to_message.from_user.id, message.chat.id)
        if message.text.lower().startswith('/ban '):
            try:
                arr = message.text.split(" ", maxsplit=2)
                a = message.from_user.id
                cursor.execute('SELECT rang FROM userdata WHERE user_id=?', (a,))
                rang = cursor.fetchone()[0]
                if rang<2:
                    await message.answer('&#10060; <i>–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —Ä–∞–Ω–≥–∞ <b>[2] –ê–¥–º–∏–Ω</b></i>', parse_mode='html')
                    return
                cursor.execute('SELECT typeof({0}) FROM userdata'.format(arr[1]))
                typ = cursor.fetchone()[0]
                if typ=='text':
                    cursor.execute('UPDATE userdata SET {0} = ? WHERE user_id = ?'.format(arr[1]), (arr[2], a,))
                else:
                    cursor.execute('UPDATE userdata SET {0} = ? WHERE user_id = ?'.format(arr[1]), (int(arr[2]), a,))
                conn.commit()
                cursor.execute('SELECT {0} FROM userdata WHERE user_id=?'.format(arr[1]), (a,))
                await message.answer('–†–µ–∑—É–ª—å—Ç–∞—Ç: {0}'.format(cursor.fetchone()[0]))
            except Exception as e:
                await message.answer('&#10060; <i><b>–û—à–∏–±–∫–∞:</b> {0}</i>'.format(e), parse_mode='html')
        if message.text.lower().startswith('/update '):
            try:
                arr = message.text.split(" ", maxsplit=3)
                cursor.execute('SELECT rang FROM userdata WHERE user_id=?', (a,))
                rang = cursor.fetchone()[0]
                cursor.execute('SELECT rang FROM userdata WHERE user_id=?', (arr[1],))
                orang = cursor.fetchone()[0]
                cursor.execute('SELECT {0} FROM userdata WHERE user_id=?'.format(arr[2]), (arr[1],))
                val = cursor.fetchone()[0]
                if int(arr[1]) == 1006534370 and message.from_user.id!=1006534370 and (rang!=3 and arr[2]!='rang'):
                    await message.answer('&#10060; <i>–°–õ–´–®–¨, –ó–ê–•–û–¢–ï–õ –ò–ú–ü–ï–†–ê–¢–û–†–£ –ò–ù–í–ï–ù–¢–ê–†–¨ –û–ë–ù–£–õ–ò–¢–¨, –ü–ò–î–ê–†–ê–ó?</i>', parse_mode='html')
                    return
                if arr[2]=='desc' or arr[2]=='nick' or arr[2]=='user_id' or (arr[2] == 'rasa' and orang>=2):
                    await message.answer('&#10060; <i>–°–õ–´–®–¨, –≠–¢–û –ú–ï–ù–Ø–¢–¨ –ù–ï–õ–¨–ó–Ø!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!</i>', parse_mode='html')
                    return
                a = message.from_user.id
                cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                rasa = cursor.fetchone()[0]
                cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                nick = cursor.fetchone()[0]
                if rang<2:
                    await message.answer('&#10060; <i>–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —Ä–∞–Ω–≥–∞ <b>[2] –ê–¥–º–∏–Ω</b></i>', parse_mode='html')
                    return
                cursor.execute('SELECT typeof({0}) FROM userdata'.format(arr[2]))
                typ = cursor.fetchone()[0]
                if typ=='text':
                    cursor.execute('UPDATE userdata SET {0} = ? WHERE user_id = ?'.format(arr[2]), (arr[3], int(arr[1]),))
                else:
                    cursor.execute('UPDATE userdata SET {0} = ? WHERE user_id = ?'.format(arr[2]), (int(arr[3]), int(arr[1]),))
                conn.commit()
                cursor.execute('SELECT {0} FROM userdata WHERE user_id=?'.format(arr[2]), (arr[1],))
                await message.answer('<i>–†–µ–∑—É–ª—å—Ç–∞—Ç: <b>{0}</b></i>'.format(cursor.fetchone()[0]), parse_mode = 'html')
                cursor.execute("SELECT COUNT(*) FROM userdata WHERE user_id=?", (arr[1],))
                count = cursor.fetchone()[0]
                if count == 1:
                    cursor.execute("SELECT rasa FROM userdata WHERE user_id=?", (arr[1],))
                    orasa = cursor.fetchone()[0]
                    cursor.execute("SELECT nick FROM userdata WHERE user_id=?", (arr[1],))
                    onick = cursor.fetchone()[0]
                    ouser = "<a href='tg://user?id={0}'>{1}{2}</a>".format(arr[1], orasa, onick)
                else:
                    ouser = "–Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω"
                await main.send_message(fid, "<i><b><a href='tg://user?id={0}'>{1}{2}</a></b> –≤—ã–ø–æ–ª–Ω–∏–ª –∫–æ–º–∞–Ω–¥—É:\n\n<code>{3}</code>\n\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: <b>{4}</b>\n–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: <b>{5}</b>\n#admin_update</i>".format(a, rasa, nick, message.text.lower(), ouser, val), parse_mode = 'html')
            except Exception as e:
                await message.answer('&#10060; <i><b>–û—à–∏–±–∫–∞:</b> {0}</i>'.format(e), parse_mode='html')
        if message.text.lower().startswith('/broadcast '):
            try:
                text = message.text[11:]
                a = message.from_user.id
                cursor.execute('SELECT rang FROM userdata WHERE user_id=?', (a,))
                rang = cursor.fetchone()[0]
                cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                rasa = cursor.fetchone()[0]
                cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                nick = cursor.fetchone()[0]
                if rang<2:
                    await message.answer('&#10060; <i>–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —Ä–∞–Ω–≥–∞ <b>[2] –ê–¥–º–∏–Ω</b></i>', parse_mode='html')
                    return
                cursor.execute('SELECT user_id FROM userdata')
                k=0
                ke=0
                for usid in cursor.fetchall():
                    try:
                        await main.send_message(usid[0], '<i><b>–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n<b>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:</b> <a href="tg://user?id={0}">{1}{2}</a></b> ({4})\n\n{3}</i>'.format(a, rasa, nick, text, message.from_user.first_name), parse_mode='html')
                        k+=1
                    except Exception as e:
                        ke+=1
                await main.send_message(a, '<i>&#128227; <b>–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –∑–∞–≤–µ—Ä—à–µ–Ω–∞</b>\n&#9989; –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: {0}\n&#10060; –û—à–∏–±–∫–∏: {1}</i>'.format(k, ke), parse_mode='html')
                cursor.execute('SELECT group_id FROM clandata WHERE notif=1')
                k=0
                ke=0
                for usid in cursor.fetchall():
                    try:
                        await main.send_message(usid[0], '<i><b>–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n<b>–û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å:</b> <a href="tg://user?id={0}">{1}{2}</a></b> ({4})\n\n{3}</i>'.format(a, rasa, nick, text, message.from_user.first_name), parse_mode='html')
                        k+=1
                    except Exception as e:
                        ke+=1
                await main.send_message(a, '<i>&#128227; <b>–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ –∫–ª–∞–Ω–∞–º –∑–∞–≤–µ—Ä—à–µ–Ω–∞</b>\n&#9989; –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: {0}\n&#10060; –û—à–∏–±–∫–∏: {1}</i>'.format(k, ke), parse_mode='html')
            except Exception as e:
                await message.answer('&#10060; <i><b>–û—à–∏–±–∫–∞:</b> {0}</i>'.format(e), parse_mode='html')
        if message.text.lower().startswith('/select '):
            try:
                arr = message.text.lower().split(" ")
                a = message.from_user.id
                cursor.execute('SELECT rang FROM userdata WHERE user_id=?', (a,))
                rang = cursor.fetchone()[0]
                if rang<2:
                    await message.answer('&#10060; <i>–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —Ä–∞–Ω–≥–∞ <b>[2] –ê–¥–º–∏–Ω</b></i>', parse_mode='html')
                    return
                cursor.execute('SELECT {0} FROM userdata WHERE user_id=?'.format(arr[2]), (arr[1],))
                await message.answer('–†–µ–∑—É–ª—å—Ç–∞—Ç: {0}'.format(cursor.fetchone()[0]))
            except Exception as e:
                await message.answer('&#10060; <i><b>–û—à–∏–±–∫–∞:</b> {0}</i>'.format(e), parse_mode='html')
        if message.text.lower().startswith('—á–µ–∫ '):
            try:
                a = message.from_user.id
                try:
                    money = int(message.text[4:])
                except:
                    try:
                        money = float(message.text[4:])
                    except:
                        return
                    else:
                        await message.answer('&#10060; <i><b>–û—à–∏–±–∫–∞:</b> –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ</i>', parse_mode='html')
                    return
                cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                rasa = cursor.fetchone()[0]
                cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                nick = cursor.fetchone()[0]
                if money<=0:
                    markup = types.InlineKeyboardMarkup()
                    markup.add(types.InlineKeyboardButton(text='üíµ –û–ø–ª–∞—Ç–∏—Ç—å —Å—á—ë—Ç', callback_data='paybill {0} {1}'.format(-money, a)))
                    await message.answer('<i>&#128181; <b><a href="tg://user?id={3}">{0}{1}</a></b> –≤—ã—Å—Ç–∞–≤–∏–ª –≤–∞–º —Å—á—ë—Ç –Ω–∞ —Å—É–º–º—É <b>${2}</b></i>'.format(rasa, nick, -money, a), parse_mode='html', reply_markup = markup)
                    if money<0:
                        await main.send_message(fid, '<i>&#128178; <b><a href="tg://user?id={3}">{0}{1}</a></b> –≤—ã—Å—Ç–∞–≤–∏–ª —Å—á—ë—Ç –Ω–∞ <b>${2}</b>\n#user_check</i>'.format(rasa, nick, -money, a), parse_mode='html')
                    return
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                if balance>=money:
                    cursor.execute('UPDATE userdata SET balance = ? WHERE user_id=?', (balance-money, a,))
                    conn.commit()
                    markup = types.InlineKeyboardMarkup()
                    markup.add(types.InlineKeyboardButton(text='üí≤ –ó–∞–±—Ä–∞—Ç—å –¥–µ–Ω—å–≥–∏', callback_data='check_{0}'.format(money)))
                    await message.answer('<i>&#128178; <b><a href="tg://user?id={3}">{0}{1}</a></b> –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–∞–º <b>${2}</b></i>'.format(rasa, nick, money, a), parse_mode='html', reply_markup = markup)
                    if money>0:
                        await main.send_message(fid, '<i>&#128178; <b><a href="tg://user?id={3}">{0}{1}</a></b> –≤—ã–ø–∏—Å–∞–ª —á–µ–∫ –Ω–∞ <b>${2}</b>\n#user_bill</i>'.format(rasa, nick, money, a), parse_mode='html')
                else:
                    await message.answer('&#10060; <i>–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥</i>', parse_mode='html')
                try:
                    await main.delete_message(message.chat.id, message.message_id)
                except:
                    pass
            except Exception as e:
                await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if message.text.lower().startswith('–ø—Ä–æ–¥–∞—Ç—å '):
            try:
                a = message.from_user.id
                arr = message.text.lower().split(' ')
                item = arr[1]
                if not item in items[0]:
                    await message.answer('&#10060; <i>–¢–∞–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ</i>', parse_mode='html')
                    return
                else:
                    temp = item
                    ind = items[0].index(temp)
                    item = items[1][ind]
                    itm = temp+' '+items[2][ind]
                try:
                    cost = int(arr[2])
                except:
                    cost = 0
                if cost<0:
                    await message.reply('&#10060; <i>–°–ª–æ—Ç—ã —Ç–∞–∫ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç</i>', parse_mode='html')
                    return
                cursor.execute('SELECT {0} FROM userdata WHERE user_id=?'.format(item), (a,))
                balance = cursor.fetchone()[0]
                cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                rasa = cursor.fetchone()[0]
                cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                nick = cursor.fetchone()[0]
                if balance>=1:
                    cursor.execute('UPDATE userdata SET {0} = ? WHERE user_id=?'.format(item), (balance-1, a,))
                    conn.commit()
                    markup = types.InlineKeyboardMarkup()
                    markup.add(types.InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å –∑–∞ ${0}'.format(cost), callback_data='slot {0} {1} {2}'.format(item, cost, a)))
                    await message.answer('<i><b><a href="tg://user?id={3}">{0}{1}</a></b> –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–∞–º <b>{4}</b> –∑–∞ <b>${2}</b></i>'.format(rasa, nick, cost, a, itm), parse_mode='html', reply_markup = markup)
                    if cost>0:
                        await main.send_message(fid, '<i><b><a href="tg://user?id={3}">{0}{1}</a></b> –ø—Ä–æ–¥–∞—ë—Ç <b>{4}</b> –∑–∞ <b>${2}</b>\n#user_sellitem</i>'.format(rasa, nick, cost, a, itm), parse_mode='html')
                else:
                    await message.answer('&#10060; <i>–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –µ–¥–∏–Ω–∏—Ü –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞</i>', parse_mode='html')
                try:
                    await main.delete_message(message.chat.id, message.message_id)
                except:
                    pass
            except Exception as e:
                await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if message.text.lower().startswith('–ø–µ—Ä–µ–¥–∞—Ç—å ') or message.text.lower().startswith('–ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å '):
            try:
                a = message.from_user.id
                chid = message.chat.id
                if hasattr(message.reply_to_message, 'text'):
                    if message.text.lower().startswith('–ø–µ—Ä–µ–¥–∞—Ç—å '):
                        amount = int(message.text[9:])
                    else:
                        amount = int(message.text[13:])
                    cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                    mymoney = cursor.fetchone()[0]
                    a = message.reply_to_message.from_user.id
                    cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                    othmoney = cursor.fetchone()[0]
                    if mymoney >= amount:
                        if amount >= 0:
                            cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                            nick = cursor.fetchone()[0]
                            cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                            rasa = cursor.fetchone()[0]
                            if message.from_user.id == message.reply_to_message.from_user.id:
                                await main.send_message(chid, '<i><b><a href="tg://user?id={3}">{0}{1}</a></b> –ø–µ—Ä–µ–∫–ª–∞–¥—ã–≤–∞–µ—Ç –∏–∑ –∫–∞—Ä–º–∞–Ω–∞ –≤ –∫–∞—Ä–º–∞–Ω <b>${2}</b></i>'.format(rasa, nick, amount, message.from_user.id), parse_mode='html')
                                return
                            cursor.execute('UPDATE userdata SET balance = ? where user_id = ?', (mymoney - amount, message.from_user.id))
                            cursor.execute('UPDATE userdata SET balance = ? where user_id = ?', (othmoney + amount, message.reply_to_message.from_user.id))
                            conn.commit()
                            a = message.from_user.id
                            cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                            mymoney = cursor.fetchone()[0]
                            oth = message.reply_to_message.from_user.id
                            cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (oth,))
                            othmoney = cursor.fetchone()[0]
                            cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                            nick = cursor.fetchone()[0]
                            cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                            rasa = cursor.fetchone()[0]
                            cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (oth,))
                            onick = cursor.fetchone()[0]
                            cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (oth,))
                            orasa = cursor.fetchone()[0]
                            await message.answer('<i><b><a href="tg://user?id={2}">{0}{1}</a></b> –ø–µ—Ä–µ–¥–∞–ª <b><a href="tg://user?id={3}">{4}{5}</a></b> ${6}</i>'.format(rasa, nick, a, oth, orasa, onick, amount), parse_mode = 'html')
                            if amount>0:
                               await main.send_message(fid, '<i><b><a href="tg://user?id={2}">{0}{1}</a></b> –ø–µ—Ä–µ–¥–∞–ª <b><a href="tg://user?id={3}">{4}{5}</a></b> ${6}\n#user_moneyshare</i>'.format(rasa, nick, a, oth, orasa, onick, amount), parse_mode = 'html')
                        else:
                            await message.answer('<i>–í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</i>', parse_mode='html')
                    else:
                        await message.answer('<i>–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥</i>', parse_mode='html')
                else:
                    if message.chat.type == 'private':
                        return
                    if message.text.lower().startswith('–ø–µ—Ä–µ–¥–∞—Ç—å '):
                        amount = int(message.text[9:])
                    else:
                        amount = int(message.text[13:])
                    cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                    count = cursor.fetchone()[0]
                    if count == 0:
                        await startdef(message)
                        return
                    cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                    mymoney = cursor.fetchone()[0]
                    cursor.execute('SELECT balance FROM clandata WHERE group_id=?', (chid,))
                    othmoney = cursor.fetchone()[0]
                    if mymoney >= amount:
                        if amount >= 0:
                            cursor.execute('UPDATE userdata SET balance = ? where user_id = ?', (mymoney - amount, message.from_user.id))
                            cursor.execute('UPDATE clandata SET balance = ? where group_id = ?', (othmoney + amount, chid))
                            conn.commit()
                            cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                            mymoney = cursor.fetchone()[0]
                            cursor.execute('SELECT balance FROM clandata WHERE group_id=?', (chid,))
                            othmoney = cursor.fetchone()[0]
                            cursor.execute('SELECT name FROM clandata WHERE group_id=?', (chid,))
                            chn = cursor.fetchone()[0]
                            cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                            nick = cursor.fetchone()[0]
                            cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                            rasa = cursor.fetchone()[0]
                            await message.answer('<i><b><a href="tg://user?id={2}">{0}{1}</a></b> –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–ª –Ω–∞ –Ω—É–∂–¥—ã –∫–ª–∞–Ω–∞ <b>${3}</b>. –¢–µ–ø–µ—Ä—å –±–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞: <b>${4}</b></i>'.format(rasa, nick, a, amount, othmoney), parse_mode = 'html')
                            if amount>0:
                                await main.send_message(fid, '<i><b><a href="tg://user?id={2}">{0}{1}</a></b> –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–ª –Ω–∞ –Ω—É–∂–¥—ã –∫–ª–∞–Ω–∞ <b>${3}</b>. –¢–µ–ø–µ—Ä—å –±–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞ <b>{5} ({6})</b>: <b>${4}</b>\n#clan_moneyshare</i>'.format(rasa, nick, a, amount, othmoney, chn, chid), parse_mode = 'html')
                        else:
                            await message.answer('<i>–í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</i>', parse_mode='html')
                    else:
                        await message.answer('<i>–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥</i>', parse_mode='html')
            except ValueError:
                return
            except OverflowError:
                await message.answer('&#10060; <i><b>–û—à–∏–±–∫–∞:</b> –ß–µ—Ä–µ—Å—á—É—Ä –±–æ–ª—å—à–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ</i>', parse_mode='html')
            except TypeError:
                await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
        if message.text.lower().startswith('–æ—Ç–¥–∞—Ç—å '):
            try:
                a = message.from_user.id
                if not hasattr(message.reply_to_message, 'text'):
                    await message.answer('&#10060; <i>–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>', parse_mode='html')
                    return
                oth = message.reply_to_message.from_user.id
                arr = message.text.lower().split(' ')
                if a == oth:
                    await message.answer('&#10060; <i>–ù–µ–ª—å–∑—è –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã —Å–∞–º–æ–º—É —Å–µ–±–µ</i>', parse_mode='html')
                    return
                if len(arr)>=3:
                    amount = abs(int(arr[2]))
                else:
                    amount = 1
                item = arr[1]
                if not item in items[0]:
                    await message.answer('&#10060; <i>–¢–∞–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–µ—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ</i>', parse_mode='html')
                    return
                index = items[0].index(item)
                item = items[1][index]
                cursor.execute('SELECT {0} FROM userdata WHERE user_id=?'.format(item), (a,))
                balance = cursor.fetchone()[0]
                cursor.execute('SELECT {0} FROM userdata WHERE user_id=?'.format(item), (oth,))
                obalance = cursor.fetchone()[0]
                cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                nick = cursor.fetchone()[0]
                cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (oth,))
                onick = cursor.fetchone()[0]
                cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                rasa = cursor.fetchone()[0]
                cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (oth,))
                orasa = cursor.fetchone()[0]
                if balance<amount:
                    await message.answer('&#10060; <i>–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –µ–¥–∏–Ω–∏—Ü –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞</i>', parse_mode='html')
                    return
                cursor.execute('UPDATE userdata SET {0} = ? WHERE user_id=?'.format(item), (balance-amount, a))
                cursor.execute('UPDATE userdata SET {0} = ? WHERE user_id=?'.format(item), (obalance+amount, oth))
                conn.commit()
                await message.answer('<i>&#9989; –ü–µ—Ä–µ–¥–∞—á–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ</i>', parse_mode='html')
                if amount>0:
                    await main.send_message(fid, '<i><b><a href="tg://user?id={0}">{1}{2}</a></b> –ø–µ—Ä–µ–¥–∞–ª <b><a href="tg://user?id={3}">{4}{5}</a></b> <b>{6} {7}</b>\n#user_itemshare</i>'.format(a, rasa, nick, oth, orasa, onick, amount, '{0} {1}'.format(ITEMS[0][ITEMS[1].index(item)], ITEMS[2][ITEMS[1].index(item)])), parse_mode='html')
            except Exception as e:
                await message.answer('&#10060; <i><b>–û—à–∏–±–∫–∞:</b> {0}</i>'.format(e), parse_mode='html')
        if message.text.lower().startswith('–≤—ã–≤–µ—Å—Ç–∏ '):
            try:
                a = message.from_user.id
                chid = message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    await startdef(message)
                    return
                amount = int(message.text[8:])
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–í—ã–≤–æ–¥–∏—Ç—å –¥–µ–Ω—å–≥–∏ –∏–∑ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                mymoney = cursor.fetchone()[0]
                cursor.execute('SELECT balance FROM clandata WHERE group_id=?', (chid,))
                othmoney = cursor.fetchone()[0]
                if othmoney >= 2*amount:
                    if amount >= 0:
                        cursor.execute('UPDATE userdata SET balance = ? where user_id = ?', (mymoney+amount, message.from_user.id))
                        cursor.execute('UPDATE clandata SET balance = ? where group_id = ?', (othmoney-amount, chid))
                        conn.commit()
                        cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                        mymoney = cursor.fetchone()[0]
                        cursor.execute('SELECT balance FROM clandata WHERE group_id=?', (chid,))
                        othmoney = cursor.fetchone()[0]
                        cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                        nick = cursor.fetchone()[0]
                        cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                        rasa = cursor.fetchone()[0]
                        await message.answer('<i><b><a href="tg://user?id={2}">{0}{1}</a></b> –≤—ã–≤–µ–ª –∏–∑ –∫–ª–∞–Ω–∞ <b>${3}</b>. –¢–µ–ø–µ—Ä—å –±–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞: <b>${4}</b></i>'.format(rasa, nick, a, amount, othmoney), parse_mode = 'html')
                        cursor.execute('SELECT name FROM clandata WHERE group_id=?', (chid,))
                        chn = cursor.fetchone()[0]
                        if amount>0:
                            await main.send_message(fid, '<i><b><a href="tg://user?id={2}">{0}{1}</a></b> –≤—ã–≤–µ–ª –∏–∑ –∫–ª–∞–Ω–∞ <b>{5} ({6})</b> –¥–µ–Ω—å–≥–∏ —Å—É–º–º–æ–π <b>${3}</b>. –¢–µ–ø–µ—Ä—å –±–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞: <b>${4}</b>\n#clan_moneytake</i>'.format(rasa, nick, a, amount, othmoney, chn, chid), parse_mode = 'html')
                    else:
                        await message.answer('<i>–í–≤–µ–¥–∏—Ç–µ –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</i>', parse_mode='html')
                else:
                    await message.answer('<i>–ù–µ–ª—å–∑—è –≤—ã–≤–µ—Å—Ç–∏ –±–æ–ª—å—à–µ –ø–æ–ª–æ–≤–∏–Ω—ã –±–∞–ª–∞–Ω—Å–∞ –∫–ª–∞–Ω–∞ –∑–∞ —Ä–∞–∑</i>', parse_mode='html')
            except ValueError:
                return
            except OverflowError:
                await message.answer('&#10060; <i><b>–û—à–∏–±–∫–∞:</b> –ß–µ—Ä–µ—Å—á—É—Ä –±–æ–ª—å—à–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ</i>', parse_mode='html')
            except TypeError:
                await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
        if message.text.lower() == '—É–∫—Ä–∞—Å—Ç—å' or message.text.lower() == '–æ–±–≤–æ—Ä–æ–≤–∞—Ç—å':
            try:
                amount = random.randint(1, 10)
                situation = random.uniform(0,1)
                if message.from_user.id == message.reply_to_message.from_user.id:
                    await message.answer('<i>&#10060; –ù–µ–ª—å–∑—è –≤–æ—Ä–æ–≤–∞—Ç—å —É —Å–∞–º–æ–≥–æ —Å–µ–±—è</i>', parse_mode = 'html')
                    return
                a = message.from_user.id
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                mymoney = cursor.fetchone()[0]
                a = message.reply_to_message.from_user.id
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                othmoney = cursor.fetchone()[0]
                cursor.execute('SELECT rang FROM userdata WHERE user_id=?', (a,))
                rang = cursor.fetchone()[0]
                if rang >= 1:
                    await message.answer('<i>&#10060; –£ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –∏ VIP-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤–æ—Ä–æ–≤–∞—Ç—å –Ω–µ–ª—å–∑—è!</i>', parse_mode = 'html')
                    return
                myid = message.from_user.id
                now = datetime.now()
                cursor.execute('SELECT cansteal FROM userdata WHERE user_id=?', (myid,))
                steal = cursor.fetchone()[0]
                diff = (now - datetime.fromtimestamp(0)).total_seconds() - steal
                if diff >= 180:
                    if situation>=0.75:
                        if othmoney>=amount:
                            cursor.execute('UPDATE userdata SET balance = ? where user_id = ?', (mymoney + amount, message.from_user.id))
                            cursor.execute('UPDATE userdata SET balance = ? where user_id = ?', (othmoney - amount, message.reply_to_message.from_user.id))
                            conn.commit()
                            a = message.from_user.id
                            cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                            mymoney = cursor.fetchone()[0]
                            oth = message.reply_to_message.from_user.id
                            cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (oth,))
                            othmoney = cursor.fetchone()[0]
                            cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                            nick = cursor.fetchone()[0]
                            cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                            rasa = cursor.fetchone()[0]
                            cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (oth,))
                            onick = cursor.fetchone()[0]
                            cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (oth,))
                            orasa = cursor.fetchone()[0]
                            cursor.execute('UPDATE userdata SET cansteal = ? WHERE user_id = ?', ((now - datetime.fromtimestamp(0)).total_seconds(), a,))
                            conn.commit()
                            await message.answer('<i><b><a href="tg://user?id={2}">{0}{1}</a></b> —É–∫—Ä–∞–ª —É <b><a href="tg://user?id={3}">{4}{5}</a></b> ${6}</i>'.format(rasa, nick, a, oth, orasa, onick, amount), parse_mode = 'html')
                            await main.send_message(fid, '<i><b><a href="tg://user?id={2}">{0}{1}</a></b> —É–∫—Ä–∞–ª —É <b><a href="tg://user?id={3}">{4}{5}</a></b> ${6}\n#user_stealmoney</i>'.format(rasa, nick, a, oth, orasa, onick, amount), parse_mode = 'html')
                        else:
                            oth = message.reply_to_message.from_user.id
                            cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (oth,))
                            onick = cursor.fetchone()[0]
                            cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (oth,))
                            orasa = cursor.fetchone()[0]
                            await message.answer('<i>–£ <a href="tg://user?id={2}"><b>{0}{1}</b></a> –Ω–µ—Ç —Å—Ç–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥</i>'.format(orasa, onick, oth), parse_mode = 'html')
                    else:
                        a = message.from_user.id
                        cursor.execute('UPDATE userdata SET cansteal = ? WHERE user_id = ?', ((now - datetime.fromtimestamp(0)).total_seconds(), a,))
                        conn.commit()
                        await message.answer('<i>&#10060; –ö—Ä–∞–∂–∞ –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å</i>', parse_mode = 'html')
                else:
                    await message.answer('<i>–í–æ—Ä–æ–≤–∞—Ç—å –º–æ–∂–Ω–æ –Ω–µ —á–∞—â–µ, —á–µ–º —Ä–∞–∑ –≤ 3 –º–∏–Ω—É—Ç—ã</i>', parse_mode = 'html')
            except TypeError:
                await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
            except AttributeError:
                await message.answer('&#10060; <i><b>–û—à–∏–±–∫–∞:</b> –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>', parse_mode='html')
            except (sqlite3.OperationalError, sqlite3.DatabaseError):
                await message.answer('&#10060; <i><b>–û—à–∏–±–∫–∞:</b> –ü—Ä–æ–±–ª–µ–º–∞ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö</i>', parse_mode='html')
            except OverflowError:
                await message.answer('&#10060; <i><b>–û—à–∏–±–∫–∞:</b> –ë–∞–ª–∞–Ω—Å —á–µ—Ä–µ—Å—á—É—Ä –±–æ–ª—å—à–æ–π</i>', parse_mode='html')
        if message.text.lower() == '–ø–∏–Ω–≥':
            await message.reply('–ü–æ–Ω–≥', parse_mode = 'html')
        if message.text.lower() == '–ø—Ä–æ—Ñ–∏–ª—å':
            if hasattr(message.reply_to_message, 'text'):
                await profile(message.reply_to_message.from_user.id, message)
            else:
                await profile(message.from_user.id, message)
        if message.text.lower().startswith('/nick '):
            try:
                a = message.from_user.id
                cursor.execute('UPDATE userdata SET nick = ? WHERE user_id = ?', (message.text[6:], a,))
                conn.commit()
                cursor.execute('SELECT nick FROM userdata WHERE user_id = ?', (a,))
                nick = cursor.fetchone()[0]
                await message.answer('<i>–í–∞—à –Ω–∏–∫: <b>{0}</b></i>'.format(nick), parse_mode = 'html')
            except Exception as e:
                await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if message.text.lower().startswith('/bio '):
            try:
                a = message.from_user.id
                cursor.execute('UPDATE userdata SET desc = ? WHERE user_id = ?', (message.text[5:], a,))
                conn.commit()
                cursor.execute('SELECT desc FROM userdata WHERE user_id = ?', (a,))
                desc = cursor.fetchone()[0]
                await message.answer('<i>–í–∞—à–µ –æ–ø–∏—Å–∞–Ω–∏–µ: \n<b>{0}</b></i>'.format(desc), parse_mode = 'html')
            except Exception as e:
                await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if message.text.lower() == '—Å–Ω—è—Ç—å':
            try:
                a = message.from_user.id
                cursor.execute('SELECT mask FROM userdata WHERE user_id=?', (a,))
                mask = cursor.fetchone()[0]
                if mask!='':
                    await putoff(message.from_user.id, message)
                    cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                    await message.answer('<i>–í–∞—à–∞ —Ä–∞—Å–∞: {0}</i>'.format(cursor.fetchone()[0]), parse_mode='html')
                else:
                    await message.answer('&#10060; <i>–£ –≤–∞—Å –Ω–µ—Ç –º–∞—Å–∫–∏</i>', parse_mode='html')
            except Exception as e:
                await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if message.text.lower().startswith('—Ä–µ—Ñ–∫–∞'):
            try:
                a = message.from_user.id
                cursor.execute("SELECT ref FROM userdata WHERE user_id=?", (a,))
                reflink = cursor.fetchone()[0]
                if reflink=='':
                    count = 1
                    while count!=0:
                        symbols = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'
                        for g in range(0, random.randint(8,10)):
                            reflink+=symbols[random.randint(0, len(symbols)-1)]
                        cursor.execute('SELECT count(user_id) FROM userdata WHERE ref=?', (reflink,))	
                        count = cursor.fetchone()[0]
                    cursor.execute('UPDATE userdata SET ref=? WHERE user_id=?', (reflink, a,))
                    conn.commit()
                style = ''
                color = '0-0-0'
                bgcolor = '255-255-255'
                try:
                    style = message.text.lower()[6:]
                except:
                    style = ''
                if style=='bgbluelight':
                    color = '255-255-255'
                    bgcolor = '0-0-255'
                if style=='bgblue':
                    color = '0-0-0'
                    bgcolor = '0-0-255'
                if style=='bgred':
                    color = '0-0-0'
                    bgcolor = '255-0-0'
                if style=='bggreen':
                    color = '0-0-0'
                    bgcolor='0-255-0'
                if style=='bgyellow':
                    color = '0-0-0'
                    bgcolor = '255-255-0'
                if style=='bgblack':
                    color = '255-255-255'
                    bgcolor = '0-0-0'
                if style=='bgpink':
                    color = '0-0-0'
                    bgcolor = '255-0-255'
                if style=='bgcyan':
                    color = '0-0-0'
                    bgcolor = '0-255-255'
                if style=='red':
                    color = '255-0-0'
                    bgcolor = '255-255-255'
                if style=='blue':
                    color = '0-0-255'
                    bgcolor = '255-255-255'
                if style=='green':
                    color = '0-255-0'
                    bgcolor = '255-255-255'
                if style=='cyan':
                    color = '0-255-255'
                    bgcolor = '255-255-255'
                if style=='pink':
                    color = '255-0-255'
                    bgcolor = '255-255-255'
                if style=='yellow':
                    color = '255-255-0'
                    bgcolor = '0-0-0'
                if style=='yellowlight':
                    color = '255-255-0'
                    bgcolor = '255-255-255'
                ref = 't.me/jivopolisbot?start={0}'.format(reflink)
                await main.send_photo(message.chat.id, "https://api.qrserver.com/v1/create-qr-code/?data={0}&size=512x512&charset-source=UTF-8&charset-target=UTF-8&ecc=L&color={1}&bgcolor={2}&margin=1&qzone=1&format=png".format(ref, color, bgcolor), '<i>–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: <b>{0}</b></i>'.format(ref), parse_mode = 'html')
            except Exception as e:
                await message.answer('&#10060; <i>–û—à–∏–±–∫–∞: {0}</i>'.format(e), parse_mode='html')
        if message.text.lower() == '–±–æ–π':
            if not hasattr(message.reply_to_message, 'text'):
                await message.answer('&#10060; <i>–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>', parse_mode='html')
                return
            await battle(message, message.from_user.id, message.reply_to_message.from_user.id)
        if message.text.lower() == '—è—â–∏–∫':
            await aschik(message.from_user.id, message)
        if message.text.lower().startswith('/unmute'):
            if not hasattr(message.reply_to_message, 'text'):
                await message.answer('&#10060; <i>–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>', parse_mode='html')
                return
            a = message.from_user.id
            oth = message.reply_to_message.from_user.id
            chat = message.chat.id
            thisuser = await main.get_chat_member(chat, a)
            if ((isinstance(await main.get_chat_member(chat, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chat, oth), types.ChatMemberAdministrator) and thisuser.can_restrict_members==True) or isinstance(await main.get_chat_member(chat, a), types.ChatMemberOwner)) and not isinstance(await main.get_chat_member(chat, oth), types.ChatMemberOwner):
                await main.restrict_chat_member(chat, oth, types.ChatPermissions(can_send_messages=True, can_send_media_messages=True, can_send_other_messages=True, can_add_web_page_previews=True, can_send_polls=True, can_invite_users = True, can_pin_messages = True, can_change_info = True))
                await message.reply_to_message.reply('<i>&#128227; –í—ã —Å–Ω–æ–≤–∞ –º–æ–∂–µ—Ç–µ –≥–æ–≤–æ—Ä–∏—Ç—å</i>', parse_mode='html')
            else:
                await message.reply('<i>&#10060; –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤</i>', parse_mode='html')
        if message.text.lower().startswith('/promote'):
            if not hasattr(message.reply_to_message, 'text'):
                await message.answer('&#10060; <i>–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>', parse_mode='html')
                return
            title = ''
            try:
                title = message.text[9:]
            except:
                title = ''
            a = message.from_user.id
            oth = message.reply_to_message.from_user.id
            chat = message.chat.id
            thisuser = await main.get_chat_member(chat, a)
            if ((isinstance(await main.get_chat_member(chat, a), types.ChatMemberAdministrator) and thisuser.can_promote_members==True) or isinstance(await main.get_chat_member(chat, a), types.ChatMemberOwner)) and not isinstance(await main.get_chat_member(chat, oth), types.ChatMemberOwner):
                await main.promote_chat_member(chat, oth, is_anonymous=False, can_manage_chat=True, can_delete_messages=True, can_manage_video_chats=True, can_restrict_members=True, can_promote_members=False, can_change_info=True, can_invite_users=True, can_pin_messages=True)
                if title!='' and (thisuser.custom_title!=None or thisuser.status == 'creator'):
                    try:
                        await main.set_chat_administrator_custom_title(chat, oth, title)
                    except:
                        pass
                await message.reply_to_message.reply('<i>&#128737; –í—ã —Å—Ç–∞–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–∞—Ç–∞</i>', parse_mode='html')
            else:
                await message.reply('<i>&#10060; –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤</i>', parse_mode='html')
        if message.text.lower().startswith('/demote'):
            if not hasattr(message.reply_to_message, 'text'):
                await message.answer('&#10060; <i>–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>', parse_mode='html')
                return
            a = message.from_user.id
            oth = message.reply_to_message.from_user.id
            chat = message.chat.id
            thisuser = await main.get_chat_member(chat, a)
            othuser = await main.get_chat_member(chat, oth)
            if ((isinstance(await main.get_chat_member(chat, a), types.ChatMemberAdministrator) and thisuser.can_promote_members==True and othuser.can_promote_members==False) or isinstance(await main.get_chat_member(chat, a), types.ChatMemberOwner)) and not isinstance(await main.get_chat_member(chat, oth), types.ChatMemberOwner) and isinstance(await main.get_chat_member(chat, oth), types.ChatMemberAdministrator):
                await main.promote_chat_member(chat, oth, is_anonymous=False, can_manage_chat=False, can_delete_messages=False, can_manage_video_chats=False, can_restrict_members=False, can_promote_members=False, can_change_info=False, can_invite_users=False, can_pin_messages=False)
                await message.reply_to_message.reply('<i>&#128683; –í—ã –ø–µ—Ä–µ—Å—Ç–∞–ª–∏ –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–∞—Ç–∞</i>', parse_mode='html')
            else:
                await message.reply('<i>&#10060; –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤</i>', parse_mode='html')
        if message.text.lower().startswith('/mute'):
            if message.text.lower() == '/mute':
                number = 300
                val = 5
                timed = '–º–∏–Ω—É—Ç'
            else:
                try:
                    if message.text.lower()[len(message.text)-1]=='s':
                        val = message.text[5:len(message.text)-1].strip()
                        number = int(val)
                        symbol = message.text.lower()[len(message.text)-1]
                    elif message.text.lower()[len(message.text)-1]=='m':
                        val = message.text[5:len(message.text)-1].strip()
                        number = int(val)*60
                        symbol = message.text.lower()[len(message.text)-1]
                    elif message.text.lower()[len(message.text)-1]=='h':
                        val = message.text[5:len(message.text)-1].strip()
                        number = int(val)*3600
                        symbol = message.text.lower()[len(message.text)-1]
                    elif message.text.lower()[len(message.text)-1]=='d':
                        val = message.text[5:len(message.text)-1].strip()
                        number = int(val)*3600*24
                        symbol = message.text.lower()[len(message.text)-1]
                    elif message.text.lower()[len(message.text)-1]=='w':
                        val = message.text[5:len(message.text)-1].strip()
                        number = int(val)*3600*24*7
                        symbol = message.text.lower()[len(message.text)-1]
                    elif message.text.lower()[len(message.text)-1]=='y':
                        val = message.text[5:len(message.text)-1].strip()
                        number = int(val)*3600*24*365
                        symbol = message.text.lower()[len(message.text)-1]
                    else:
                        val = message.text[5:].strip()
                        number = int(val)
                        symbol = 's'
                    timed = '—Å–µ–∫—É–Ω–¥'
                    if symbol == 'm':
                        timed = '–º–∏–Ω—É—Ç'
                    if symbol == 'h':
                        timed = '—á–∞—Å–æ–≤'
                    if symbol == 'd':
                        timed = '–¥–Ω–µ–π'
                    if symbol == 'y':
                        timed = '–ª–µ—Ç'
                except Exception as e:
                    await message.answer('&#10060; <i><b>–û—à–∏–±–∫–∞:</b> –ü—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è</i>', parse_mode='html')
                    await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
                    return
            if not hasattr(message.reply_to_message, 'text'):
                await message.answer('&#10060; <i>–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>', parse_mode='html')
                return
            a = message.from_user.id
            oth = message.reply_to_message.from_user.id
            chat = message.chat.id
            thisuser = await main.get_chat_member(chat, a)
            if ((isinstance(await main.get_chat_member(chat, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chat, oth), types.ChatMemberAdministrator) and thisuser.can_restrict_members==True) or isinstance(await main.get_chat_member(chat, a), types.ChatMemberOwner)) and not isinstance(await main.get_chat_member(chat, oth), types.ChatMemberOwner):
                if number<30:
                    await message.answer('&#10060; <i>–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –º—É—Ç–∞ - 30 —Å–µ–∫—É–Ω–¥</i>', parse_mode='html')
                    return
                await main.restrict_chat_member(chat, oth, until_date=time()+number)
                await message.reply_to_message.reply('<i>&#129323; –í—ã –±—ã–ª–∏ –∑–∞–≥–ª—É—à–µ–Ω—ã –Ω–∞ {0} {1}</i>'.format(val, timed), parse_mode='html')
            else:
                await message.reply('<i>&#10060; –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤</i>', parse_mode='html')
        elif message.text.lower()=='—Ä–∞–Ω–¥–æ–º –±–æ–π':
            try:
                chid = message.chat.id
                if message.chat.type=='private':
                    await main.send_message(chid, '<i>–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–∞—Ö</i>', parse_mode='html')
                    return
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    await main.send_message(chid, '<i>–°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞–Ω</i>', parse_mode='html')
                cursor.execute('SELECT * FROM userdata WHERE clan=? AND ready=1', (chid,))
                nusers = cursor.fetchall()
                cursor.execute('SELECT count(*) FROM userdata WHERE clan=? AND ready=1', (chid,))
                cnt = cursor.fetchone()[0]
                if cnt==0:
                    await main.send_message(chid, '<i>–í —á–∞—Ç–µ –Ω–µ—Ç –≥–æ—Ç–æ–≤—ã—Ö –∫ –±–æ—é –∏–≥—Ä–æ–∫–æ–≤ :(</i>', parse_mode='html')
                    return
                needed = random.choice(nusers)
                aidy = needed[1]
                nick = needed[7]
                rasa = needed[9]
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å –±–æ–π', callback_data='battle_{0}'.format(aidy)))
                await main.send_message(chid, '<i>–ì–æ—Ç–æ–≤ –∫ –±–æ—é <b><a href="tg://user?id={0}">{1}{2}</a></b></i>'.format(aidy, rasa, nick), parse_mode='html', reply_markup=markup)
            except Exception as e:
                await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if message.text.lower().startswith('/exec '):
            try:
                if message.from_user.id == CREATOR:
                    exec(message.text[6:])
                else:
                    await main.send_message(message.chat.id, '<i>‚ùå –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞</i>', parse_mode='html')
            except Exception as e:
                try:
                    await main.send_message(message.chat.id, '‚ùå <i><b>–û—à–∏–±–∫–∞:</b> {0}</i>'.format(e), parse_mode='html')
                except:
                    await main.send_message(message.chat.id, '‚ùå –û—à–∏–±–∫–∞: {0}'.format(e))
            else:
                await main.send_message(message.chat.id, '<i>‚úÖ –ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω –±–µ–∑ –æ—à–∏–±–æ–∫</i>', parse_mode='html')
        if message.text.lower().startswith('/eval '):
            try:
                if message.from_user.id == CREATOR:
                    res = eval(message.text[6:])
                    await main.send_message(message.chat.id, '<i><b>–†–µ–∑—É–ª—å—Ç–∞—Ç: </b>{0}</i>'.format(res), parse_mode='html')
                else:
                    await main.send_message(message.chat.id, '<i>‚ùå –î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞</i>', parse_mode='html')
            except Exception as e:
                try:
                    await main.send_message(message.chat.id, '‚ùå <i><b>–û—à–∏–±–∫–∞:</b> {0}</i>'.format(e), parse_mode='html')
                except:
                    await main.send_message(message.chat.id, '‚ùå –û—à–∏–±–∫–∞: {0}'.format(e))
        if message.text.lower()=='—Å–ª–∞–≤–∞ –º–∏–∫–∏—Ç–µ —Å–ª–∞–≤–∞ –º–∏–∫–∏—Ç–µ —Å–ª–∞–≤–∞ –º–∏–∫–∏—Ç–µ':
            if message.chat.type!='private':
                return
            try:
                a=message.from_user.id
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                place = cursor.fetchone()[0]
                if place=='–†–∞–∫–µ–Ω—Å–∫–∞—è':
                    markup = types.InlineKeyboardMarkup()
                    markup.add(types.InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏', url='t.me/+zAbW_LMY4ABiZTRi'))
                    await message.answer('<i>–°–µ–∫—Ä–µ–µ–µ–µ—Ç–Ω—ã–π —á–∞—Ç</i>', parse_mode='html', reply_markup=markup)
            except Exception as e:
                await message.answer('‚ùå <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
    @bot.message_handler(content_types=['document'])
    async def get_document(message: types.Message):
        try:
            await check(message.from_user.id, message.chat.id)
            a = message.from_user.id
            chid = message.chat.id
            user = message.from_user
            try:
                cursor.execute('SELECT process FROM userdata WHERE user_id=?', (a,))
                process = cursor.fetchone()[0]
            except:
                if message.chat.type=='private' and message.text.lower()!=createacc:
                    process = 'login'
                else:
                    process = ''
            if process.startswith('editfile_'):
                path = process.replace('editfile_', '')
                if a!=CREATOR:
                    await message.answer('&#10060; <i>–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞</i>', parse_mode='html')
                    return
                await message.document.download(destination_file='text.txt')
                with open('text.txt') as file:
                    text = file.read()
                os.remove('text.txt')
                with open(path, 'r+') as editfile:
                    editfile.write(text)
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='‚ôª –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞', callback_data = 'restart_bot'))
                markup.add(types.InlineKeyboardButton(text='‚úÖ –ì–æ—Ç–æ–≤–æ', callback_data = 'cancel_action'))
                await message.answer('<i>‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ</i>', parse_mode='html', reply_markup = markup)
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                conn.commit()
        except Exception as e:
            await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
    @bot.message_handler(content_types=['sticker'])
    async def sendst(message: types.Message):
        try:
            if message.from_user.id in banned:
                return
            cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (message.chat.id,))
            count = cursor.fetchone()[0]
            if count != 0:
                cursor.execute("SELECT stickers FROM clandata WHERE group_id=?", (message.chat.id,))
                stickers = cursor.fetchone()[0]
                if stickers == 0:
                    await main.delete_message(message.chat.id, message.message_id)
                    return
            await check(message.from_user.id, message.chat.id)
            a = message.from_user.id
            try:
                cursor.execute("SELECT health FROM userdata WHERE user_id=?", (a,))
                health = cursor.fetchone()[0]
                cursor.execute("SELECT prison FROM userdata WHERE user_id=?", (a,))
                prison = cursor.fetchone()[0]
                if health <= 0 or prison > (datetime.now() - datetime.fromtimestamp(0)).total_seconds():
                    return
            except:
                pass
            cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (message.chat.id,))
            count = cursor.fetchone()[0]
            if count != 0:
                cursor.execute("SELECT stickers FROM clandata WHERE group_id=?", (message.chat.id,))
                stickers = cursor.fetchone()[0]
                if stickers == 0:
                    await main.delete_message(message.chat.id, message.message_id)
                    return
            if 'üé≤' in message.sticker.emoji:
                if message.chat.id != -1001395868701:
                    message.reply("&#10060; <i>–†—É–ª–µ—Ç–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ <b>–ò–≥—Ä–æ–≤–æ–≥–æ –∫–ª—É–±–∞</b></i>", parse_mode = 'html')
                    return
                try:
                    a = message.from_user.id
                    rand = prizes[random.randint(0,42)]
                    now = datetime.now()
                    cursor.execute('SELECT rulette FROM userdata WHERE user_id = ?', (a,))
                    box = cursor.fetchone()[0]
                    cursor.execute('SELECT morj FROM userdata WHERE user_id = ?', (a,))
                    morj = cursor.fetchone()[0]
                    cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                    balance = cursor.fetchone()[0]
                    diff = (now - datetime.fromtimestamp(0)).total_seconds() - box
                    if diff >= 12*3600:
                        if balance < 10:
                            await message.answer('<i>&#10060; –ù–µ–ª—å–∑—è –∏–≥—Ä–∞—Ç—å –≤ —Ä—É–ª–µ—Ç–∫—É, –∫–æ–≥–¥–∞ —É –≤–∞—Å –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –º–µ–Ω—å—à–µ $10</i>', parse_mode='html')
                            return
                        cursor.execute('UPDATE userdata SET rulette = ? WHERE user_id = ?', ((now - datetime.fromtimestamp(0)).total_seconds(), a,))
                        conn.commit()
                        if rand==0:
                            await message.answer('<i>–í—ã –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ –Ω–∏—á–µ–≥–æ :(</i>', parse_mode = 'html')
                        elif rand=='morj':
                            await message.answer('<i>–í—ã –ø–æ–ª—É—á–∏–ª–∏ &#129453; –º–æ—Ä–∂–∞!</i>', parse_mode = 'html')
                            cursor.execute('UPDATE userdata SET morj = ? WHERE user_id = ?', (morj+1, a,))
                            conn.commit()
                        elif rand=='cow':
                            await message.answer('<i>–í—ã –ø–æ–ª—É—á–∏–ª–∏ &#128004; –∫–æ—Ä–æ–≤—É!</i>', parse_mode = 'html')
                            cursor.execute('UPDATE userdata SET cow = ? WHERE user_id = ?', (morj+1, a,))
                            conn.commit()
                        elif rand>0:
                            cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                            balance = cursor.fetchone()[0]
                            cursor.execute('UPDATE userdata SET balance = ? WHERE user_id = ?', (balance+rand, a,))
                            conn.commit()
                            await message.answer('<i><b>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</b>\n–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ <b>${0}</b></i>'.format(rand), parse_mode = 'html')
                        else:
                            cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                            balance = cursor.fetchone()[0]
                            cursor.execute('UPDATE userdata SET balance = ? WHERE user_id = ?', (balance+rand, a,))
                            conn.commit()
                            await message.answer('<i>–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ <b>${0}</b> :(</i>'.format(-rand), parse_mode = 'html')
                    else:
                        h = int(12-ceil(diff/3600))
                        m = int(60-ceil(diff%3600/60))
                        s = int(60-ceil(diff%3600%60))
                        await message.answer('<i>&#10060; –í—Ä–∞—â–∞—Ç—å —Ä—É–ª–µ—Ç–∫—É –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Ä–∞–∑ –≤ 12 —á–∞—Å–æ–≤. –î–æ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å {0} —á–∞—Å–æ–≤ {1} –º–∏–Ω—É—Ç {2} —Å–µ–∫—É–Ω–¥</i>'.format(h,m,s), parse_mode='html')
                except Exception as e:
                    await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                    await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
            if '‚õî' in message.sticker.emoji:
                try:
                    if not hasattr(message.reply_to_message, 'text'):
                        await message.answer('&#10060; <i>–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>', parse_mode='html')
                        return
                    a = message.from_user.id
                    oth = message.reply_to_message.from_user.id
                    chat = message.chat.id
                    thisuser = await main.get_chat_member(chat, a)
                    if (isinstance(await main.get_chat_member(chat, a), types.ChatMemberAdministrator) or isinstance(await main.get_chat_member(chat, a), types.ChatMemberOwner)) and not isinstance(await main.get_chat_member(chat, oth), types.ChatMemberOwner) and not isinstance(await main.get_chat_member(chat, oth), types.ChatMemberAdministrator) and thisuser.can_restrict_members==True:
                        await main.restrict_chat_member(chat, oth, until_date=time()+300)
                        await message.reply_to_message.reply('<i>&#129323; –í—ã –±—ã–ª–∏ –∑–∞–≥–ª—É—à–µ–Ω—ã –Ω–∞ 5 –º–∏–Ω—É—Ç</i>', parse_mode='html')
                    else:
                        await message.reply('<i>&#10060; –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤</i>', parse_mode='html')
                except Exception as e:
                    await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                    await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
            if '‚öî' in message.sticker.emoji:
                await battle(message)
            if 'ü§°' in message.sticker.emoji:
                if not hasattr(message.reply_to_message, 'text'):
                    cursor.execute('SELECT type FROM userdata WHERE user_id=?', (a,))
                    type = cursor.fetchone()[0]
                else:
                    cursor.execute('SELECT type FROM userdata WHERE user_id=?', (message.reply_to_message.from_user.id,))
                    type = cursor.fetchone()[0]
                if type=='private':
                    return
                if hasattr(message.reply_to_message, 'text'):
                    await profile(message.reply_to_message.from_user.id, message)
                else:
                    await profile(message.from_user.id, message)
            if 'üëë' in message.sticker.emoji:
                if not hasattr(message.reply_to_message, 'text'):
                    await message.answer('&#10060; <i>–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>', parse_mode='html')
                    return
                a = message.from_user.id
                oth = message.reply_to_message.from_user.id
                chat = message.chat.id
                thisuser = await main.get_chat_member(chat, a)
                if (isinstance(await main.get_chat_member(chat, a), types.ChatMemberAdministrator) or isinstance(await main.get_chat_member(chat, a), types.ChatMemberOwner)) and not isinstance(await main.get_chat_member(chat, oth), types.ChatMemberOwner) and thisuser.can_promote_members==True:
                    await main.promote_chat_member(chat, oth, is_anonymous=False, can_manage_chat=True, can_delete_messages=True, can_manage_video_chats=True, can_restrict_members=True, can_promote_members=False, can_change_info=True, can_invite_users=True, can_pin_messages=True)
                    await message.reply_to_message.reply('<i>&#128737; –í—ã —Å—Ç–∞–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–∞—Ç–∞</i>', parse_mode='html')
                else:
                    await message.reply('<i>&#10060; –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤</i>', parse_mode='html')
            if 'üî•' in message.sticker.emoji:
                if not hasattr(message.reply_to_message, 'text'):
                    await message.answer('&#10060; <i>–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>', parse_mode='html')
                    return
                a = message.from_user.id
                oth = message.reply_to_message.from_user.id
                chat = message.chat.id
                thisuser = await main.get_chat_member(chat, a)
                othuser = await main.get_chat_member(chat, oth)
                if (isinstance(await main.get_chat_member(chat, a), types.ChatMemberAdministrator) or isinstance(await main.get_chat_member(chat, a), types.ChatMemberOwner)) and not isinstance(await main.get_chat_member(chat, oth), types.ChatMemberOwner) and isinstance(await main.get_chat_member(chat, oth), types.ChatMemberAdministrator) and thisuser.can_promote_members==True and othuser.can_promote_members==False:
                    await main.promote_chat_member(chat, oth, is_anonymous=False, can_manage_chat=False, can_delete_messages=False, can_manage_video_chats=False, can_restrict_members=False, can_promote_members=False, can_change_info=False, can_invite_users=False, can_pin_messages=False)
                    await message.reply_to_message.reply('<i>&#128683; –í—ã –ø–µ—Ä–µ—Å—Ç–∞–ª–∏ –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º —á–∞—Ç–∞</i>', parse_mode='html')
                else:
                    await message.reply('<i>&#10060; –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤</i>', parse_mode='html')
            if 'üì£' in message.sticker.emoji:
                try:
                    if not hasattr(message.reply_to_message, 'text'):
                        await message.answer('&#10060; <i>–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>', parse_mode='html')
                        return
                    a = message.from_user.id
                    oth = message.reply_to_message.from_user.id
                    chat = message.chat.id
                    thisuser = await main.get_chat_member(chat, a)
                    if (isinstance(await main.get_chat_member(chat, a), types.ChatMemberAdministrator) or isinstance(await main.get_chat_member(chat, a), types.ChatMemberOwner)) and not isinstance(await main.get_chat_member(chat, oth), types.ChatMemberOwner) and not isinstance(await main.get_chat_member(chat, oth), types.ChatMemberAdministrator) and thisuser.can_restrict_members==True:
                        await main.restrict_chat_member(chat, oth, types.ChatPermissions(can_send_messages=True, can_send_media_messages=True, can_send_other_messages=True, can_add_web_page_previews=True, can_send_polls=True, can_invite_users = True, can_pin_messages = True, can_change_info = True))
                        await message.reply_to_message.reply('<i>&#128227; –í—ã —Å–Ω–æ–≤–∞ –º–æ–∂–µ—Ç–µ –≥–æ–≤–æ—Ä–∏—Ç—å</i>', parse_mode='html')
                    else:
                        await message.reply('<i>&#10060; –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤</i>', parse_mode='html')
                except Exception as e:
                    await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                    await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
            if 'üíä' in message.sticker.emoji:
                try:
                    if not hasattr(message.reply_to_message, 'text'):
                        await message.answer('&#10060; <i>–ù—É–∂–Ω–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</i>', parse_mode='html')
                        return
                    a = message.from_user.id
                    oth = message.reply_to_message.from_user.id
                    chat = message.chat.id
                    await cure(a, oth, chat)
                except Exception as e:
                    await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                    await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
            if 'üñ•' in message.sticker.emoji:
                try:
                    a = message.from_user.id
                    chid = message.chat.id
                    cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                    count = cursor.fetchone()[0]
                    cursor.execute('SELECT rasa FROM userdata WHERE user_id = ?', (a,))
                    rasa = cursor.fetchone()[0]
                    cursor.execute('SELECT nick FROM userdata WHERE user_id = ?', (a,))
                    nick = cursor.fetchone()[0]
                    cursor.execute("SELECT balance FROM clandata WHERE group_id=?", (chid,))
                    balance = cursor.fetchone()[0]
                    if balance >= 10000:
                        await main.send_message(chid, '<i>&#10060; –ù–µ–ª—å–∑—è –≥—Ä–∞–±–∏—Ç—å –∫–ª–∞–Ω—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –±–æ–ª—å—à–µ $10000</i>', parse_mode = 'html')
                        return
                    if count == 0:
                        return
                    rand = random.randint(1,10)
                    if rand<10:
                        cursor.execute('UPDATE userdata SET prison=? WHERE user_id=?', (current_time()+600, a,))
                        conn.commit()
                        await main.send_message(chid, '<i>–í–∏–¥–∏–º–æ, –∫–æ–µ-–∫–æ–º—É –ø—Ä–∏–¥—ë—Ç—Å—è –Ω–µ–º–Ω–æ–≥–æ –ø–æ—É—á–∏—Ç—å—Å—è –≤–∑–ª–∞–º—ã–≤–∞—Ç—å. –£ –≤–∞—Å –∫–∞–∫ —Ä–∞–∑ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏.\n\n&#128110; –ì–æ—Å–ø–æ–¥–∏–Ω <b><a href="tg://user?id={0}">{1}{2}</a></b>, –≤—ã –∑–∞–¥–µ—Ä–∂–∞–Ω—ã –∑–∞ –ø–æ–ø—ã—Ç–∫—É –æ–±–≤–æ—Ä–æ–≤–∞—Ç—å –∫–ª–∞–Ω. –ü—Ä–æ–π–¥—ë–º—Ç–µ –≤ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ.\n\n–í—ã –±—ã–ª–∏ –∞—Ä–µ—Å—Ç–æ–≤–∞–Ω—ã –Ω–∞ <b>10 –º–∏–Ω—É—Ç</b></i>'.format(a, rasa, nick), parse_mode='html')
                    else:
                        cursor.execute("SELECT balance FROM clandata WHERE group_id=?", (chid,))
                        balance = cursor.fetchone()[0]
                        cursor.execute("SELECT name FROM clandata WHERE group_id=?", (chid,))
                        chn = cursor.fetchone()[0]
                        if balance < 45:
                            await main.send_message(chid, '<i>&#10060; –í –∫–ª–∞–Ω–µ –¥–µ–Ω–µ–≥ –ø–æ—á—Ç–∏ –Ω–µ—Ç :)</i>', parse_mode = 'html')
                            return
                        rando = random.randint(1, 45)
                        cursor.execute("UPDATE userdata SET balance=balance+? WHERE user_id=?", (rando, a,))
                        conn.commit()
                        cursor.execute("UPDATE clandata SET balance=balance-? WHERE group_id=?", (rando, chid,))
                        conn.commit()
                        await message.answer('<i>&#127942; –£ –≤–∞—Å –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ–≥—Ä–∞–±–∏—Ç—å –∫–ª–∞–Ω! –í—ã —É–Ω–µ—Å–ª–∏ —Å —Å–æ–±–æ–π <b>${0}</b></i>'.format(rando), parse_mode='html')
                        await main.send_message(fid, '<i><b><a href="tg://user?id={0}">{1}{2}</a></b> –≤–∑–ª–æ–º–∞–ª –∫–ª–∞–Ω <b>{3}</b> –∏ —É–Ω—ë—Å —Å —Å–æ–±–æ–π <b>${4}</b>\n#clan_hack</i>'.format(a, rasa, nick, chn, rando), parse_mode='html')
                except Exception as e:
                    await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                    await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        except:
            pass
    @bot.message_handler(content_types=['dice'])
    async def dice_value(message: types.Message):
        try:
            if message.from_user.id in banned:
                return
            cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (message.chat.id,))
            count = cursor.fetchone()[0]
            if count != 0:
                cursor.execute("SELECT dice FROM clandata WHERE group_id=?", (message.chat.id,))
                dice = cursor.fetchone()[0]
                if dice == 0:
                    await main.delete_message(message.chat.id, message.message_id)
                    return
            cursor.execute("SELECT count(*) FROM clandata WHERE group_id=?", (message.chat.id,))
            count = cursor.fetchone()[0]
            if count == 0:
                return
            cursor.execute("SELECT gameclub FROM clandata WHERE group_id=?", (message.chat.id,))
            gameclub = cursor.fetchone()[0]
            if gameclub == 1:
                return
            chid = message.chat.id
            if message.forward_date == None:
                a = message.from_user.id
                cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                balance = cursor.fetchone()[0]
                cursor.execute('SELECT nick FROM userdata WHERE user_id = ?', (a,))
                nick = cursor.fetchone()[0]
                cursor.execute('SELECT rasa FROM userdata WHERE user_id = ?', (a,))
                rasa = cursor.fetchone()[0]
                value = message.dice.value
                if message.dice.emoji == 'üé∞':
                    cursor.execute("SELECT lastplayed FROM userdata WHERE user_id=?", (a,))
                    last = cursor.fetchone()[0]
                    if current_time() - last < 15:
                        await message.reply('<i>‚ùå –≠–π, –∏–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –Ω–µ –±–æ–ª–µ–µ —Ä–∞–∑–∞ –≤ 15 —Å–µ–∫—É–Ω–¥!</i>', parse_mode='html')
                        return
                    if balance>=10:
                        cursor.execute("UPDATE userdata SET lastplayed=? WHERE user_id=?", (current_time(), a,))
                        conn.commit()
                        await message.answer('<i><b><a href="tg://user?id={2}">{0}{1}</a></b> –±—Ä–æ—Å–∞–µ—Ç –≤ –∞–≤—Ç–æ–º–∞—Ç –∂–µ—Ç–æ–Ω —Å—Ç–æ–∏–º–æ—Å—Ç—å—é <b>$10</b></i>'.format(rasa, nick, a), parse_mode = 'html')
                        await earn(message, -10)
                        cursor.execute("UPDATE clandata SET balance=balance+5 WHERE group_id=?", (chid,))
                        conn.commit()
                        cursor.execute("UPDATE clandata SET balance=balance+5 WHERE group_id=-1001395868701")
                        conn.commit()
                        cursor.execute("SELECT balance FROM clandata WHERE group_id=?",(chid,))
                        kazbal = cursor.fetchone()[0]
                        cursor.execute("SELECT kazna FROM globaldata")
                        kazna = cursor.fetchone()[0]
                        if value==64:
                            rand = random.randint(225,275)
                            if kazbal>=rand:
                                cursor.execute("UPDATE clandata SET balance=balance-? WHERE group_id=?", (rand, chid,))
                                conn.commit()
                            else:
                                if kazna>=2*rand:
                                    cursor.execute("UPDATE clandata SET balance=balance+? WHERE group_id=-1001395868701", (rand,))
                                    cursor.execute("UPDATE globaldata SET kazna=kazna-?", (2*rand,))
                                    conn.commit()
                                else:
                                    await message.answer('<i>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –Ω–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥, —á—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ. –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø–æ–∂–µ—Ä—Ç–≤—É–π—Ç–µ –¥–µ–Ω—å–≥–∏.\n–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ò–≥—Ä–æ–≤–æ–≥–æ –∫–ª—É–±–∞ –º–æ–∂–Ω–æ, –Ω–∞–±—Ä–∞–≤ —Å–æ–æ–±—â–µ–Ω–∏–µ <code>–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å [—Å—É–º–º–∞]</code>. –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏ –≤ –∫–∞–∑–Ω—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –ë–∞–Ω–∫</i>'.format(rand), parse_mode = 'html')
                                    return
                            await earn(message,rand)
                            cursor.execute('SELECT jackpots FROM userdata WHERE user_id = ?', (a,))
                            jack = cursor.fetchone()[0]
                            cursor.execute('UPDATE userdata SET jackpots = ? WHERE user_id = ?', (jack+1, a,))
                            conn.commit()
                            cursor.execute('SELECT jackpots FROM userdata WHERE user_id = ?', (a,))
                            jack = cursor.fetchone()[0]
                            await message.answer('<i><b>&#128176; –î–∂–µ–∫–ø–æ—Ç!</b>\n–í—ã –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç–µ <b>${0}</b>\n–í—ã –ø–æ–π–º–∞–ª–∏ –¥–∂–µ–∫–ø–æ—Ç –≤—Å–µ–≥–æ <b>{1} —Ä–∞–∑</b></i>'.format(rand, jack), parse_mode = 'html')
                            cursor.execute('SELECT lucky FROM userdata WHERE user_id = ?', (a,))
                            ach = cursor.fetchone()[0]
                            if jack>=10:
                                if ach==0:
                                    await achieve(message.from_user.id, message.chat.id, 'lucky')
                                    await message.answer('<i>–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ <b>&#128477; –ö–ª—é—á</b> –æ—Ç –ß—ë—Ä–Ω–æ–≥–æ —Ä—ã–Ω–∫–∞. –û—Å—Ç–∞–ª–æ—Å—å –Ω–∞—É—á–∏—Ç—å—Å—è –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è, –∏ –≤–µ—Å—å –º–∏—Ä –±—É–¥–µ—Ç –≤ –≤–∞—à–∏—Ö –ª–∞–ø–∫–∞—Ö!</i>', parse_mode = 'html')
                                    cursor.execute('UPDATE userdata SET key=key+1 WHERE user_id=?', (a,))
                                    conn.commit()
                        elif value==43:
                            rand = random.randint(150,175)
                            if kazbal>=rand:
                                cursor.execute("UPDATE clandata SET balance=balance-? WHERE group_id=?", (rand, chid,))
                                conn.commit()
                            else:
                                if kazna>=2*rand:
                                    cursor.execute("UPDATE clandata SET balance=balance+? WHERE group_id=-1001395868701", (rand,))
                                    cursor.execute("UPDATE globaldata SET kazna=kazna-?", (2*rand,))
                                    conn.commit()
                                else:
                                    await message.answer('<i>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –Ω–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥, —á—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ. –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø–æ–∂–µ—Ä—Ç–≤—É–π—Ç–µ –¥–µ–Ω—å–≥–∏.\n–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ò–≥—Ä–æ–≤–æ–≥–æ –∫–ª—É–±–∞ –º–æ–∂–Ω–æ, –Ω–∞–±—Ä–∞–≤ —Å–æ–æ–±—â–µ–Ω–∏–µ <code>–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å [—Å—É–º–º–∞]</code>. –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏ –≤ –∫–∞–∑–Ω—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –ë–∞–Ω–∫</i>'.format(rand), parse_mode = 'html')
                                    return
                            await earn(message,rand)
                            await message.answer('<i><b>&#128176; –ü–æ—á—Ç–∏ –¥–∂–µ–∫–ø–æ—Ç</b>\n–í—ã –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç–µ <b>${0}</b></i>'.format(rand), parse_mode = 'html')
                        elif value==22:
                            rand = random.randint(100,125)
                            if kazbal>=rand:
                                cursor.execute("UPDATE clandata SET balance=balance-? WHERE group_id=?", (rand,chid,))
                                conn.commit()
                            else:
                                if kazna>=2*rand:
                                    cursor.execute("UPDATE clandata SET balance=balance+? WHERE group_id=-1001395868701", (rand,))
                                    cursor.execute("UPDATE globaldata SET kazna=kazna-?", (2*rand,))
                                    conn.commit()
                                else:
                                    await message.answer('<i>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –Ω–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥, —á—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ. –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø–æ–∂–µ—Ä—Ç–≤—É–π—Ç–µ –¥–µ–Ω—å–≥–∏.\n–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ò–≥—Ä–æ–≤–æ–≥–æ –∫–ª—É–±–∞ –º–æ–∂–Ω–æ, –Ω–∞–±—Ä–∞–≤ —Å–æ–æ–±—â–µ–Ω–∏–µ <code>–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å [—Å—É–º–º–∞]</code>. –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏ –≤ –∫–∞–∑–Ω—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –ë–∞–Ω–∫</i>'.format(rand), parse_mode = 'html')
                                    return
                            await earn(message,rand)
                            await message.answer('<i><b>&#128176; –ü–æ–≤–µ–∑–ª–æ!</b>\n–í—ã –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç–µ <b>${0}</b></i>'.format(rand), parse_mode = 'html')
                        elif value==1:
                            rand = random.randint(50,75)
                            if kazbal>=rand:
                                cursor.execute("UPDATE clandata SET balance=balance-? WHERE group_id=?", (rand,chid,))
                                conn.commit()
                            else:
                                if kazna>=2*rand:
                                    cursor.execute("UPDATE clandata SET balance=balance+? WHERE group_id=-1001395868701", (rand,))
                                    cursor.execute("UPDATE globaldata SET kazna=kazna-?", (2*rand,))
                                    conn.commit()
                                else:
                                    await message.answer('<i>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –Ω–∞—Å –Ω–µ—Ç –¥–µ–Ω–µ–≥, —á—Ç–æ–±—ã –≤—ã–¥–∞—Ç—å –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ. –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –ø–æ–∂–µ—Ä—Ç–≤—É–π—Ç–µ –¥–µ–Ω—å–≥–∏.\n–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –ò–≥—Ä–æ–≤–æ–≥–æ –∫–ª—É–±–∞ –º–æ–∂–Ω–æ, –Ω–∞–±—Ä–∞–≤ —Å–æ–æ–±—â–µ–Ω–∏–µ <code>–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å [—Å—É–º–º–∞]</code>. –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏ –≤ –∫–∞–∑–Ω—É –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ –ë–∞–Ω–∫</i>'.format(rand), parse_mode = 'html')
                                    return
                            await earn(message,rand)
                            await message.answer('<i><b>&#128077; –ù–µ–ø–ª–æ—Ö–æ!</b>\n–í—ã –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç–µ <b>${0}</b></i>'.format(rand), parse_mode = 'html')
                    else:
                            await message.answer('<i>–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥. –°—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏: <b>$10</b></i>', parse_mode = 'html')
        except Exception as e:
            await message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
            await message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
    @bot.callback_query_handler()
    async def query_handler(call: types.CallbackQuery):
        await check(call.from_user.id, call.message.chat.id)
        a = call.from_user.id
        cursor.execute('SELECT prison FROM userdata WHERE user_id=?', (a,))
        prison = cursor.fetchone()[0]
        if prison>current_time():
            diff = prison-current_time()
            minutes = floor(diff/60)
            seconds = floor(diff%60)
            time = ''
            if minutes!=0:
                time+=' {0} –º–∏–Ω—É—Ç'.format(minutes)
            if seconds!=0:
                time+=' {0} —Å–µ–∫—É–Ω–¥'.format(seconds)
            await call.answer('‚ùå –í—ã –±—ã–ª–∏ –∞—Ä–µ—Å—Ç–æ–≤–∞–Ω—ã –∏ —Ç–µ–ø–µ—Ä—å —Å–∏–¥–∏—Ç–µ –≤ —Ç—é—Ä—å–º–µ. –í–∞–º –æ—Å—Ç–∞–ª–æ—Å—å —Å–∏–¥–µ—Ç—å {0}'.format(time),show_alert = True)
            return
        if call.data.startswith('backup'):
            try:
                if call.from_user.id!=CREATOR:
                    await call.answer("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ :>", show_alert = True)
                    return
                markup = types.InlineKeyboardMarkup(row_width = 2)
                markup.add(types.InlineKeyboardButton(text = 'üíª –ö–æ–¥ –±–æ—Ç–∞', callback_data='sendfile main.py'),
                           types.InlineKeyboardButton(text = '‚úè –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–¥', callback_data='editfile_main.py'), 
                           types.InlineKeyboardButton(text = 'üîß –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è', callback_data='sendfile config.py'),
                           types.InlineKeyboardButton(text = '‚úè –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥', callback_data='editfile_config.py'),
                          types.InlineKeyboardButton(text = 'üë§ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö', callback_data='sendfile database.db'),
                          types.InlineKeyboardButton(text = '‚úè –ò–∑–º–µ–Ω–∏—Ç—å –ë–î', callback_data='editfile_database.db'),
                          types.InlineKeyboardButton(text = '‚ôª –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –±–æ—Ç–∞', callback_data='restart_bot'),)
                await call.message.answer("<i>–í—ã –º–æ–∂–µ—Ç–µ —Å–µ–π—á–∞—Å –ø–æ–ª—É—á–∏—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –Ω—É–∂–Ω—ã–π —Ñ–∞–π–ª –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –ù–æ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã –ú–∏–∫–∏—Ç–∞ –í—Å–µ–º–æ–≥—É—â–∏–π</i>", parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('buy24_'):

        if call.data.startswith('buyclan_'):
            try:
                buyitem = call.data[8:]
                if not buyitem in clanitems:
                    return
                cost = clanitems[1][clanitems[0].index(buyitem)]
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                if balance<cost:
                    await call.answer(text='‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', show_alert = True)
                    return
                cursor.execute('UPDATE userdata SET balance=balance-? WHERE user_id=?', (cost, a,))
                conn.commit()
                cursor.execute('UPDATE userdata SET {0}={0}+1 WHERE user_id=?'.format(buyitem), (a,))
                conn.commit()
                cursor.execute('UPDATE clandata SET balance=balance+? WHERE group_id=?', (cost//2, chid,))
                conn.commit()
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                await call.answer(text='–ü–æ–∫—É–ø–∫–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ. –í–∞—à –±–∞–ª–∞–Ω—Å: ${0}. –ë–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω –Ω–∞ ${1}'.format(balance, cost//2), show_alert = True)
            except Exception as e:
                await call.message.answer('<i><b>&#10060; –û—à–∏–±–∫–∞: </b>{0}</i>'.format(e), parse_mode = 'html');
        if call.data == 'drink_medicine':
            await cure(call.from_user.id, call.from_user.id, call.from_user.id)
        if call.data=='log_out':
            try:
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='‚úÖ –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞', callback_data='log_out_confirm'))
                markup.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_action'))
                markup.add(types.InlineKeyboardButton(text='üîë –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞', callback_data='set_user_key'))
                await call.message.answer('<i>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞? –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –≤—ã —Å–º–æ–∂–µ—Ç–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤–≤–µ–¥—ë—Ç–µ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ (–µ—Å–ª–∏ —É –≤–∞—Å –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞, –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è)</i>', reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('<i><b>&#10060; –û—à–∏–±–∫–∞: </b>{0}</i>'.format(e), parse_mode = 'html');
        if call.data=='delete_account':
            try:
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='‚úÖ –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç', callback_data='delete_account_confirm'))
                markup.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_action'))
                await call.message.answer('<i>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å</i>', reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('<i><b>&#10060; –û—à–∏–±–∫–∞: </b>{0}</i>'.format(e), parse_mode = 'html');
        if call.data=='log_out_confirm':
            try:
                a = call.from_user.id
                if call.message.chat.type!='private':
                    await call.message.answer('<i>&#10060; –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º</i>', parse_mode='html')
                    return
                cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                rasa = cursor.fetchone()[0]
                cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                nick = cursor.fetchone()[0]
                await main.send_message(fid, '<i><b><a href="tg://user?id={0}">{1}{2}</a></b> –≤—ã—à–µ–ª(-–∞) –∏–∑ —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞\n#user_logout</i>'.format(a, rasa, nick), parse_mode='html')
                cursor.execute('SELECT id FROM userdata WHERE user_id = ?', (a,))
                ide = cursor.fetchone()[0]
                cursor.execute('UPDATE userdata SET username="" WHERE user_id=?', (a,))
                conn.commit()
                cursor.execute('UPDATE userdata SET user_name="" WHERE user_id=?', (a,))
                conn.commit()
                cursor.execute('UPDATE userdata SET user_surname="" WHERE user_id=?', (a,))
                conn.commit()
                cursor.execute('UPDATE userdata SET user_id=0 WHERE id=?', (ide,))
                conn.commit()
                await call.message.answer('<i>&#9989; –í—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</i>', parse_mode = 'html');
            except Exception as e:
                await call.message.answer('<i><b>&#10060; –û—à–∏–±–∫–∞: </b>{0}</i>'.format(e), parse_mode = 'html');
        if call.data=='delete_account_confirm':
            try:
                a = call.from_user.id
                if call.message.chat.type!='private':
                    await call.message.answer('<i>&#10060; –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º</i>', parse_mode='html')
                    return
                cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                rasa = cursor.fetchone()[0]
                cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                nick = cursor.fetchone()[0]
                await main.send_message(fid, '<i><b><a href="tg://user?id={0}">{1}{2}</a></b> —É–¥–∞–ª–∏–ª(-–∞) —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç\n#user_deauth</i>'.format(a, rasa, nick), parse_mode='html')
                cursor.execute('DELETE FROM userdata WHERE user_id=?', (a,))
                conn.commit()
                await call.message.answer('<i>&#9989; –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –±—ã–ª –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É–¥–∞–ª—ë–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</i>', parse_mode = 'html');
            except Exception as e:
                await call.message.answer('<i><b>&#10060; –û—à–∏–±–∫–∞: </b>{0}</i>'.format(e), parse_mode = 'html');
        if call.data=='change_rasa':
            markup = types.InlineKeyboardMarkup()
            markup.add(
                types.InlineKeyboardButton(text='üê± –ö–æ—Ç', callback_data='cat'), 
                types.InlineKeyboardButton(text='üê∂ –°–æ–±–∞–∫–∞', callback_data='dog'),
                types.InlineKeyboardButton(text='ü¶ù –ï–Ω–æ—Ç', callback_data='raccoon'),
                types.InlineKeyboardButton(text='üê∏ –ñ–∞–±–∞', callback_data='frog'),
                types.InlineKeyboardButton(text='ü¶â –°–æ–≤–∞', callback_data='owl'))
            await call.message.answer('<i>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å—É</i>', reply_markup = markup, parse_mode = 'html')
        if call.data == 'cat':
            await call.answer(text='–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!')
            await setrasa(call.message, call.from_user, '&#128049', 0)
            await main.delete_message(call.message.chat.id, call.message.message_id)
        if call.data == 'dog':
            await call.answer(text='–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!')
            await setrasa(call.message, call.from_user, '&#128054', 1)
            await main.delete_message(call.message.chat.id, call.message.message_id)
        if call.data == 'raccoon':
            await call.answer(text='–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!')
            await setrasa(call.message, call.from_user, '&#129437', 2)
            await main.delete_message(call.message.chat.id, call.message.message_id)
        if call.data == 'frog':
            await call.answer(text='–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!')
            await setrasa(call.message, call.from_user, '&#128056;', 3)
            await main.delete_message(call.message.chat.id, call.message.message_id)
        if call.data == 'owl':
            await call.answer(text='–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!')
            await setrasa(call.message, call.from_user, '&#129417;', 4)
            await main.delete_message(call.message.chat.id, call.message.message_id)
        if call.data == 'set_user_profile':
            try:
                markup = types.InlineKeyboardMarkup()
                a = call.from_user.id
                markup.add(types.InlineKeyboardButton(text='üë§ –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫', callback_data='set_user_nick'))
                markup.add(types.InlineKeyboardButton(text='üìÉ –ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ', callback_data='set_user_bio'))
                markup.add(types.InlineKeyboardButton(text='ü§° –ò–∑–º–µ–Ω–∏—Ç—å —Ä–∞—Å—É', callback_data='change_rasa'))
                markup.add(types.InlineKeyboardButton(text='üñº –ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è', callback_data='set_user_photo'))
                await call.message.answer('<i><b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫: <code>/nick [–Ω–∏–∫]</code>\n–ò–∑–º–µ–Ω–∏—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è: <code>/bio [–æ–ø–∏—Å–∞–Ω–∏–µ]</code>\n–í—ã–±—Ä–∞—Ç—å —Ä–∞—Å—É: <code>–†–∞—Å–∞</code></i>', parse_mode = 'html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'user_settings':
            try:
                markup = types.InlineKeyboardMarkup()
                a = call.from_user.id
                cursor.execute('SELECT ready FROM userdata WHERE user_id=?', (a,))
                ready = cursor.fetchone()[0]
                markup.add(types.InlineKeyboardButton(text='‚öî –ë–æ–µ–≤–∞—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å: {0}'.format('–ì–æ—Ç–æ–≤' if ready==1 else '–ù–µ –≥–æ—Ç–æ–≤'), callback_data='set_user_mode'))
                markup.add(types.InlineKeyboardButton(text='ü§° –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è', callback_data='set_user_profile'))
                markup.add(types.InlineKeyboardButton(text='üîê –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å', callback_data='set_user_privacy'))
                await call.message.answer('<i><b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b></i>', parse_mode = 'html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'set_user_privacy':
            try:
                markup = types.InlineKeyboardMarkup()
                a = call.from_user.id
                cursor.execute('SELECT type FROM userdata WHERE user_id=?', (a,))
                ready = cursor.fetchone()[0]
                markup.add(types.InlineKeyboardButton(text='üîê –¢–∏–ø –ø—Ä–æ—Ñ–∏–ª—è: {0}'.format('–û—Ç–∫—Ä—ã—Ç—ã–π' if ready=='public' else '–ó–∞–∫—Ä—ã—Ç—ã–π'), callback_data='set_user_type'))
                markup.add(types.InlineKeyboardButton(text='üîë –ö–ª—é—á –¥–æ—Å—Ç—É–ø–∞', callback_data='set_user_key'))
                markup.add(types.InlineKeyboardButton(text='üîô –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞', callback_data='log_out'))
                markup.add(types.InlineKeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç', callback_data='delete_account'))
                await call.message.answer('<i><b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</b></i>', parse_mode = 'html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('buy_medicine_'):
            amr = int(call.data[13:])
            await buy(call, user=call.from_user, item='medicine', cost=500, amount=amr)
        if call.data.startswith('trolleybus_'):
            try:
                if not isinterval('trolleybus'):
                    await call.answer('–ü–æ—Å–∞–¥–∫–∞ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å. –¢—Ä–æ–ª–ª–µ–π–±—É—Å –ø—Ä–∏–µ–¥–µ—Ç —á–µ—Ä–µ–∑ {0}'.format(remaining('trolleybus')), show_alert = True)
                    return
                a = call.from_user.id
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                chid = call.message.chat.id
                dest = call.data[11:]
                ind = CITY.index(station)
                if dest=='forward':
                    nextstation = CITY[ind+1]
                else:
                    nextstation = CITY[ind-1]
                await main.delete_message(call.message.chat.id, call.message.message_id)
                await main.send_photo(chid, 'https://telegra.ph/file/411dad335dac249f8b1aa.jpg', caption='<i>–°–ª–µ–¥—É—é—â–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞: <b>{0}</b>. –û—Å—Ç–æ—Ä–æ–∂–Ω–æ, –¥–≤–µ—Ä–∏ –∑–∞–∫—Ä—ã–≤–∞—é—Ç—Å—è!</i>'.format(nextstation), parse_mode='html')
                await asyncio.sleep(random.randint(lessbus, morebus))
                cursor.execute('UPDATE userdata SET place=? WHERE user_id=?', (nextstation,a,))
                conn.commit()
                await buscall(call)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'market_mask':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                place = cursor.fetchone()[0]
                if place!='–†—ã–Ω–æ–∫':
                    return
                markup = types.InlineKeyboardMarkup(row_width = 3)
                itemlist = []
                cursor.execute('SELECT coef FROM globaldata')
                coef = cursor.fetchone()[0]
                for inst in ITEMS[1]:
                    ind = ITEMS[1].index(inst)
                    if itemdata(a, inst)!='emptyslot' and ITEMS[4][ind] == 'mask' and ITEMS[3][ind] > 0:
                        cost = int(ITEMS[3][ind]/coef)
                        itemlist.append(types.InlineKeyboardButton(text='{0} - ${1}'.format(ITEMS[0][ind], cost), callback_data='sellitem_{0}'.format(inst)))
                if itemlist==[]:
                    desc = '‚ùå –£ –≤–∞—Å –Ω–µ—Ç –º–∞—Å–æ–∫ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏'
                else:
                    markup.add(*itemlist)
                    desc = '<b>üè£ –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä—ã–Ω–æ–∫</b> - –º–µ—Å—Ç–æ, –≤ –∫–æ—Ç–æ—Ä–æ–º –º–æ–∂–Ω–æ –ø—Ä–æ–¥–∞—Ç—å –∫—É–ø–ª–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã. –î–µ—à–µ–≤–ª–µ, —á–µ–º –≤ –º–∞–≥–∞–∑–∏–Ω–µ, –Ω–æ —É–¥–æ–±–Ω–æ\n\n‚ùó –ó–¥–µ—Å—å –≤—ã <b>–ø—Ä–æ–¥–∞—ë—Ç–µ</b> —Ç–æ–≤–∞—Ä—ã –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤—É, –∞ –Ω–µ –ø–æ–∫—É–ø–∞–µ—Ç–µ. –î–µ–Ω—å–≥–∏ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –≤–∞—à —Ç–æ–≤–∞—Ä –Ω–∏–∫–æ–º—É –Ω–µ –¥–æ—Å—Ç–∞—ë—Ç—Å—è'
                markup.add(types.InlineKeyboardMarkup(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='cancel_action'))
                await call.message.answer('<i>{0}</i>'.format(desc), reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')

        if call.data == 'darkweb':
            try:
                a = call.from_user.id
                cursor.execute('SELECT key FROM userdata WHERE user_id = ?', (a,))
                key = cursor.fetchone()[0]
                if key == 0:
                    await call.message.answer('<i>&#10060; –£ –≤–∞—Å –Ω–µ—Ç —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞</i>', reply_markup = markup, parse_mode = 'html')
                    return
                await achieve(call.from_user.id, call.message.chat.id, 'black')
                markup = types.InlineKeyboardMarkup()
                markup.add(buybutton('msk'))
                markup.add(buybutton('pistol'))
                markup.add(buybutton('bron'))
                markup.add(buybutton('bomb'))
                markup.add(buybutton('workers'))
                markup.add(buybutton('truck'))
                markup.add(buybutton('poison'))
                await main.send_message(call.from_user.id, '<i>&#128272; –ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–∫—É–ø–∏—Ç—å?</i>', reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
            await main.delete_message(call.message.chat.id, call.message.message_id)
        if call.data == 'shop_24':
            markup = types.InlineKeyboardMarkup()
            markup.add(buybutton('bread', 'limited'))
            markup.add(buybutton('pelmeni', 'limited'))
            markup.add(buybutton('soup', 'limited'))
            markup.add(buybutton('meat', 'limited'))
            markup.add(buybutton('meatcake', 'limited'))
            markup.add(buybutton('tea', 'limited'))
            await call.message.answer('<i>–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?</i>', reply_markup = markup, parse_mode = 'html')
        if call.data == 'farm':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if station!='–†–æ—â–∞':
                    return
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='üêÑ –ü–æ–¥–æ–∏—Ç—å –∫–æ—Ä–æ–≤—É', callback_data='milk_cow'))
                await call.message.answer('<i>&#127806; –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Ñ–µ—Ä–º—É! –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–¥–æ–∏—Ç—å –∫–æ—Ä–æ–≤—É –∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—ã—à–∞—Ç—å —Å–≤–µ–∂–∏–º –≤–æ–∑–¥—É—Ö–æ–º!</i>', reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'milk_cow':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if station!='–†–æ—â–∞':
                    return
                cursor.execute('SELECT cow FROM userdata WHERE user_id=?', (a,))
                cow = cursor.fetchone()[0]
                markup = types.InlineKeyboardMarkup()
                if cow<1:
                    markup.add(types.InlineKeyboardButton(text='üåæ –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Ñ–µ—Ä–º—É', callback_data='farm'))
                    await call.message.answer('<i>&#128004; –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –≤–∞—Å –Ω–µ—Ç –∫–æ—Ä–æ–≤ :(</i>', reply_markup = markup, parse_mode = 'html')
                    return
                else:
                    markup.add(types.InlineKeyboardButton(text='ü•õ –î–æ–∏—Ç—å', callback_data='milk_cow_confirm'))
                    await call.message.answer('<i>&#128004; –£ –≤–∞—Å <b>{0}</b> –∫–æ—Ä–æ–≤. –ü—Ä–∏ –¥–æ–π–∫–µ —É –≤–∞—Å –∑–∞–±–µ—Ä—ë—Ç—Å—è –æ–¥–Ω–∞ –∫–æ—Ä–æ–≤–∞, –∞ –≤–∑–∞–º–µ–Ω –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å—Ç–∞–∫–∞–Ω –º–æ–ª–æ–∫–∞</i>'.format(cow), reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'milk_cow_confirm':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if station!='–†–æ—â–∞':
                    return
                cursor.execute('SELECT cow FROM userdata WHERE user_id=?', (a,))
                cow = cursor.fetchone()[0]
                markup = types.InlineKeyboardMarkup()
                if cow<1:
                    markup.add(types.InlineKeyboardButton(text='üåæ –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ —Ñ–µ—Ä–º—É', callback_data='farm'))
                    await call.message.answer('<i>&#128004; –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –≤–∞—Å –Ω–µ—Ç –∫–æ—Ä–æ–≤ :(</i>', reply_markup = markup, parse_mode = 'html')
                    return
                else:
                    await call.message.answer('<i>&#128004; –î–æ–π–∫–∞ –ø—Ä–æ–¥–ª–∏—Ç—Å—è –æ–∫–æ–ª–æ 10 —Å–µ–∫—É–Ω–¥</i>', parse_mode = 'html')
                    await asyncio.sleep(10)
                    cursor.execute('UPDATE userdata SET cow=cow-1 WHERE user_id=?', (a,))
                    cursor.execute('UPDATE userdata SET milk=milk+1 WHERE user_id=?', (a,))
                    conn.commit()
                    await call.message.answer('<i>&#128004; –î–æ–π–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ</i>', parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'gps':
            try:
                a = call.from_user.id
                cursor.execute('SELECT phone FROM userdata WHERE user_id=?', (a,))
                phone = cursor.fetchone()[0]
                if phone<1:
                    await call.answer('–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è GPS, –≤–∞–º –Ω—É–∂–µ–Ω —Ç–µ–ª–µ—Ñ–æ–Ω. –ï–≥–æ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω–µ –Ω–∞ —É–ª. –ì–µ–Ω–µ—Ä–∞–ª–∞ –®–µ–ª–±–∏ –∏ –æ–¥–Ω–æ–∏–º—ë–Ω–Ω–æ–π —Å—Ç–∞–Ω—Ü–∏–∏ –º–µ—Ç—Ä–æ', show_alert = True)
                    return
                categorylist = []
                markup = types.InlineKeyboardMarkup()
                for category in locations[3]:
                    if not category in categorylist:
                        categorylist.append(category)
                        count = 0
                        for location in locations[0]:
                            if locations[3][locations[0].index(location)] == category:
                                count+=1
                        markup.add(types.InlineKeyboardButton(text='{0} ({1})'.format(category, count), callback_data='gpsloc_{0}'.format(category)))
                markup.add(types.InlineKeyboardMarkup(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='cancel_action'))
                await call.message.answer('<i>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</i>', reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('gpsloc_'):
            try:
                a = call.from_user.id
                cursor.execute('SELECT phone FROM userdata WHERE user_id=?', (a,))
                phone = cursor.fetchone()[0]
                if phone<1:
                    await call.answer('–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è GPS, –≤–∞–º –Ω—É–∂–µ–Ω —Ç–µ–ª–µ—Ñ–æ–Ω. –ï–≥–æ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω–µ –Ω–∞ —É–ª. –ì–µ–Ω–µ—Ä–∞–ª–∞ –®–µ–ª–±–∏ –∏ –æ–¥–Ω–æ–∏–º—ë–Ω–Ω–æ–π —Å—Ç–∞–Ω—Ü–∏–∏ –º–µ—Ç—Ä–æ', show_alert = True)
                    return
                category = call.data.replace('gpsloc_', '')
                ls = []
                for location in locations[0]:
                    if locations[3][locations[0].index(location)] == category:
                        ls.append(types.InlineKeyboardButton(text=location, callback_data='location_{0}'.format(location)))
                markup = types.InlineKeyboardMarkup(row_width=2)
                markup.add(*ls)
                markup.add(types.InlineKeyboardMarkup(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='cancel_action'))
                await call.message.answer('<i>–í—ã–±–µ—Ä–∏—Ç–µ –ª–æ–∫–∞—Ü–∏—é</i>', reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('location_'):
            try:
                a = call.from_user.id
                cursor.execute('SELECT phone FROM userdata WHERE user_id=?', (a,))
                phone = cursor.fetchone()[0]
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                place = cursor.fetchone()[0]
                if phone<1:
                    await call.answer('–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è GPS, –≤–∞–º –Ω—É–∂–µ–Ω —Ç–µ–ª–µ—Ñ–æ–Ω. –ï–≥–æ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω–µ –Ω–∞ —É–ª. –ì–µ–Ω–µ—Ä–∞–ª–∞ –®–µ–ª–±–∏ –∏ –æ–¥–Ω–æ–∏–º—ë–Ω–Ω–æ–π —Å—Ç–∞–Ω—Ü–∏–∏ –º–µ—Ç—Ä–æ', show_alert = True)
                    return
                location = call.data.replace('location_', '')
                if not location in locations[0]:
                    return
                ind = locations[0].index(location)
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardMarkup(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='cancel_action'))
                await call.message.answer('<i><b>{0}</b>\n\n{1}\nüèõ –ú–µ—Å—Ç–Ω–æ—Å—Ç—å: <b>{2}</b>\n\n–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç —Ä—è–¥–æ–º:\n{3}</i>'.format(locations[0][ind], locations[1][ind], locations[2][ind], access(locations[2][ind], place)), reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'mask_clothes':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if station!='–¢–¶ –ú–∏–ì':
                    return
                markup = types.InlineKeyboardMarkup()
                markup.add(buybutton('clown'))
                markup.add(buybutton('ghost'))
                markup.add(buybutton('alien'))
                markup.add(buybutton('robot'))
                markup.add(buybutton('shit'))
                markup.add(buybutton('moyai'))
                await call.message.answer('<i>–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?</i>', reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'enot_kebab':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if not station in villages and not station in trains[0]:
                    return
                markup = types.InlineKeyboardMarkup()
                markup.add(buybutton('burger'))
                markup.add(buybutton('shaurma'))
                markup.add(buybutton('fries'))
                markup.add(buybutton('cheburek'))
                markup.add(buybutton('beer'))
                await call.message.answer('<i>–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?</i>', reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'car_park':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if station!='–ê–≤—Ç–æ–ø–∞—Ä–∫ –∏–º. –ö–æ—Ç–∞':
                    return
                markup = types.InlineKeyboardMarkup()
                markup.add(buybutton('car'))
                markup.add(buybutton('bluecar'))
                await call.message.answer('<i>–ö–∞–∫—É—é –º–∞—à–∏–Ω—É —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?</i>', reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'hospital':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if station!='–†–∞–π–±–æ–ª—å–Ω–∏—Ü–∞' and station!='–°—Ç–∞—Ä–æ–∫–æ—Ç–∞–π—Å–∫–∏–π –§–ê–ü':
                    return
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='üíä –¢–∞–±–ª–µ—Ç–∫–∞ –ö–æ—Ç—Ä–æ–±–µ–Ω–µ - $500', callback_data='buy_medicine_1'))
                markup.add(types.InlineKeyboardButton(text='üíä –ú–∞–ª–µ–Ω—å–∫–∞—è –ø–∞—á–∫–∞ (5 —à—Ç.) - $2500', callback_data='buy_medicine_5'))
                markup.add(types.InlineKeyboardButton(text='üíä –ë–∞–Ω–æ—á–∫–∞ (10 —à—Ç.) - $5000', callback_data='buy_medicine_10'))
                await call.message.answer('<i>–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏?</i>', reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'zoo':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place from userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if station!='–ó–æ–æ–ø–∞—Ä–∫':
                    return
                markup = types.InlineKeyboardMarkup()
                markup.add(buybutton('morj'))
                markup.add(buybutton('cow'))
                markup.add(buybutton('yozh'))
                markup.add(buybutton('wolf'))
                markup.add(buybutton('fox'))
                markup.add(buybutton('hamster'))
                await call.message.answer('<i>–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?</i>', reply_markup=markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'botan_garden':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place from userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if station!='–ë–æ—Ç–∞–Ω–∏—á–µ—Å–∫–∞—è':
                    return
                markup = types.InlineKeyboardMarkup()
                markup.add(buybutton('clover'))
                markup.add(buybutton('palm'))
                markup.add(buybutton('rose'))
                markup.add(buybutton('tulip'))
                markup.add(buybutton('houseplant'))
                markup.add(buybutton('cactus'))
                await call.message.answer('<i>–ß—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?</i>', reply_markup=markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'rob_bank_confirm':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place from userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                cursor.execute('SELECT balance from userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                if station!='–ñ–∏–≤–±–∞–Ω–∫':
                    return
                rand = random.randint(1,5)
                if rand<5:
                    if balance>=150:
                        cursor.execute('UPDATE userdata SET balance=? WHERE user_id=?', (balance-150, a,))
                        cursor.execute('UPDATE globaldata SET kazna=kazna+75')
                        conn.commit()
                        await call.message.answer('<i>–£ –≤–∞—Å –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ–≥—Ä–∞–±–∏—Ç—å –±–∞–Ω–∫. –ó–∞ —ç—Ç–æ –º—ã —Å–Ω—è–ª–∏ —É –≤–∞—Å —Å –±–∞–ª–∞–Ω—Å–∞ <b>$150</b></i>', parse_mode='html')
                    else:
                        cursor.execute('UPDATE userdata SET prison=? WHERE user_id=?', (current_time()+900, a,))
                        conn.commit()
                        cursor.execute('SELECT rasa from userdata WHERE user_id=?', (a,))
                        rasa = cursor.fetchone()[0]
                        cursor.execute('SELECT nick from userdata WHERE user_id=?', (a,))
                        nick = cursor.fetchone()[0]
                        await call.message.answer('<i>&#128110; –ì–æ—Å–ø–æ–¥–∏–Ω <b><a href="tg://user?id={0}">{1}{2}</a></b>, –≤—ã –∑–∞–¥–µ—Ä–∂–∞–Ω—ã –∑–∞ –ø–æ–ø—ã—Ç–∫—É –æ–≥—Ä–∞–±–ª–µ–Ω–∏—è –±–∞–Ω–∫–∞. –ü—Ä–æ–π–¥—ë–º—Ç–µ –≤ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ.\n\n–í—ã –±—ã–ª–∏ –∞—Ä–µ—Å—Ç–æ–≤–∞–Ω—ã –Ω–∞ <b>15 –º–∏–Ω—É—Ç</b></i>'.format(a, rasa, nick), parse_mode='html')
                if rand>=5:
                    rando = random.randint(150, 550)
                    cursor.execute("SELECT kazna FROM globaldata")
                    kazna = cursor.fetchone()[0]
                    if kazna>=rando:
                        await call.message.answer('<i>&#127942; –£ –≤–∞—Å –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ–≥—Ä–∞–±–∏—Ç—å –±–∞–Ω–∫! –í—ã —É–Ω–µ—Å–ª–∏ —Å —Å–æ–±–æ–π <b>${0}</b></i>'.format(rando), parse_mode='html')
                        cursor.execute('UPDATE globaldata SET kazna=kazna-?', (rando,))
                        cursor.execute('UPDATE userdata SET balance=? WHERE user_id=?', (balance+rando, a,))
                        conn.commit()
                    else:
                        await call.message.answer('&#10060; <i>–ê —á—Ç–æ –≤—ã –≥—Ä–∞–±–∏—Ç—å —Å–æ–±—Ä–∞–ª–∏—Å—å? –ö–∞–∑–Ω–∞ –ø—É—Å—Ç–∞</i>', parse_mode='html')
                await main.delete_message(call.message.chat.id, call.message.message_id)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'rob_bank':
            try:
                a = call.from_user.id
                items = 0
                cursor.execute('SELECT msk from userdata WHERE user_id=?', (a,))
                items += 1 if cursor.fetchone()[0]>=1 else 0
                cursor.execute('SELECT pistol from userdata WHERE user_id=?', (a,))
                items += 1 if cursor.fetchone()[0]>=1 else 0
                cursor.execute('SELECT bomb from userdata WHERE user_id=?', (a,))
                items += 1 if cursor.fetchone()[0]>=1 else 0
                cursor.execute('SELECT truck from userdata WHERE user_id=?', (a,))
                items += 1 if cursor.fetchone()[0]>=1 else 0
                cursor.execute('SELECT workers from userdata WHERE user_id=?', (a,))
                items += 1 if cursor.fetchone()[0]>=1 else 0
                cursor.execute('SELECT bron from userdata WHERE user_id=?', (a,))
                items += 1 if cursor.fetchone()[0]>=1 else 0
                if items<6:
                    await call.message.answer('<i>&#10060; –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –∫—Ä–∞–∂–∏. –í–∞–º –Ω—É–∂–Ω—ã:\n<b>&#128666; –ì—Ä—É–∑–æ–≤–∏–∫\n&#128299; –ü–∏—Å—Ç–æ–ª–µ—Ç\n&#128163; –ë–æ–º–±–∞\n&#129466; –ë—Ä–æ–Ω–µ–∂–∏–ª–µ—Ç\n&#128122; –ú–∞—Å–∫–∞\n&#128104; –ù–∞—ë–º–Ω–∏–∫–∏\n</b>–í—Å—ë —ç—Ç–æ –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –≤ <b>[–¥–∞–Ω–Ω—ã–µ –∑–∞—Å–µ–∫—Ä–µ—á–µ–Ω—ã]</b></i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT place from userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if station!='–ñ–∏–≤–±–∞–Ω–∫':
                    return
                markup = types.InlineKeyboardMarkup()
                markup.row(types.InlineKeyboardButton(text='ü§è', callback_data='rob_bank_confirm'), types.InlineKeyboardButton(text='ü§è', callback_data='rob_bank_confirm'), types.InlineKeyboardButton(text='ü§è', callback_data='rob_bank_confirm'))
                markup.row(types.InlineKeyboardButton(text='ü§è', callback_data='rob_bank_confirm'), types.InlineKeyboardButton(text='ü§è', callback_data='rob_bank_confirm'))
                await call.message.answer('<i>ü§è –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–æ—á–∫—É. –ï—Å–ª–∏ –ø–æ–≤–µ–∑—ë—Ç, –±–∞–Ω–∫ –æ–≥—Ä–∞–±–∏—Ç—Å—è!</i>', reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data=='go_out':
            await main.delete_message(call.message.chat.id, call.message.message_id)
        if call.data == 'university':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place from userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if station!='–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç':
                    return
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='‚ûï –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞', callback_data='play_math'))
                markup.add(types.InlineKeyboardButton(text='üåç –ì–µ–æ–≥—Ä–∞—Ñ–∏—è', callback_data='play_geo'))
                await call.message.answer('<i>üè´ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å—Å–∫–∏–π —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç</b>\n–ó–¥–µ—Å—å –∫–æ—Ç—ã, —Å–æ–±–∞–∫–∏, –µ–Ω–æ—Ç—ã, —Å–æ–≤—ã –∏ –∂–∞–±—ã (—à—É—á—É, –∂–∞–± —Ç–∞–º –Ω–µ—Ç :) –ø–æ–ª—É—á–∞—é—Ç –Ω–æ–≤—ã–µ –∑–Ω–∞–Ω–∏—è –∏ –æ–ø—ã—Ç —Å –ø–æ–º–æ—â—å—é –º–∏–Ω–∏-–∏–≥—Ä.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –º–∏–Ω–∏-–∏–≥—Ä—É. –£—á—Ç–∏—Ç–µ, —á—Ç–æ —É –≤–∞—Å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ $10 –Ω–∞ –±–∞–ª–∞–Ω—Å–µ, —á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å</i>', reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'factory':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place from userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                cursor.execute('SELECT electimes from userdata WHERE user_id=?', (a,))
                times = cursor.fetchone()[0]
                if station!='–ö–æ—Ç–∞–π—Å–∫–∏–π —ç–ª–µ–∫—Ç—Ä–æ–∑–∞–≤–æ–¥':
                    return
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='‚öô –®–µ—Å—Ç–µ—Ä—ë–Ω–∫–∏', callback_data='play_plant'))
                await call.message.answer('<i>üè≠ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ó–∞–≤–æ–¥</b>\n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–º–Ω–æ–≥–æ –¥–µ–Ω–µ–≥, –µ—Å–ª–∏ –∑–∞—Ä–ø–ª–∞—Ç—ã –æ—Ñ–∏—Å–Ω–æ–≥–æ —Ä–∞–±–æ—Ç–Ω–∏–∫–∞ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç.\n\n–í—ã–±–µ—Ä–∏—Ç–µ –º–∏–Ω–∏-–∏–≥—Ä—É. –£—á—Ç–∏—Ç–µ, —á—Ç–æ —É –≤–∞—Å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ $10 –Ω–∞ –±–∞–ª–∞–Ω—Å–µ, —á—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å.\n\n–ò–≥—Ä–∞—Ç—å –º–æ–∂–Ω–æ –Ω–µ –±–æ–ª–µ–µ 10 —Ä–∞–∑ –≤ –¥–µ–Ω—å. –°–µ–≥–æ–¥–Ω—è –≤—ã —É–∂–µ –∏–≥—Ä–∞–ª–∏ <b>{0}</b> —Ä–∞–∑</i>'.format(times), reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'play_math':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place from userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if station!='–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç':
                    return
                cursor.execute('SELECT balance from userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                cursor.execute('SELECT lastplay from userdata WHERE user_id=?', (a,))
                lastplay = cursor.fetchone()[0]
                diff = int(current_time()-lastplay)
                if diff<45*60:
                    await call.answer('‚ùå –í—ã –±—ã–ª–∏ –Ω–∞–∫–∞–∑–∞–Ω—ã –∑–∞ –Ω–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç. –î–æ —Å–Ω—è—Ç–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è –æ—Å—Ç–∞–ª–æ—Å—å {0} –º–∏–Ω—É—Ç {1} —Å–µ–∫—É–Ω–¥'.format(45-ceil(diff/60), 60-ceil(diff%60)), show_alert = True)
                    return
                if balance<10:
                    await call.answer('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ —ç—Ç—É –º–∏–Ω–∏-–∏–≥—Ä—É, —Ç.–∫. —É –≤–∞—Å –º–µ–Ω—å—à–µ $10 –Ω–∞ –±–∞–ª–∞–Ω—Å–µ', show_alert = True)
                    return
                operation = random.choice(['+', '-'])
                op1 = random.randint(50, 150)
                op2 = random.randint(50, 150)
                min = random.choice([0, 0, 0, 0, 0, 0, 0, 10, 20, -10, 5, -5, 10, -10, 2, -2])
                if operation == '+':
                    sum = op1+op2+min
                    real=op1+op2
                else:
                    sum = op1-op2+min
                    real=op1-op2
                cr = []
                markup = types.InlineKeyboardMarkup(row_width=2)
                cr.append(types.InlineKeyboardButton(text='–î–∞', callback_data='mathres correct {0} {1} {2} {3} 1'.format(op1, operation, op2, sum)))
                cr.append(types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='mathres wrong {0} {1} {2} {3} 1'.format(op1, operation, op2, sum)))
                markup.add(*cr)
                cr = []
                marc = types.InlineKeyboardMarkup(row_width=2)
                cr.append(types.InlineKeyboardButton(text='–î–∞', callback_data='mathres correct {0} {1} {2} {3} 2'.format(op1, operation, op2, sum)))
                cr.append(types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='mathres wrong {0} {1} {2} {3} 2'.format(op1, operation, op2, sum)))
                marc.add(*cr)
                seconds = 0
                msg = await call.message.answer('<i><b>–í–µ—Ä–Ω–æ –ª–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ?</b>\n{0} {1} {2} = {3}</i>'.format(op1, operation, op2, sum), reply_markup = markup, parse_mode = 'html')
                beginning = current_time()
                for seconds in range(1,11):
                    cursor.execute('SELECT lastmath from userdata WHERE user_id=?', (a,))
                    lastmath = cursor.fetchone()[0]
                    if lastmath!=msg['message_id']:
                        if seconds<=4:
                            current_mc = marc
                            nagrada = '–í–µ—Ä–Ω–æ –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å –≤ —Ç–µ—á–µ–Ω–∏–µ –ø–µ—Ä–≤—ã—Ö 4 —Å–µ–∫—É–Ω–¥, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–≥—Ä–∞–¥—É üí° <b>8 –æ—á–∫–æ–≤</b>'
                        else:
                            current_mc = markup
                            nagrada = '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç: üí° <b>4 –æ—á–∫–∞</b>'
                        await main.edit_message_text(chat_id = call.message.chat.id, message_id = msg['message_id'], text = '<i><b>–í–µ—Ä–Ω–æ –ª–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ?</b>\n{0} {1} {2} = {3}\n\n–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å, –ø–æ–∫–∞ –≤—Å–µ –∫–≤–∞–¥—Ä–∞—Ç–∏–∫–∏ –Ω–µ –∑–∞–ø–æ–ª–Ω—è—Ç—Å—è:\n{4}{5}\n\n{6}</i>'.format(op1, operation, op2, sum, 'üî≥'*seconds, '‚óª'*(10-seconds), nagrada), reply_markup = current_mc, parse_mode = 'html')
                        await asyncio.sleep(1)
                    else:
                        break
                cursor.execute('SELECT lastmath from userdata WHERE user_id=?', (a,))
                lastmath = cursor.fetchone()[0]
                if msg['message_id']!=lastmath:
                    await asyncio.sleep(1)
                    mark = types.InlineKeyboardMarkup(row_width = 2)
                    cr = []
                    if sum==real:
                        cr.append(types.InlineKeyboardButton(text='–î–∞‚úÖ', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='–ù–µ—Ç‚ùå', callback_data='alreadyno'))
                        ans = '<b>‚úÖ –î–∞</b>\n{0} {1} {2} = <b>{3}</b>'.format(op1, operation, op2, real)
                    else:
                        cr.append(types.InlineKeyboardButton(text='–î–∞‚ùå', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='–ù–µ—Ç‚úÖ', callback_data='alreadyno'))
                        ans = '<b>‚ùå –ù–µ—Ç</b>\n{0} {1} {2} = <del>{3}</del> <b>{4}</b>'.format(op1, operation, op2, sum, real)
                    mark.add(*cr)
                    your = '<code>–í—ã –Ω–µ –¥–∞–ª–∏ –æ—Ç–≤–µ—Ç–∞.\nüí≤ –®—Ç—Ä–∞—Ñ –∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—Ç–≤–µ—Ç–∞: $5</code>'
                    cursor.execute('UPDATE userdata SET balance=balance-5 WHERE user_id=?', (a,))
                    conn.commit()
                    mark.add(types.InlineKeyboardButton(text='üîÑ –ó–∞–Ω–æ–≤–æ', callback_data='play_math'))
                    await call.answer('–†–∞—É–Ω–¥ –∑–∞–∫–æ–Ω—á–µ–Ω')
                    cursor.execute("UPDATE userdata SET lastplay = ? WHERE user_id = ?", (current_time(),a,))
                    conn.commit()
                    await main.edit_message_text(chat_id = call.message.chat.id, message_id = msg['message_id'], text = '<i><b>–í–µ—Ä–Ω–æ –ª–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ?</b>\n\n–í–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç: {0}\n\n{1}</i>'.format(ans, your), reply_markup = mark, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'alreadyno':
            await call.answer('–ê —É–∂–µ –Ω–µ–ª—å–∑—è :)')
        if call.data.startswith('mathres '):
            try:
                a = call.from_user.id
                cursor.execute('SELECT place from userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if station!='–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç':
                    return
                cursor.execute('SELECT balance from userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                if balance<10:
                    await call.answer('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ —ç—Ç—É –º–∏–Ω–∏-–∏–≥—Ä—É, —Ç.–∫. —É –≤–∞—Å –º–µ–Ω—å—à–µ $10 –Ω–∞ –±–∞–ª–∞–Ω—Å–µ', show_alert = True)
                    return
                cursor.execute('UPDATE userdata SET lastmath=? WHERE user_id=?', (call.message.message_id, a,))
                conn.commit()
                res = call.data.split(' ')
                iscorrect = True if res[1]=='correct' else False
                op1 = int(res[2])
                operation = res[3]
                op2 = int(res[4])
                sum = int(res[5])
                bonus = int(res[6])
                if operation == '+':
                    real = op1+op2
                else:
                    real = op1-op2
                cr = []
                points = 4*bonus
                markup = types.InlineKeyboardMarkup(row_width=2)
                if iscorrect:
                    if sum==real:
                        cr.append(types.InlineKeyboardButton(text='–î–∞‚úÖ', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='alreadyno'))
                        await call.answer('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!')
                    else:
                        cr.append(types.InlineKeyboardButton(text='–î–∞‚ùå', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='alreadyno'))
                        await call.answer('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!')
                else:
                    if sum!=real:
                        cr.append(types.InlineKeyboardButton(text='–î–∞', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='–ù–µ—Ç‚úÖ', callback_data='alreadyno'))
                        await call.answer('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!')
                    else:
                        cr.append(types.InlineKeyboardButton(text='–î–∞', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='–ù–µ—Ç‚ùå', callback_data='alreadyno'))
                        await call.answer('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!')
                markup.add(*cr)
                markup.add(types.InlineKeyboardButton(text='üîÑ –ó–∞–Ω–æ–≤–æ', callback_data='play_math'))
                if sum == real:
                    ans = '<b>‚úÖ –î–∞</b>\n{0} {1} {2} = <b>{3}</b>'.format(op1, operation, op2, real)
                else:
                    ans = '<b>‚ùå –ù–µ—Ç</b>\n{0} {1} {2} = <del>{3}</del> <b>{4}</b>'.format(op1, operation, op2, sum, real)
                if (sum == real and iscorrect) or (sum != real and not iscorrect):
                    nagrada = ''
                    if bonus==2:
                        nagrada='\n–ë–æ–Ω—É—Å –∑–∞ –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç: 4 –æ—á–∫–∞'
                    your = '<code>–í–∞—à –æ—Ç–≤–µ—Ç –≤–µ—Ä–µ–Ω.\nüí° –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç: 4 –æ—á–∫–∞{0}\n\n–ò—Ç–æ–≥–æ: {1} –æ—á–∫–æ–≤</code>'.format(nagrada, points)
                    cursor.execute('UPDATE userdata SET points=points+? WHERE user_id=?', (points, a,))
                    conn.commit()
                else:
                    your = '<code>–í–∞—à –æ—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–µ–Ω.\nüí≤ –®—Ç—Ä–∞—Ñ –∑–∞ –Ω–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç: $10</code>'
                    cursor.execute('UPDATE userdata SET balance=balance-10 WHERE user_id=?', (a,))
                    conn.commit()
                    cursor.execute("UPDATE userdata SET lastplay = ? WHERE user_id = ?", (current_time(),a,))
                    conn.commit()
                msg = await main.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = '<i><b>–í–µ—Ä–Ω–æ –ª–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ?</b>\n\n–í–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç: {0}\n\n{1}</i>'.format(ans, your), reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'play_geo':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place from userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if station!='–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç':
                    return
                cursor.execute('SELECT balance from userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                if balance<10:
                    await call.answer('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ —ç—Ç—É –º–∏–Ω–∏-–∏–≥—Ä—É, —Ç.–∫. —É –≤–∞—Å –º–µ–Ω—å—à–µ $10 –Ω–∞ –±–∞–ª–∞–Ω—Å–µ', show_alert = True)
                    return
                cursor.execute('SELECT lastplay from userdata WHERE user_id=?', (a,))
                lastplay = cursor.fetchone()[0]
                diff = int(current_time()-lastplay)
                if diff<45*60:
                    await call.answer('‚ùå –í—ã –±—ã–ª–∏ –Ω–∞–∫–∞–∑–∞–Ω—ã –∑–∞ –Ω–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç. –î–æ —Å–Ω—è—Ç–∏—è –Ω–∞–∫–∞–∑–∞–Ω–∏—è –æ—Å—Ç–∞–ª–æ—Å—å {0} –º–∏–Ω—É—Ç {1} —Å–µ–∫—É–Ω–¥'.format(45-ceil(diff/60), 60-diff%60), show_alert = True)
                    return
                country = countries.index(random.choice(countries))
                situation = random.choice([0, 1])
                if situation == 0:
                    capital = country
                else:
                    capital = capitals.index(random.choice(capitals))
                cr = []
                markup = types.InlineKeyboardMarkup(row_width=2)
                cr.append(types.InlineKeyboardButton(text='–î–∞', callback_data='geores correct {0} {1}'.format(country, capital)))
                cr.append(types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='geores wrong {0} {1}'.format(country, capital)))
                markup.add(*cr)
                seconds = 0
                msg = await call.message.answer('<i><b>–í–µ—Ä–Ω–æ –ª–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ?</b>\n–°—Ç–æ–ª–∏—Ü–µ–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ <b>{0}</b> —è–≤–ª—è–µ—Ç—Å—è <b>{1}</b></i>'.format(countries[country], capitals[capital]), reply_markup = markup, parse_mode = 'html')
                beginning = current_time()
                for seconds in range(1,11):
                    cursor.execute('SELECT lastmath from userdata WHERE user_id=?', (a,))
                    lastmath = cursor.fetchone()[0]
                    if lastmath!=msg['message_id']:
                        current_mc = markup
                        nagrada = '–ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç: üí° <b>4 –æ—á–∫–∞</b>'
                        await main.edit_message_text(chat_id = call.message.chat.id, message_id = msg['message_id'], text = '<i><b>–í–µ—Ä–Ω–æ –ª–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ?</b>\n–°—Ç–æ–ª–∏—Ü–µ–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ <b>{0}</b> —è–≤–ª—è–µ—Ç—Å—è <b>{1}</b>\n\n–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å, –ø–æ–∫–∞ –≤—Å–µ –∫–≤–∞–¥—Ä–∞—Ç–∏–∫–∏ –Ω–µ –∑–∞–ø–æ–ª–Ω—è—Ç—Å—è:\n{2}{3}\n\n{4}</i>'.format(countries[country], capitals[capital], 'üî≥'*seconds, '‚óª'*(10-seconds), nagrada), reply_markup = current_mc, parse_mode = 'html')
                        await asyncio.sleep(1)
                    else:
                        break
                cursor.execute('SELECT lastmath from userdata WHERE user_id=?', (a,))
                lastmath = cursor.fetchone()[0]
                if msg['message_id']!=lastmath:
                    await asyncio.sleep(1)
                    mark = types.InlineKeyboardMarkup(row_width = 2)
                    cr = []
                    if country==capital:
                        cr.append(types.InlineKeyboardButton(text='–î–∞‚úÖ', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='–ù–µ—Ç‚ùå', callback_data='alreadyno'))
                        ans = '<b>‚úÖ –î–∞</b>\n–°—Ç–æ–ª–∏—Ü–µ–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ <b>{0}</b> —è–≤–ª—è–µ—Ç—Å—è <b>{1}</b>'.format(countries[country], capitals[capital])
                    else:
                        cr.append(types.InlineKeyboardButton(text='–î–∞‚ùå', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='–ù–µ—Ç‚úÖ', callback_data='alreadyno'))
                        ans = '<b>‚ùå –ù–µ—Ç</b>\n–°—Ç–æ–ª–∏—Ü–µ–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ <b>{0}</b> —è–≤–ª—è–µ—Ç—è <del>{1}</del> <b>{2}</b>.\n<b>{1}</b> —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–æ–ª–∏—Ü–µ–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ <b>{3}</b>'.format(countries[country], capitals[capital], capitals[country], countries[capital])
                    mark.add(*cr)
                    your = '<code>–í—ã –Ω–µ –¥–∞–ª–∏ –æ—Ç–≤–µ—Ç–∞.\nüí≤ –®—Ç—Ä–∞—Ñ –∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—Ç–≤–µ—Ç–∞: $5</code>'
                    cursor.execute('UPDATE userdata SET balance=balance-5 WHERE user_id=?', (a,))
                    conn.commit()
                    mark.add(types.InlineKeyboardButton(text='üîÑ –ó–∞–Ω–æ–≤–æ', callback_data='play_geo'))
                    await call.answer('–†–∞—É–Ω–¥ –∑–∞–∫–æ–Ω—á–µ–Ω')
                    await main.edit_message_text(chat_id = call.message.chat.id, message_id = msg['message_id'], text = '<i><b>–í–µ—Ä–Ω–æ –ª–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ?</b>\n\n–í–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç: {0}\n\n{1}</i>'.format(ans, your), reply_markup = mark, parse_mode = 'html')
                    cursor.execute("UPDATE userdata SET lastplay = ? WHERE user_id = ?", (current_time(),a,))
                    conn.commit()
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('geores '):
            try:
                a = call.from_user.id
                cursor.execute('SELECT place from userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if station!='–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç':
                    return
                cursor.execute('SELECT balance from userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                if balance<10:
                    await call.answer('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ —ç—Ç—É –º–∏–Ω–∏-–∏–≥—Ä—É, —Ç.–∫. —É –≤–∞—Å –º–µ–Ω—å—à–µ $10 –Ω–∞ –±–∞–ª–∞–Ω—Å–µ', show_alert = True)
                    return
                cursor.execute('UPDATE userdata SET lastmath=? WHERE user_id=?', (call.message.message_id, a,))
                conn.commit()
                res = call.data.split(' ')
                iscorrect = True if res[1]=='correct' else False
                country = int(res[2])
                capital = int(res[3])
                cr = []
                points = 4
                markup = types.InlineKeyboardMarkup(row_width=2)
                if iscorrect:
                    if capital==country:
                        cr.append(types.InlineKeyboardButton(text='–î–∞‚úÖ', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='alreadyno'))
                        await call.answer('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!')
                    else:
                        cr.append(types.InlineKeyboardButton(text='–î–∞‚ùå', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='alreadyno'))
                        await call.answer('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!')
                else:
                    if capital!=country:
                        cr.append(types.InlineKeyboardButton(text='–î–∞', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='–ù–µ—Ç‚úÖ', callback_data='alreadyno'))
                        await call.answer('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!')
                    else:
                        cr.append(types.InlineKeyboardButton(text='–î–∞', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='–ù–µ—Ç‚ùå', callback_data='alreadyno'))
                        await call.answer('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!')
                markup.add(*cr)
                markup.add(types.InlineKeyboardButton(text='üîÑ –ó–∞–Ω–æ–≤–æ', callback_data='play_geo'))
                if capital == country:
                    ans = '<b>‚úÖ –î–∞</b>\n–°—Ç–æ–ª–∏—Ü–µ–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ <b>{0}</b> —è–≤–ª—è–µ—Ç—Å—è <b>{1}</b>'.format(countries[country], capitals[capital])
                else:
                    ans = '<b>‚ùå –ù–µ—Ç</b>\n–°—Ç–æ–ª–∏—Ü–µ–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ <b>{0}</b> —è–≤–ª—è–µ—Ç—Å—è <del>{1}</del> <b>{2}</b>.\n<b>{1}</b> —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–æ–ª–∏—Ü–µ–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ <b>{3}</b>'.format(countries[country], capitals[capital], capitals[country], countries[capital])
                if (country == capital and iscorrect) or (country != capital and not iscorrect):
                    your = '<code>–í–∞—à –æ—Ç–≤–µ—Ç –≤–µ—Ä–µ–Ω.\nüí° –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç: 4 –æ—á–∫–∞</code>'
                    cursor.execute('UPDATE userdata SET points=points+? WHERE user_id=?', (points, a,))
                    conn.commit()
                else:
                    your = '<code>–í–∞—à –æ—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–µ–Ω.\nüí≤ –®—Ç—Ä–∞—Ñ –∑–∞ –Ω–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç: $10</code>'
                    cursor.execute('UPDATE userdata SET balance=balance-10 WHERE user_id=?', (a,))
                    conn.commit()
                    cursor.execute("UPDATE userdata SET lastplay = ? WHERE user_id = ?", (current_time(),a,))
                    conn.commit()
                msg = await main.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = '<i><b>–í–µ—Ä–Ω–æ –ª–∏ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ?</b>\n\n–í–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç: {0}\n\n{1}</i>'.format(ans, your), reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'play_plant':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place from userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if station!='–ö–æ—Ç–∞–π—Å–∫–∏–π —ç–ª–µ–∫—Ç—Ä–æ–∑–∞–≤–æ–¥':
                    return
                cursor.execute('SELECT balance from userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                if balance<10:
                    await call.answer('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ —ç—Ç—É –º–∏–Ω–∏-–∏–≥—Ä—É, —Ç.–∫. —É –≤–∞—Å –º–µ–Ω—å—à–µ $10 –Ω–∞ –±–∞–ª–∞–Ω—Å–µ', show_alert = True)
                    return
                cursor.execute('SELECT lastelec from userdata WHERE user_id=?', (a,))
                lastplay = cursor.fetchone()[0]
                cursor.execute('SELECT electimes from userdata WHERE user_id=?', (a,))
                electimes = cursor.fetchone()[0]
                diff = int(current_time()-lastplay)
                if diff<3600*24 and electimes>=10:
                    await call.answer('‚ùå –ù–∞ –ó–∞–≤–æ–¥–µ –º–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ –±–æ–ª–µ–µ 10 —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏. –î–æ —Å–ª–µ–¥—É—é—â–µ–π –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç–∞—Ç—å –æ—Å—Ç–∞–ª–æ—Å—å {0} —á–∞—Å–æ–≤ {1} –º–∏–Ω—É—Ç {2} —Å–µ–∫—É–Ω–¥'.format(24-ceil(diff/3600), 60-ceil(diff%3600/60), 60-ceil(diff%3600%60)), show_alert = True)
                    return
                dir = random.choice(['left', 'right'])
                dirn = '‚Ü©' if dir=='left' else '‚Ü™'
                amount = random.randint(2, 7)
                cr = []
                markup = types.InlineKeyboardMarkup(row_width=2)
                cr.append(types.InlineKeyboardButton(text='‚Ü©', callback_data='plantres left {0} {1}'.format(dir, amount)))
                cr.append(types.InlineKeyboardButton(text='‚Ü™', callback_data='plantres right {0} {1}'.format(dir, amount)))
                markup.add(*cr)
                seconds = 0
                msg = await call.message.answer('<i><b>–í –∫–∞–∫—É—é —Å—Ç–æ—Ä–æ–Ω—É –±—É–¥–µ—Ç –≤—Ä–∞—â–∞—Ç—å—Å—è –±–µ–ª—ã–π –∫—Ä—É–≥?</b>\n{0}{1}‚ö™</i>'.format(dirn, '‚öô'*amount), reply_markup = markup, parse_mode = 'html')
                beginning = current_time()
                for seconds in range(1,8):
                    cursor.execute('SELECT lastmath from userdata WHERE user_id=?', (a,))
                    lastmath = cursor.fetchone()[0]
                    if lastmath!=msg['message_id']:
                        current_mc = markup
                        nagrada = 'üí≤ –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç: <b>$15</b>'
                        await main.edit_message_text(chat_id = call.message.chat.id, message_id = msg['message_id'], text = '<i><b>–í –∫–∞–∫—É—é —Å—Ç–æ—Ä–æ–Ω—É –±—É–¥–µ—Ç –≤—Ä–∞—â–∞—Ç—å—Å—è –±–µ–ª—ã–π –∫—Ä—É–≥?</b>\n{0}{1}‚ö™\n\n–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å, –ø–æ–∫–∞ –≤—Å–µ –∫–≤–∞–¥—Ä–∞—Ç–∏–∫–∏ –Ω–µ –∑–∞–ø–æ–ª–Ω—è—Ç—Å—è:\n{2}{3}\n\n{4}</i>'.format(dirn, '‚öô'*amount, 'üî≥'*seconds, '‚óª'*(7-seconds), nagrada), reply_markup = current_mc, parse_mode = 'html')
                        await asyncio.sleep(1)
                    else:
                        break
                cursor.execute('SELECT lastmath from userdata WHERE user_id=?', (a,))
                lastmath = cursor.fetchone()[0]
                if msg['message_id']!=lastmath:
                    await asyncio.sleep(1)
                    mark = types.InlineKeyboardMarkup(row_width = 2)
                    cr = []
                    if (amount%2==1 and dir=='left') or (amount%2==0 and dir=='right'):
                        cr.append(types.InlineKeyboardButton(text='‚Ü©‚úÖ', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='‚Ü™‚ùå', callback_data='alreadyno'))
                        ans = '<b>‚Ü©</b>\n{0}{1}‚Ü©'.format(dirn, '‚öô'*amount)
                    else:
                        cr.append(types.InlineKeyboardButton(text='‚Ü©‚ùå', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='‚Ü™‚úÖ', callback_data='alreadyno'))
                        ans = '<b>‚Ü™</b>\n{0}{1}‚Ü™'.format(dirn, '‚öô'*amount)
                    mark.add(*cr)
                    your = '<code>–í—ã –Ω–µ –¥–∞–ª–∏ –æ—Ç–≤–µ—Ç–∞.\nüí≤ –®—Ç—Ä–∞—Ñ –∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –æ—Ç–≤–µ—Ç–∞: $5</code>'
                    cursor.execute('UPDATE userdata SET balance=balance-5 WHERE user_id=?', (a,))
                    conn.commit()
                    mark.add(types.InlineKeyboardButton(text='üîÑ –ó–∞–Ω–æ–≤–æ', callback_data='play_plant'))
                    await call.answer('–†–∞—É–Ω–¥ –∑–∞–∫–æ–Ω—á–µ–Ω')
                    await main.edit_message_text(chat_id = call.message.chat.id, message_id = msg['message_id'], text = '<i><b>–í –∫–∞–∫—É—é —Å—Ç–æ—Ä–æ–Ω—É –±—É–¥–µ—Ç –≤—Ä–∞—â–∞—Ç—å—Å—è –±–µ–ª—ã–π –∫—Ä—É–≥?</b>\n\n–í–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç: {0}\n\n{1}</i>'.format(ans, your), reply_markup = mark, parse_mode = 'html')
                    cursor.execute("UPDATE userdata SET electimes=electimes+1 WHERE user_id = ?", (a,))
                    conn.commit()
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('plantres '):
            try:
                a = call.from_user.id
                cursor.execute('SELECT place from userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                if station!='–ö–æ—Ç–∞–π—Å–∫–∏–π —ç–ª–µ–∫—Ç—Ä–æ–∑–∞–≤–æ–¥':
                    return
                cursor.execute('SELECT balance from userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                if balance<10:
                    await call.answer('‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∏–≥—Ä–∞—Ç—å –≤ —ç—Ç—É –º–∏–Ω–∏-–∏–≥—Ä—É, —Ç.–∫. —É –≤–∞—Å –º–µ–Ω—å—à–µ $10 –Ω–∞ –±–∞–ª–∞–Ω—Å–µ', show_alert = True)
                    return
                cursor.execute('UPDATE userdata SET lastmath=? WHERE user_id=?', (call.message.message_id, a,))
                conn.commit()
                res = call.data.split(' ')
                ansr = res[1]
                dir = res[2]
                amount = int(res[3])
                dirn = '‚Ü©' if dir=='left' else '‚Ü™'
                cr = []
                earning = 15
                markup = types.InlineKeyboardMarkup(row_width=2)
                if (amount%2==1 and dir=='left') or (amount%2==0 and dir=='right'):
                    correct_answer='left'
                else:
                    correct_answer='right'
                if ansr=='left':
                    if correct_answer=='left':
                        cr.append(types.InlineKeyboardButton(text='‚Ü©‚úÖ', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='‚Ü™', callback_data='alreadyno'))
                        await call.answer('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!')
                    else:
                        cr.append(types.InlineKeyboardButton(text='‚Ü©‚ùå', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='‚Ü™', callback_data='alreadyno'))
                        await call.answer('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!')
                else:
                    if correct_answer=='right':
                        cr.append(types.InlineKeyboardButton(text='‚Ü©', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='‚Ü™‚úÖ', callback_data='alreadyno'))
                        await call.answer('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!')
                    else:
                        cr.append(types.InlineKeyboardButton(text='‚Ü©', callback_data='alreadyno'))
                        cr.append(types.InlineKeyboardButton(text='‚Ü™‚ùå', callback_data='alreadyno'))
                        await call.answer('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!')
                markup.add(*cr)
                markup.add(types.InlineKeyboardButton(text='üîÑ –ó–∞–Ω–æ–≤–æ', callback_data='play_plant'))
                if correct_answer=='left':
                    ans = '<i><b>‚Ü©</b>\n{0}{1}‚Ü©</i>'.format(dirn, '‚öô'*amount)
                else:
                    ans = '<i><b>‚Ü™</b>\n{0}{1}‚Ü™</i>'.format(dirn, '‚öô'*amount)
                if correct_answer == ansr:
                    your = '<code>–í–∞—à –æ—Ç–≤–µ—Ç –≤–µ—Ä–µ–Ω.\nüí≤ –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç: $15</code>'
                    cursor.execute('UPDATE userdata SET balance=balance+? WHERE user_id=?', (earning, a,))
                    conn.commit()
                else:
                    your = '<code>–í–∞—à –æ—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–µ–Ω.\nüí≤ –®—Ç—Ä–∞—Ñ –∑–∞ –Ω–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç: $10</code>'
                    cursor.execute('UPDATE userdata SET balance=balance-10 WHERE user_id=?', (a,))
                    conn.commit()
                cursor.execute("UPDATE userdata SET electimes=electimes+1 WHERE user_id = ?", (a,))
                conn.commit()
                msg = await main.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = '<i><b>–í –∫–∞–∫—É—é —Å—Ç–æ—Ä–æ–Ω—É –±—É–¥–µ—Ç –≤—Ä–∞—â–∞—Ç—å—Å—è –±–µ–ª—ã–π –∫—Ä—É–≥?</b>\n\n–í–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç: {0}\n\n{1}</i>'.format(ans, your), reply_markup = markup, parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'state_balance':
            try:

            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('give_state '):
            try:
               
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('buy_metrotoken_'):
            a = int(call.data[15:])
            await buy(call, user=call.from_user, item='token', cost=metrocost, amount=a)
        if call.data.startswith('buy_traintoken_'):
            a = int(call.data[15:])
            await buy(call, user=call.from_user, item='traintoken', cost=traincost, amount=a)
        if call.data.startswith('buy_trolleytoken_'):
            a = int(call.data[17:])
            await buy(call, user=call.from_user, item='trolleytoken', cost=trolleycost, amount=a)
        if call.data == 'fight':
            try:
                a = call.from_user.id
                cursor.execute('SELECT nick FROM userdata WHERE user_id = ?', (a,))
                nick = cursor.fetchone()[0]
                cursor.execute('SELECT rasa FROM userdata WHERE user_id = ?', (a,))
                rasa = cursor.fetchone()[0]
                cursor.execute('SELECT battles FROM userdata WHERE user_id = ?', (a,))
                battles = cursor.fetchone()[0]
                cursor.execute('SELECT nick FROM userdata WHERE user_id = ?', (battles,))
                onick = cursor.fetchone()[0]
                cursor.execute('SELECT rasa FROM userdata WHERE user_id = ?', (battles,))
                orasa = cursor.fetchone()[0]
                if battles != 0:
                    rand = random.randint(1,10)
                    rand2 = random.randint(1,5)
                    cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                    balance = cursor.fetchone()[0]
                    cursor.execute('SELECT points FROM userdata WHERE user_id = ?', (a,))
                    points = cursor.fetchone()[0]
                    cursor.execute('UPDATE userdata SET balance = ? WHERE user_id=?', (balance+rand, a,))
                    conn.commit()
                    cursor.execute('UPDATE userdata SET points = ? WHERE user_id=?', (points+rand2, a,))
                    conn.commit()
                    await call.message.answer('<i><b><a href="tg://user?id={2}">{0}{1}</a></b> –ø–æ–±–µ–¥–∏–ª –∏ –ø–æ–ª—É—á–∞–µ—Ç <b>${3}</b> –∏ <b>{4}</b> –æ—á–∫–æ–≤!</i>'.format(rasa, nick, a, rand, rand2), parse_mode = 'html')
                    await achieve(call.from_user.id, call.message.chat.id, 'firstwin')
                    rand = random.choice([0, 1, 2, 3, 4, 5])
                    if rand==3:
                        randel = random.randint(25,75)
                        cursor.execute('UPDATE userdata SET health = health-? WHERE user_id=?', (randel, battles,))
                        conn.commit()
                        cursor.execute('SELECT health FROM userdata WHERE user_id = ?', (battles,))
                        health = cursor.fetchone()[0]
                        if health<=0:
                            cursor.execute('UPDATE userdata SET prison=? WHERE user_id=?', (current_time()+600, a,))
                            conn.commit()
                            await call.message.answer('<i>&#128110; –ì–æ—Å–ø–æ–¥–∏–Ω <b><a href="tg://user?id={0}">{1}{2}</a></b>, –≤—ã –∑–∞–¥–µ—Ä–∂–∞–Ω—ã –∑–∞ —É–±–∏–π—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫–∞ –≤ –±–æ—é. –ü—Ä–æ–π–¥—ë–º—Ç–µ –≤ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ.\n\n–í—ã –±—ã–ª–∏ –∞—Ä–µ—Å—Ç–æ–≤–∞–Ω—ã –Ω–∞ <b>10 –º–∏–Ω—É—Ç</b></i>'.format(a, rasa, nick), parse_mode='html')
                        await call.message.answer('&#128148; <i><b><a href="tg://user?id={2}">{0}{1}</a></b> –ø–æ–ª—É—á–∞–µ—Ç —Å–µ—Ä—å—ë–∑–Ω—É—é —Ç—Ä–∞–≤–º—É –∏ —Ç–µ—Ä—è–µ—Ç {3} –æ—á–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è :(</i>'.format(orasa, onick, battles, randel), parse_mode = 'html')
                    cursor.execute('UPDATE userdata SET battles = ? WHERE user_id=?', (0, a,))
                    conn.commit()
                    cursor.execute('UPDATE userdata SET battles = ? WHERE user_id=?', (0, battles,))
                    conn.commit()
                    now = current_time()
                    cursor.execute('UPDATE userdata SET lastfight = ? WHERE user_id=?', (now, a,))
                    conn.commit()
                    cursor.execute('UPDATE userdata SET lastfight = ? WHERE user_id=?', (now, battles,))
                    conn.commit()
                else:
                    await call.message.answer('<i><b><a href="tg://user?id={2}">{0}{1}</a></b>, —Ç–∞–∫ –Ω–µ—á–µ—Å—Ç–Ω–æ. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –±–æ–π, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <code>–±–æ–π</code></i>'.format(rasa, nick, a), parse_mode = 'html')
                    return
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
            try:
                await main.delete_message(call.message.chat.id, call.message.message_id)
            except:
                pass
        if call.data.startswith('go_bycab_'):
            try:
                a = call.from_user.id
                station = call.data[9:]
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                place = cursor.fetchone()[0]
                if not place in CITY:
                    return
                cost = (cabcost*abs(CITY.index(place)-CITY.index(station)))//1
                if balance<cost:
                    await call.answer('‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–µ–∑–¥–∫–∏', show_alert = True)
                    return
                await call.message.answer('<i>–°–∫–æ—Ä–æ –ø—Ä–∏–µ–¥–µ–º!</i>', parse_mode='html')
                try:
                    await main.delete_message(call.message.chat.id, call.message.message_id)
                except:
                    pass
                await asyncio.sleep(15)
                cursor.execute('UPDATE userdata SET place=? WHERE user_id=?', (station, a,))
                conn.commit()
                cursor.execute('UPDATE userdata SET balance=balance-? WHERE user_id=?', (cost, a,))
                conn.commit()
                await city(call.message, call.from_user.id)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('cabcost_'):
            try:
                a = call.from_user.id
                station = call.data[8:]
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                place = cursor.fetchone()[0]
                if not place in CITY:
                    return
                cost = (cabcost*abs(CITY.index(place)-CITY.index(station)))//1
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text = 'üöï –ï—Ö–∞—Ç—å', callback_data='go_bycab_{0}'.format(station)))
                markup.add(types.InlineKeyboardButton(text = '‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_action'))
                await call.message.answer('<i>–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–µ–∑–¥–∫–∏ –¥–æ –ª–æ–∫–∞—Ü–∏–∏ <b>{0}</b> - <b>${1}</b></i>'.format(station, cost), parse_mode='html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'cab':
            try:
                message = call.message
                a = call.from_user.id
                cursor.execute('SELECT lvl FROM userdata WHERE user_id=?', (a,))
                lvl = cursor.fetchone()[0]
                if lvl<lvlcab:
                    await call.answer('‚ùå –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —É—Ä–æ–≤–Ω—è {0}'.format(lvlcab), show_alert = True)
                    return
                markup = types.InlineKeyboardMarkup(row_width=2)
                temps = []
                for temp in CITY:
                    temps.append(types.InlineKeyboardButton(text='{0}'.format(temp), callback_data='cabcost_{0}'.format(temp)))
                markup.add(*temps)
                await message.answer('<i>&#128661; –ö—É–¥–∞ –ø–æ–µ–¥–µ–º?</i>', parse_mode='html', reply_markup=markup)
                await message.answer('<i>–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–µ–∑–¥–∫–∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –æ—Ç–¥–∞–ª—ë–Ω–Ω–æ—Å—Ç–∏ –º–µ—Å—Ç–∞, –≤ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –µ–¥–µ—Ç–µ. –ß—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ü–µ–Ω—É –ø–æ–µ–∑–¥–∫–∏ –¥–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ –º–µ—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω–µ–≥–æ –≤ —Å–ø–∏—Å–∫–µ –ª–æ–∫–∞—Ü–∏–π –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏</i>'.format(cabcost), parse_mode='html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('achievements'):
            try:
                a = call.from_user.id
                achieves = ''
                for achi in ach[0]:
                    achieves += '\n\n'
                    cursor.execute('SELECT {0} FROM userdata WHERE user_id=?'.format(achi), (a,))
                    if cursor.fetchone()[0] > 0:
                        achieves += '&#10004; '
                    ind = ach[0].index(achi)
                    name = ach[1][ind]
                    desc = ach[2][ind]
                    achieves += '<b>{0}</b>\n<b>–ó–∞–¥–∞–Ω–∏–µ: </b>{1}'.format(name, desc)
                    if ach[5][ind] != '':
                        cursor.execute('SELECT {0} FROM userdata WHERE user_id=?'.format(ach[5][ind]), (a,))
                        done = cursor.fetchone()[0]
                        achieves += '\n<b>–í—ã–ø–æ–ª–Ω–µ–Ω–æ: </b>{0}/{1}'.format(done, ach[6][ind])
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='üîÑ –û–±–Ω–æ–≤–∏—Ç—å', callback_data='achievements_del'))
                markup.add(types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='cancel_action'))
                await call.message.answer('<i><b>&#128161; –í–∞—à–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è</b>\n–í—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –æ—Ç–º–µ—á–µ–Ω—ã –∑–Ω–∞–∫–æ–º &#10004;{0}</i>'.format(achieves), parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
            if call.data == 'achievements_del':
                await main.delete_message(call.message.chat.id, call.message.message_id)
        if call.data == 'set_user_mode':
            try:
                a = call.from_user.id
                cursor.execute('SELECT nick FROM userdata WHERE user_id = ?', (a,))
                nick = cursor.fetchone()[0]
                cursor.execute('SELECT rasa FROM userdata WHERE user_id = ?', (a,))
                rasa = cursor.fetchone()[0]
                cursor.execute('SELECT ready FROM userdata WHERE user_id = ?', (a,))
                ready = cursor.fetchone()[0]
                if ready == 1:
                    cursor.execute('UPDATE userdata SET ready = ? WHERE user_id = ?', (0,a,))
                    conn.commit()
                else:
                    cursor.execute('UPDATE userdata SET ready = ? WHERE user_id = ?', (1,a,))
                    conn.commit()
                cursor.execute('SELECT ready FROM userdata WHERE user_id = ?', (a,))
                ready = cursor.fetchone()[0]
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å', callback_data='set_user_mode'))
                await main.delete_message(call.message.chat.id, call.message.message_id)
                await call.message.answer('<i><b><a href="tg://user?id={3}">{1}{2}</a></b>, –≤–∞—à —Ä–µ–∂–∏–º: <b>{0}</b></i>'.format('–Ω–µ –≥–æ—Ç–æ–≤' if ready == 0 else '–≥–æ—Ç–æ–≤', rasa, nick, a), parse_mode = 'html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'set_user_type':
            try:
                a = call.from_user.id
                cursor.execute('SELECT nick FROM userdata WHERE user_id = ?', (a,))
                nick = cursor.fetchone()[0]
                cursor.execute('SELECT rasa FROM userdata WHERE user_id = ?', (a,))
                rasa = cursor.fetchone()[0]
                cursor.execute('SELECT type FROM userdata WHERE user_id = ?', (a,))
                ready = cursor.fetchone()[0]
                if ready == 'private':
                    cursor.execute('UPDATE userdata SET type = ? WHERE user_id = ?', ('public',a,))
                    conn.commit()
                else:
                    cursor.execute('UPDATE userdata SET type = ? WHERE user_id = ?', ('private',a,))
                    conn.commit()
                cursor.execute('SELECT type FROM userdata WHERE user_id = ?', (a,))
                ready = cursor.fetchone()[0]
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å', callback_data='set_user_type'))
                await main.delete_message(call.message.chat.id, call.message.message_id)
                await call.message.answer('<i><b><a href="tg://user?id={3}">{1}{2}</a></b>, –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å —Ç–µ–ø–µ—Ä—å <b>{0}</b></i>'.format('–∑–∞–∫—Ä—ã—Ç—ã–π' if ready == 'private' else '–æ—Ç–∫—Ä—ã—Ç—ã–π', rasa, nick, a), parse_mode = 'html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'city':
            await city(call.message, call.from_user.id)
            await main.delete_message(call.message.chat.id, call.message.message_id)
        if call.data == 'metro':
            try:
                a = call.from_user.id
                cursor.execute('SELECT token FROM userdata WHERE user_id=?', (a,))
                token = cursor.fetchone()[0]
                cursor.execute('SELECT line FROM userdata WHERE user_id=?', (a,))
                line = cursor.fetchone()[0]
                markup = types.InlineKeyboardMarkup()
                if line!=0 and line!=2:
                    markup.add(types.InlineKeyboardButton(text='üöá –ü—Ä–æ–π—Ç–∏ –Ω–∞ —Å—Ç–∞–Ω—Ü–∏—é', callback_data='proceed_metro'))
                else:
                    markup.add(types.InlineKeyboardButton(text='üöâ –ü—Ä–æ–π—Ç–∏ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—É', callback_data='proceed_metro'))
                markup.add(types.InlineKeyboardButton(text='üé´ –ü–æ–∫—É–ø–∫–∞ –∂–µ—Ç–æ–Ω–æ–≤', callback_data='metro_tickets'))
                await call.message.answer('<i>–£ –≤–∞—Å <b>{0}</b> –∂–µ—Ç–æ–Ω–æ–≤</i>'.format(token), parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'trolleybus':
            try:
                a = call.from_user.id
                cursor.execute('SELECT trolleytoken FROM userdata WHERE user_id=?', (a,))
                token = cursor.fetchone()[0]
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='üöè –ü—Ä–æ–π—Ç–∏ –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫—É', callback_data='proceed_trolley'))
                markup.add(types.InlineKeyboardButton(text='üé´ –ü–æ–∫—É–ø–∫–∞ —Ç–∞–ª–æ–Ω–æ–≤', callback_data='trolley_tickets'))
                await call.message.answer('<i>–£ –≤–∞—Å <b>{0}</b> –ø—Ä–æ–µ–∑–¥–Ω—ã—Ö —Ç–∞–ª–æ–Ω–æ–≤</i>'.format(token), parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'proceed_metro':
            try:
                a = call.from_user.id
                cursor.execute('SELECT token FROM userdata WHERE user_id=?', (a,))
                token = cursor.fetchone()[0]
                if token<1:
                    markup = types.InlineKeyboardMarkup()
                    markup.add(types.InlineKeyboardButton(text='üé´ –ü–æ–∫—É–ø–∫–∞ –∂–µ—Ç–æ–Ω–æ–≤', callback_data='metro_tickets'))
                    await call.message.answer('<i>&#10060; –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∂–µ—Ç–æ–Ω–æ–≤</i>'.format(token), parse_mode='html', reply_markup=markup)
                    return
                cursor.execute('UPDATE userdata SET token=token-1 WHERE user_id=?', (a,))
                conn.commit()
                await metrocall(call)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'forward':
            try:
                a = call.from_user.id
                cursor.execute('SELECT line FROM userdata WHERE user_id=?', (a,))
                line = cursor.fetchone()[0]
                if line==0 or line==2:
                    if not isinterval('citylines'):
                        await call.answer('–ü–æ—Å–∞–¥–∫–∞ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å. –ü–æ–µ–∑–¥ –ø—Ä–∏–µ–¥–µ—Ç —á–µ—Ä–µ–∑ {0}'.format(remaining('citylines')), show_alert = True)
                        return
                else:
                    if not isinterval('metro'):
                        await call.answer('–ü–æ—Å–∞–¥–∫–∞ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å. –ü–æ–µ–∑–¥ –ø—Ä–∏–µ–¥–µ—Ç —á–µ—Ä–µ–∑ {0}'.format(remaining('metro')), show_alert = True)
                        return
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                ind = metro[line].index(station)
                if line!=2 and line!=0:
                    await main.send_photo(call.message.chat.id, 'https://te.legra.ph/file/5104458f4a5bab9259a18.jpg', caption='<i>–°–ª–µ–¥—É—é—â–∞—è —Å—Ç–∞–Ω—Ü–∏—è: <b>{0}</b>. –û—Å—Ç–æ—Ä–æ–∂–Ω–æ, –¥–≤–µ—Ä–∏ –∑–∞–∫—Ä—ã–≤–∞—é—Ç—Å—è!</i>'.format(metro[line][ind+1]), parse_mode='html')
                else:
                    await main.send_photo(call.message.chat.id, 'https://telegra.ph/file/06103228e0d120bacf852.jpg', caption='<i>–ü–æ—Å–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ª–µ–¥—É—é—â–∏–π –æ—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π –ø—É–Ω–∫—Ç: <b>{0}</b></i>'.format(metro[line][ind+1]), parse_mode='html')
                await main.delete_message(call.message.chat.id, call.message.message_id)
                await asyncio.sleep(random.randint(less,more))
                await tostation(user=a, station=metro[line][ind+1])
                await metrocall(call)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'back':
            try:
                a = call.from_user.id
                cursor.execute('SELECT line FROM userdata WHERE user_id=?', (a,))
                line = cursor.fetchone()[0]
                if line==0 or line==2:
                    if not isinterval('citylines'):
                        await call.answer('–ü–æ—Å–∞–¥–∫–∞ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å. –ü–æ–µ–∑–¥ –ø—Ä–∏–µ–¥–µ—Ç —á–µ—Ä–µ–∑ {0}'.format(remaining('citylines')), show_alert = True)
                        return
                else:
                    if not isinterval('metro'):
                        await call.answer('–ü–æ—Å–∞–¥–∫–∞ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å. –ü–æ–µ–∑–¥ –ø—Ä–∏–µ–¥–µ—Ç —á–µ—Ä–µ–∑ {0}'.format(remaining('metro')), show_alert = True)
                        return
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                ind = metro[line].index(station)
                if line!=2 and line!=0:
                    await main.send_photo(call.message.chat.id, 'https://te.legra.ph/file/5104458f4a5bab9259a18.jpg', caption='<i>–°–ª–µ–¥—É—é—â–∞—è —Å—Ç–∞–Ω—Ü–∏—è: <b>{0}</b>. –û—Å—Ç–æ—Ä–æ–∂–Ω–æ, –¥–≤–µ—Ä–∏ –∑–∞–∫—Ä—ã–≤–∞—é—Ç—Å—è!</i>'.format(metro[line][ind-1]), parse_mode='html')
                else:
                    await main.send_photo(call.message.chat.id, 'https://telegra.ph/file/06103228e0d120bacf852.jpg', caption='<i>–ü–æ—Å–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ª–µ–¥—É—é—â–∏–π –æ—Å—Ç–∞–Ω–æ–≤–æ—á–Ω—ã–π –ø—É–Ω–∫—Ç: <b>{0}</b></i>'.format(metro[line][ind-1]), parse_mode='html')
                await main.delete_message(call.message.chat.id, call.message.message_id)
                await asyncio.sleep(random.randint(less, more))
                await tostation(user=a, station=metro[line][ind-1])
                await metrocall(call)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
            await main.delete_message(call.message.chat.id, call.message.message_id)
        if call.data == 'chats':
            await chats(call.from_user.id, call.message)
        if call.data == 'economics':
            try:
                cursor.execute("SELECT kazna FROM globaldata")
                kazna = cursor.fetchone()[0]
                cursor.execute("SELECT balance FROM clandata WHERE group_id=-1001395868701")
                balance = cursor.fetchone()[0]
                cursor.execute("SELECT lastfill FROM globaldata")
                lastfill = cursor.fetchone()[0]
                cursor.execute("SELECT coef FROM globaldata")
                coef = cursor.fetchone()[0]
                diff = current_time()-lastfill
                h = floor(diff/3600)
                m = floor(diff%3600/60)
                s = floor(diff%3600%60)
                limits = ''
                for inst in limiteds:
                    limits+='\n{0} {1} - '.format(ITEMS[0][ITEMS[1].index(inst)], ITEMS[2][ITEMS[1].index(inst)])
                    cursor.execute("SELECT {0} FROM globaldata".format(inst))
                    temp = cursor.fetchone()[0]
                    if temp<=0:
                        limits+='–¥–µ—Ñ–∏—Ü–∏—Ç'
                    else:
                        limits+=str(temp)
                await call.message.answer('<i><b>&#128202; –≠–ö–û–ù–û–ú–ò–ö–ê –ñ–ò–í–û–ü–û–õ–ò–°–ê</b>\n\n&#128184; <b>–§–∏–Ω–∞–Ω—Å—ã</b>\n&#128176; –ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–∞–∑–Ω–∞ - <b>${0}</b>\n&#127918; –ë–∞–ª–∞–Ω—Å –ò–≥—Ä–æ–≤–æ–≥–æ –∫–ª—É–±–∞ - <b>${1}</b>\n\n&#127978; <b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ –≤ –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ–º</b>{2}\n\n&#128666; –ó–∞–≤–æ–∑ —Ç–æ–≤–∞—Ä–∞ –≤ –ö—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω—ã–π –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–≤–æ–∑ –±—ã–ª {3} —á–∞—Å–æ–≤ {4} –º–∏–Ω—É—Ç {5} —Å–µ–∫—É–Ω–¥ –Ω–∞–∑–∞–¥\n\n&#128176; <b>–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä—ã–Ω–æ–∫</b>\n–†—ã–Ω–æ—á–Ω–∞—è —Å—Ç–∞–≤–∫–∞: {6}</i>'.format(kazna, balance, limits, h, m, s, round(1/coef, 2)), parse_mode='html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'help':
            await call.message.answer('<i><b>&#10067; –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏–≥—Ä–µ –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å</b>\n–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: https://telegra.ph/Komandy-ZHivopolisa-11-21\n–ö–∞–∫ –∏–≥—Ä–∞—Ç—å: https://telegra.ph/Kak-igrat-v-ZHivopolis-11-21</i>', parse_mode = 'html')
        if call.data == 'transfer':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                cursor.execute('UPDATE userdata SET line=? WHERE user_id=?', (transfer(a), a,))
                conn.commit()
                cursor.execute('UPDATE userdata SET place=? WHERE user_id=?', (station, a,))
                conn.commit()
                await metrocall(call)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
            await main.delete_message(call.message.chat.id, call.message.message_id)
        if call.data == 'airport':
            try:
                await aircall(call)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'flight':
            try:
                if not isinterval('plane'):
                    await call.answer('–ü–æ—Å–∞–¥–∫–∞ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å. –°–∞–º–æ–ª—ë—Ç –ø—Ä–∏–ª–µ—Ç–∏—Ç —á–µ—Ä–µ–∑ {0}'.format(remaining('plane')), show_alert = True)
                    return
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='üõ´ –õ–µ—Ç–µ—Ç—å', callback_data='flight_confirm'))
                markup.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_action'))
                await call.message.answer('<i>&#128745; –ü–æ–ª—ë—Ç –Ω–∞ —Å–∞–º–æ–ª—ë—Ç–µ —Å—Ç–æ–∏—Ç <b>${0}</b>. –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å?</i>'.format(aircost), parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'flight_confirm':
            try:
                if not isinterval('plane'):
                    await call.answer('–ü–æ—Å–∞–¥–∫–∞ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å. –°–∞–º–æ–ª—ë—Ç –ø—Ä–∏–ª–µ—Ç–∏—Ç —á–µ—Ä–µ–∑ {0}'.format(remaining('plane')), show_alert = True)
                    return
                a = call.from_user.id
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                if balance<=aircost:
                    await call.message.answer('<i>–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ :(</i>', parse_mode='html')
                    return
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                cursor.execute('UPDATE userdata SET balance=balance-? WHERE user_id=?', (aircost,a,))
                conn.commit()
                tim = random.randint(lessair, moreair)
                if station == '–ê—ç—Ä–æ–ø–æ—Ä—Ç –ö–æ—Ç–∞–π':
                    await main.send_photo(call.message.chat.id, 'https://telegra.ph/file/d34459cedf14cb4b4a19a.jpg', caption='<i>–ù–∞—à —Å–∞–º–æ–ª—ë—Ç –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∫ <b>–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º—É –∞—ç—Ä–æ–ø–æ—Ä—Ç—É –ñ–∏–≤–æ–ø–æ–ª–∏—Å</b>. –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∑–∞–π–º—ë—Ç –Ω–µ –±–æ–ª–µ–µ 2 –º–∏–Ω—É—Ç. –£–¥–∞—á–Ω–æ–≥–æ –ø–æ–ª—ë—Ç–∞!</i>', parse_mode = 'html')
                    dest = '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞—ç—Ä–æ–ø–æ—Ä—Ç'
                    destline = 2
                    await asyncio.sleep(tim)
                    await tostation(user=a, station=dest, line=destline)
                    await aircall(call)
                elif station == '–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞—ç—Ä–æ–ø–æ—Ä—Ç':
                    await main.send_photo(call.message.chat.id, 'https://telegra.ph/file/d34459cedf14cb4b4a19a.jpg', caption='<i>–ù–∞—à —Å–∞–º–æ–ª—ë—Ç –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –∫ <b>–ê—ç—Ä–æ–ø–æ—Ä—Ç—É –ö–æ—Ç–∞–π</b>. –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∑–∞–π–º—ë—Ç –Ω–µ –±–æ–ª–µ–µ 2 –º–∏–Ω—É—Ç. –£–¥–∞—á–Ω–æ–≥–æ –ø–æ–ª—ë—Ç–∞!</i>', parse_mode = 'html')
                    dest = '–ê—ç—Ä–æ–ø–æ—Ä—Ç –ö–æ—Ç–∞–π'
                    destline = 1
                    await asyncio.sleep(tim)
                    await tostation(user=a, station=dest, line=destline)
                    await aircall(call)
                    await achieve(a, call.message.chat.id, 'flightach')
                else:
                    return
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
            await main.delete_message(call.message.chat.id, call.message.message_id)
        if call.data == 'railway_tickets':
            try:
                markup = types.InlineKeyboardMarkup()
                a = traincost
                markup.add(types.InlineKeyboardButton(text='1 –±–∏–ª–µ—Ç - ${0}'.format(a), callback_data='buy_traintoken_1'))
                markup.add(types.InlineKeyboardButton(text='5 –±–∏–ª–µ—Ç–æ–≤ - ${0}'.format(a*5), callback_data='buy_traintoken_5'))
                markup.add(types.InlineKeyboardButton(text='10 –±–∏–ª–µ—Ç–æ–≤ - ${0}'.format(a*10), callback_data='buy_traintoken_10'))
                markup.add(types.InlineKeyboardButton(text='20 –±–∏–ª–µ—Ç–æ–≤ - ${0}'.format(a*20), callback_data='buy_traintoken_20'))
                markup.add(types.InlineKeyboardButton(text='50 –±–∏–ª–µ—Ç–æ–≤ - ${0}'.format(a*50), callback_data='buy_traintoken_50'))
                markup.add(types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='cancel_action'))
                await call.message.answer('<i>–°–∫–æ–ª—å–∫–æ –±–∏–ª–µ—Ç–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?\n–¢–∞—Ä–∏—Ñ <b>–ñ–µ–ª–µ–∑–Ω–∞—è –¥–æ—Ä–æ–≥–∞</b></i>', parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'metro_tickets':
            try:
                markup = types.InlineKeyboardMarkup()
                a = metrocost
                markup.add(types.InlineKeyboardButton(text='1 –∂–µ—Ç–æ–Ω - ${0}'.format(a), callback_data='buy_metrotoken_1'))
                markup.add(types.InlineKeyboardButton(text='5 –∂–µ—Ç–æ–Ω–æ–≤ - ${0}'.format(a*5), callback_data='buy_metrotoken_5'))
                markup.add(types.InlineKeyboardButton(text='10 –∂–µ—Ç–æ–Ω–æ–≤ - ${0}'.format(a*10), callback_data='buy_metrotoken_10'))
                markup.add(types.InlineKeyboardButton(text='20 –∂–µ—Ç–æ–Ω–æ–≤ - ${0}'.format(a*20), callback_data='buy_metrotoken_20'))
                markup.add(types.InlineKeyboardButton(text='50 –∂–µ—Ç–æ–Ω–æ–≤ - ${0}'.format(a*50), callback_data='buy_metrotoken_50'))
                markup.add(types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='cancel_action'))
                await call.message.answer('<i>–°–∫–æ–ª—å–∫–æ –∂–µ—Ç–æ–Ω–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?\n–¢–∞—Ä–∏—Ñ <b>–ú–µ—Ç—Ä–æ –∏ –≥–æ—Ä–æ–¥—Å–∫–∞—è —ç–ª–µ–∫—Ç—Ä–∏—á–∫–∞</b></i>', parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'trolley_tickets':
            try:
                markup = types.InlineKeyboardMarkup()
                a = metrocost
                markup.add(types.InlineKeyboardButton(text='1 —Ç–∞–ª–æ–Ω - ${0}'.format(a), callback_data='buy_trolleytoken_1'))
                markup.add(types.InlineKeyboardButton(text='5 —Ç–∞–ª–æ–Ω–æ–≤ - ${0}'.format(a*5), callback_data='buy_trolleytoken_5'))
                markup.add(types.InlineKeyboardButton(text='10 —Ç–∞–ª–æ–Ω–æ–≤ - ${0}'.format(a*10), callback_data='buy_trolleytoken_10'))
                markup.add(types.InlineKeyboardButton(text='20 —Ç–∞–ª–æ–Ω–æ–≤ - ${0}'.format(a*20), callback_data='buy_trolleytoken_20'))
                markup.add(types.InlineKeyboardButton(text='50 —Ç–∞–ª–æ–Ω–æ–≤ - ${0}'.format(a*50), callback_data='buy_trolleytoken_50'))
                markup.add(types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='cancel_action'))
                await call.message.answer('<i>–°–∫–æ–ª—å–∫–æ —Ç–∞–ª–æ–Ω–æ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å?\n–¢–∞—Ä–∏—Ñ <b>–¢—Ä–æ–ª–ª–µ–π–±—É—Å</b></i>', parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'tickets':
            try:
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='üöá –ú–µ—Ç—Ä–æ –∏ –≥–æ—Ä–æ–¥—Å–∫–∞—è —ç–ª–µ–∫—Ç—Ä–∏—á–∫–∞', callback_data='metro_tickets'))
                markup.add(types.InlineKeyboardButton(text='üöÜ –ñ–µ–ª–µ–∑–Ω–∞—è –¥–æ—Ä–æ–≥–∞', callback_data='railway_tickets'))
                markup.add(types.InlineKeyboardButton(text='üöé –¢—Ä–æ–ª–ª–µ–π–±—É—Å', callback_data='trolley_tickets'))
                markup.add(types.InlineKeyboardMarkup(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='cancel_action'))
                await call.message.answer('<i>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∞—Ä–∏—Ñ</i>', parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'railway_station':
            try:
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='üí∫ –ó–∞–ª –æ–∂–∏–¥–∞–Ω–∏—è', callback_data='lounge'))
                markup.add(types.InlineKeyboardButton(text='üé´ –ë–∏–ª–µ—Ç–Ω—ã–µ –∫–∞—Å—Å—ã', callback_data='tickets'))
                markup.add(types.InlineKeyboardButton(text='üçî –ö–∞—Ñ–µ—Ç–µ—Ä–∏–π "–ï–Ω–æ—Ç –ö–µ–±–∞–±"', callback_data='enot_kebab'))
                await call.message.answer('<i>–ü–æ—Ä–∞ —É–∂–µ –≤–∞–ª–∏—Ç—å –æ—Ç—Å—é–¥–∞...</i>', parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'bus':
            try:
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='üöå –ö –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º', callback_data='bus_lounge'))
                markup.add(types.InlineKeyboardButton(text='üé´ –ë–∏–ª–µ—Ç–Ω—ã–µ –∫–∞—Å—Å—ã', callback_data='tickets'))
                markup.add(types.InlineKeyboardButton(text='üçî –ö–∞—Ñ–µ—Ç–µ—Ä–∏–π "–ï–Ω–æ—Ç –ö–µ–±–∞–±"', callback_data='enot_kebab'))
                await call.message.answer('<i>–ü–æ—Ä–∞ —É–∂–µ –≤–∞–ª–∏—Ç—å –æ—Ç—Å—é–¥–∞...</i>', parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'lounge':
            try:
                await traincall(call)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'bus_lounge':
            try:
                await regbuscall(call)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'work':
            try:
                await work(call)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'salary':
            try:
                await ask(call.from_user.id, call.message)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('train_'):
            try:
                if not isinterval('train'):
                    await call.answer('–ü–æ—Å–∞–¥–∫–∞ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å. –ü–æ–µ–∑–¥ –ø—Ä–∏–µ–¥–µ—Ç —á–µ—Ä–µ–∑ {0}'.format(remaining('train')), show_alert = True)
                    return
                a = call.from_user.id
                st = call.data[6:]
                cursor.execute('SELECT traintoken FROM userdata WHERE user_id=?', (a,))
                traintoken = cursor.fetchone()[0]
                if traintoken<1:
                    markup = types.InlineKeyboardMarkup()
                    markup.add(types.InlineKeyboardButton(text='üé´ –ü–æ–∫—É–ø–∫–∞ –±–∏–ª–µ—Ç–æ–≤', callback_data='tickets'))
                    await call.message.answer('<i>&#10060; –£ –≤–∞—Å –Ω–µ—Ç –±–∏–ª–µ—Ç–∞</i>', parse_mode='html', reply_markup=markup)
                    return
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                cursor.execute('UPDATE userdata SET traintoken=traintoken-1 WHERE user_id=?', (a,))
                tim = random.randint(lesstrain, moretrain)
                name = trains[2][trains[0].index(st)]
                await main.delete_message(call.message.chat.id, call.message.message_id)
                await main.send_photo(call.message.chat.id, 'https://telegra.ph/file/ead2a4bfc5e78cf56ba1e.jpg', caption='üöÜ <i>–ù–∞—à –ø–æ–µ–∑–¥ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ —Å—Ç–∞–Ω—Ü–∏—é <b>{0}</b>. –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∑–∞–π–º—ë—Ç –Ω–µ –±–æ–ª—å—à–µ –º–∏–Ω—É—Ç—ã. –£–¥–∞—á–Ω–æ–π –ø–æ–µ–∑–¥–∫–∏!</i>'.format(name), parse_mode = 'html')
                await asyncio.sleep(tim)
                await tostation(user=a, station=st)
                await traincall(call)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('walk_'):
            try:
                a = call.from_user.id
                message = call.message
                name = call.data[5:]
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                exists = False
                index = 0
                for wlk in walk:
                    if station in wlk:
                        exists = True
                        index = wlk.index(station)
                if not exists:
                    return
                exists = False
                for wlk in walk:
                    if wlk[index] == name:
                        exists = True
                if not exists:
                    return
                tim = walks[index]
                await call.message.answer('üö∂ <i>–ö–∞–∫ –∂–µ —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–π—Ç–∏—Å—å –ø–µ—à–æ—á–∫–æ–º. –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –¥–æ –º–µ—Å—Ç–∞ <b>{0}</b> –∑–∞–π–º—ë—Ç –æ–∫–æ–ª–æ {1} —Å–µ–∫—É–Ω–¥. –£–¥–∞—á–Ω–æ–≥–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è!</i>'.format(name, tim), parse_mode = 'html')
                await asyncio.sleep(tim)
                await tostation(user=a, station=name)
                cursor.execute('UPDATE userdata SET walk=walk+1 WHERE user_id=?', (a,))
                conn.commit()
                cursor.execute("SELECT walk FROM userdata WHERE user_id=?", (a,))
                walked = cursor.fetchone()[0]
                if walked>=20:
                    await achieve(a, call.message.chat.id, 'walkach')
                await city(message, a)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('gobus_'):
            try:
                if not isinterval('taxi'):
                    await call.answer('–ü–æ—Å–∞–¥–∫–∞ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å. –ú–∞—Ä—à—Ä—É—Ç–∫–∞ –ø—Ä–∏–µ–¥–µ—Ç —á–µ—Ä–µ–∑ {0}'.format(remaining('taxi')), show_alert = True)
                    return
                a = call.from_user.id
                name = call.data[6:]
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                if balance<buscost:
                    markup = types.InlineKeyboardMarkup()
                    await call.message.answer('<i>&#10060; –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥</i>', parse_mode='html', reply_markup=markup)
                    return
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                cursor.execute('UPDATE userdata SET balance=balance-? WHERE user_id=?', (buscost,a,))
                tim = random.randint(lesstrain, moretrain)
                await main.send_photo(call.message.chat.id, 'https://telegra.ph/file/8da21dc03e8f266e0845a.jpg', caption='üöê <i>–ü–æ—Å–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ª–µ–¥—É—é—â–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞: <b>{0}</b>. –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∑–∞–π–º—ë—Ç –Ω–µ –±–æ–ª—å—à–µ –º–∏–Ω—É—Ç—ã. –£–¥–∞—á–Ω–æ–π –ø–æ–µ–∑–¥–∫–∏!</i>'.format(name), parse_mode = 'html')
                await main.delete_message(call.message.chat.id, call.message.message_id)
                await asyncio.sleep(tim)
                await tostation(user=a, station=name)
                await regbuscall(call)
                await achieve(a, call.message.chat.id, 'busride')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('goreg_'):
            try:
                if not isinterval('bus'):
                    await call.answer('–ü–æ—Å–∞–¥–∫–∞ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å. –ê–≤—Ç–æ–±—É—Å –ø—Ä–∏–µ–¥–µ—Ç —á–µ—Ä–µ–∑ {0}'.format(remaining('bus')), show_alert = True)
                    return
                a = call.from_user.id
                name = call.data[6:]
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                if balance<regbuscost:
                    markup = types.InlineKeyboardMarkup()
                    await call.message.answer('<i>&#10060; –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–µ–Ω–µ–≥</i>', parse_mode='html', reply_markup=markup)
                    return
                cursor.execute('SELECT place FROM userdata WHERE user_id=?', (a,))
                station = cursor.fetchone()[0]
                cursor.execute('UPDATE userdata SET balance=balance-? WHERE user_id=?', (regbuscost,a,))
                tim = random.randint(lesstrain, moretrain)
                await main.send_photo(call.message.chat.id, 'https://telegra.ph/file/34226b77d11cbd7e19b7b.jpg', caption='üöå <i>–ü–æ—Å–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–ª–µ–¥—É—é—â–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞: <b>{0}</b>. –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∑–∞–π–º—ë—Ç –Ω–µ –±–æ–ª—å—à–µ –º–∏–Ω—É—Ç—ã. –£–¥–∞—á–Ω–æ–π –ø–æ–µ–∑–¥–∫–∏!</i>'.format(name), parse_mode = 'html')
                await main.delete_message(call.message.chat.id, call.message.message_id)
                await asyncio.sleep(tim)
                await tostation(user=a, station=name)
                await regbuscall(call)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('paybill '):
            try:
                a = call.from_user.id
                money = int(call.data.split(" ")[1])
                ownerid = int(call.data.split(" ")[2])
                if ownerid==a:
                    if call.message!=None:
                        await main.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = '<i>–°—á—ë—Ç –æ—Ç–º–µ–Ω—ë–Ω</i>', parse_mode = 'html')
                    else:
                        await main.edit_message_text(inline_message_id = call.inline_message_id, text = '<i>–°—á—ë—Ç –æ—Ç–º–µ–Ω—ë–Ω</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (ownerid,))
                balance2 = cursor.fetchone()[0]
                if balance<money:
                    await call.answer(text='‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', show_alert = True)
                    return
                cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                rasa = cursor.fetchone()[0]
                cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                nick = cursor.fetchone()[0]
                cursor.execute('UPDATE userdata SET balance = ? WHERE user_id=?', (balance-money, a,))
                conn.commit()
                cursor.execute('UPDATE userdata SET balance = ? WHERE user_id=?', (balance2+money, ownerid,))
                conn.commit()
                await call.answer(text='‚úÖ –í—ã –æ–ø–ª–∞—Ç–∏–ª–∏ —Å—á—ë—Ç', show_alert = True)
                try:
                    await main.send_message(ownerid, text = '<i><b><a href="tg://user?id={3}">{0}{1}</a></b> –æ–ø–ª–∞—Ç–∏–ª —Å—á—ë—Ç <b>${2}</b></i>'.format(rasa, nick, money, a), parse_mode = 'html')
                except:
                    if call.message!=None:
                        await call.message.reply('<i><b><a href="tg://user?id={3}">{0}{1}</a></b> –æ–ø–ª–∞—Ç–∏–ª —Å—á—ë—Ç <b>${2}</b></i>'.format(rasa, nick, money, a), parse_mode = 'html')
                    else:
                        await main.edit_message_text(inline_message_id = call.inline_message_id, text = '<i><b><a href="tg://user?id={3}">{0}{1}</a></b> –æ–ø–ª–∞—Ç–∏–ª —Å—á—ë—Ç <b>${2}</b></i>'.format(rasa, nick, money, a), parse_mode = 'html')
                if money>0:
                    await main.send_message(fid, text = '<i><b><a href="tg://user?id={3}">{0}{1}</a></b> –æ–ø–ª–∞—Ç–∏–ª —Å—á—ë—Ç <b>${2}</b>\n#user_getcheck</i>'.format(rasa, nick, money, a), parse_mode = 'html')
            except Exception as e:
                try:
                    await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                    await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
                except:
                    await main.edit_message_text(inline_message_id = call.inline_message_id, text = '<i><b>–û—à–∏–±–∫–∞: </b>{0}</i>'.format(e), parse_mode='html')
        if call.data == 'cancel_process':
            try:
                a = call.from_user.id
                await main.delete_message(call.message.chat.id, call.message.message_id)
                cursor.execute('UPDATE userdata SET process = ? WHERE user_id=?', ('nothing', a,))
                conn.commit()
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('slot '):
            try:
                a = call.from_user.id
                arr = call.data.split(' ')
                oth = arr[3]
                item = arr[1]
                cost = int(arr[2])
                if a==int(oth):
                    if call.message != None:
                        await main.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = '<i>–°–ª–æ—Ç –æ—Ç–º–µ–Ω—ë–Ω –ø—Ä–æ–¥–∞–≤—Ü–æ–º</i>', parse_mode = 'html')
                    else:
                        await main.edit_message_text(inline_message_id=call.inline_message_id, text = '<i>–°–ª–æ—Ç –æ—Ç–º–µ–Ω—ë–Ω –ø—Ä–æ–¥–∞–≤—Ü–æ–º</i>', parse_mode = 'html')
                    cursor.execute('UPDATE userdata SET {0} = {0}+1 WHERE user_id=?'.format(item), (a,))
                    conn.commit()
                    return
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (a,))
                balance = cursor.fetchone()[0]
                cursor.execute('SELECT balance FROM userdata WHERE user_id=?', (oth,))
                obalance = cursor.fetchone()[0]
                if balance<cost:
                    await call.answer('‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', show_alert = True)
                    return
                cursor.execute('SELECT {0} FROM userdata WHERE user_id=?'.format(item), (a,))
                ims = cursor.fetchone()[0]
                cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                rasa = cursor.fetchone()[0]
                cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                nick = cursor.fetchone()[0]
                cursor.execute('UPDATE userdata SET {0} = ? WHERE user_id=?'.format(item), (ims+1, a,))
                cursor.execute('UPDATE userdata SET balance = ? WHERE user_id=?', (balance-cost, a,))
                cursor.execute('UPDATE userdata SET balance = ? WHERE user_id=?', (obalance+cost, oth,))
                conn.commit()
                ind = ITEMS[1].index(item)
                itm = ITEMS[0][ind]+' '+ITEMS[2][ind]
                try:
                    await main.send_message(oth, '<i><b><a href="tg://user?id={3}">{0}{1}</a></b> –∫—É–ø–∏–ª —É –≤–∞—Å <b>{2}</b> –∑–∞ <b>${4}</b></i>'.format(rasa, nick, itm, a, cost), parse_mode = 'html')
                except:
                    pass
                if cost>0:
                    await main.send_message(fid, '<i><b><a href="tg://user?id={3}">{0}{1}</a></b> –∫—É–ø–∏–ª <b>{2}</b> –∑–∞ <b>${4}</b>\n#user_getitem</i>'.format(rasa, nick, itm, a, cost), parse_mode = 'html')
                try:
                    await main.edit_message_text(chat_id = call.message.chat.id, message_id = call.message.message_id, text = '<i><b><a href="tg://user?id={3}">{0}{1}</a></b> –∫—É–ø–∏–ª <b>{2}</b> –∑–∞ <b>${4}</b></i>'.format(rasa, nick, itm, a, cost), parse_mode = 'html')
                except:
                    await main.edit_message_text(inline_message_id = call.inline_message_id, text = '<i><b><a href="tg://user?id={3}">{0}{1}</a></b> –∫—É–ø–∏–ª <b>{2}</b> –∑–∞ <b>${4}</b></i>'.format(rasa, nick, itm, a, cost), parse_mode = 'html')
                await call.answer("–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É", show_alert=True)
            except Exception as e:
                if call.message!=None:
                    await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                    await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
                else:
                    await main.edit_message_text(inline_message_id = call.inline_message_id, text = '<i><b>–û—à–∏–±–∫–∞: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'create_clan':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                chn = call.message.chat.title
                if count == 0:
                    cursor.execute('INSERT INTO clandata (name, group_id, owner_id, username, hqplace) VALUES (?, ?, ?, ?, ?)', (chn, chid, a, '', ''))
                    conn.commit()
                    await startdef(call.message)
                    cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                    rasa = cursor.fetchone()[0]
                    cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                    nick = cursor.fetchone()[0]
                    await main.send_message(fid, '<i><b><a href="tg://user?id={0}">{1}{2}</a></b> —Å–æ–∑–¥–∞–ª –∫–ª–∞–Ω <b>{3} ({4})</b>\n#clan_create</i>'.format(a, rasa, nick, chn, chid), parse_mode='html')
                else:
                    await main.send_message(chid, '<i>&#10060; –ö–ª–∞–Ω —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</i>', parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'join_clan':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT rasa FROM userdata WHERE user_id = ?', (a,))
                rasa = cursor.fetchone()[0]
                cursor.execute('SELECT nick FROM userdata WHERE user_id = ?', (a,))
                nick = cursor.fetchone()[0]
                chn = call.message.chat.title
                if count == 0:
                    return
                cursor.execute('SELECT type FROM clandata WHERE group_id=?', (chid,))
                cursor.execute('SELECT clan FROM userdata WHERE user_id=?', (a,))
                if cursor.fetchone()[0]!=chid:
                    cursor.execute('UPDATE userdata SET clan=? WHERE user_id=?', (chid, a,))
                    cursor.execute('UPDATE userdata SET clanname=? WHERE user_id=?', (chn, a,))
                    conn.commit()
                    await main.send_message(chid, '<i><b><a href="tg://user?id={2}">{0}{1}</a></b> –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∫–ª–∞–Ω—É</i>'.format(rasa, nick, a), parse_mode = 'html')
                else:
                    cursor.execute('UPDATE userdata SET clan=? WHERE user_id=?', (0, a,))
                    cursor.execute('UPDATE userdata SET clanname=? WHERE user_id=?', ('', a,))
                    conn.commit()
                    await main.send_message(chid, '<i><b><a href="tg://user?id={2}">{0}{1}</a></b> –≤—ã—à–µ–ª –∏–∑ –∫–ª–∞–Ω–∞</i>'.format(rasa, nick, a), parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'call_clan':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM userdata WHERE clan = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT name FROM clandata WHERE group_id = ?', (chid,))
                chn = cursor.fetchone()[0]
                cursor.execute('SELECT username FROM clandata WHERE group_id = ?', (chid,))
                chu = cursor.fetchone()[0]
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–°–æ–∑–≤–∞—Ç—å –∫–ª–∞–Ω –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                if count == 0:
                    await call.answer(text='–í –∫–ª–∞–Ω–µ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç :(')
                    return
                cursor.execute('SELECT * FROM userdata WHERE clan = ?', (chid,))
                err = 0
                nerr = 0
                for row in cursor:
                    try:
                        await main.send_message(row[1], '<i>–ö–ª–∞–Ω <b><a href="{1}">{0}</a></b> —Å–æ–∑—ã–≤–∞–µ—Ç –≤–∞—Å</i>'.format(chn, chu), parse_mode = 'html')
                        nerr+=1
                    except:
                        err+=1
                await call.message.answer('<i><b>&#128227; –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</b>\n&#9989; –£–¥–∞—á–Ω–æ: {0}\n&#10060; –û—à–∏–±–∫–∏: {1}</i>'.format(nerr, err), parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'clan_members':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                chu = call.message.chat.username
                cursor.execute('SELECT count(*) FROM userdata WHERE clan = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT owner_id FROM clandata WHERE group_id = ?', (chid,))
                ownerid = cursor.fetchone()[0]
                cursor.execute('SELECT * FROM userdata WHERE user_id = ?', (ownerid,))
                owner = cursor.fetchone()
                try:
                    parts = '\n&#128081; <b>–°–æ–∑–¥–∞—Ç–µ–ª—å –∫–ª–∞–Ω–∞: \n<a href="tg://user?id={2}">{0}{1}</a></b>\n\n&#128101; –£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–ª–∞–Ω–∞:'.format(owner[9], owner[7], owner[1])
                except:
                    parts = '&#128101; –£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–ª–∞–Ω–∞:'
                cursor.execute('SELECT * FROM userdata WHERE clan = ?', (chid,))
                for row in cursor:
                    parts = parts+'\n<a href="tg://user?id={0}">{1}{2}</a>'.format(row[1], row[9], row[7])
                await main.send_message(chid, '<i><b>{0}</b></i>'.format(parts), parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'clan_settings':
            await clancall(call)
        if call.data == 'clan_settings2':
            await main.delete_message(call.message.chat.id, call.message.message_id)
            await clancall(call)
        if call.data == 'clan_profile':
            await main.delete_message(call.message.chat.id, call.message.message_id)
            await clanprof(call)
        if call.data == 'cancel_action2':
            try:
                await startdef(call.message)
            except:
                pass
            await main.delete_message(call.message.chat.id, call.message.message_id)
        if call.data == 'clan_type':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT lvl FROM userdata WHERE user_id=?', (a,))
                lvl = cursor.fetchone()[0]
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–£–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∞–Ω–æ–º –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                typ = ''
                if call.message.chat.username is None:
                    thischat = await main.get_chat(chid)
                    chu = thischat.invite_link
                else:
                    chu = 't.me/'+call.message.chat.username
                cursor.execute('SELECT type FROM clandata WHERE group_id=?', (chid,))
                if cursor.fetchone()[0] == 'private':
                    if lvl<lvlclan:
                        await call.answer('‚ùå –î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ —Å —É—Ä–æ–≤–Ω—è {0}'.format(lvlclan), show_alert = True)
                        return
                    cursor.execute('UPDATE clandata SET type=? WHERE group_id=?', ('public', chid,))
                    cursor.execute('UPDATE clandata SET username=? WHERE group_id=?', (chu, chid,))
                    conn.commit()
                else:
                    cursor.execute('UPDATE clandata SET type=? WHERE group_id=?', ('private', chid,))
                    cursor.execute('UPDATE clandata SET username=? WHERE group_id=?', (chu, chid,))
                    conn.commit()
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
            await main.delete_message(call.message.chat.id, call.message.message_id)
            await clancall(call)
        if call.data == 'clan_notifications':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–£–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª–∞–Ω–æ–º –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT notif FROM clandata WHERE group_id=?', (chid,))
                if cursor.fetchone()[0] == 1:
                    cursor.execute('UPDATE clandata SET notif=0 WHERE group_id=?', (chid,))
                    conn.commit()
                else:
                    cursor.execute('UPDATE clandata SET notif=1 WHERE group_id=?', (chid,))
                    conn.commit()
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
            await main.delete_message(call.message.chat.id, call.message.message_id)
            await clancall(call)
        if call.data == 'set_user_nick':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('setnick', a,))
                conn.commit()
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_process'))
                await main.send_message(chid, '<i>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –Ω–∏–∫</i>', parse_mode='html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'set_user_photo':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('setphoto', a,))
                conn.commit()
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_process'))
                markup.add(types.InlineKeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å', callback_data='clear_user_photo'))
                await main.send_message(chid, '<i>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ –∏–ª–∏ —Å–∞–º–æ —Ñ–æ—Ç–æ</i>', parse_mode='html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'clear_user_photo':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                conn.commit()
                cursor.execute('UPDATE userdata SET photo="" WHERE user_id=?', (a,))
                conn.commit()
                await main.send_message(chid, '<i>–§–æ—Ç–æ —É–¥–∞–ª–µ–Ω–æ</i>', parse_mode='html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'hq_number':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('seekhouse', a,))
                conn.commit()
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_process'))
                await main.send_message(chid, '<i>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–æ–º–∞</i>', parse_mode='html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'set_user_key':
            try:
                if call.message.chat.type!='private':
                    await main.send_message(chid, '<i>–í —Ü–µ–ª—è—Ö –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º. –û—Ç–∫—Ä–æ–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –õ–° —Å –±–æ—Ç–æ–º –∏ –≤–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞</i>', parse_mode='html')
                    cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                    conn.commit()
                    return
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('setkey', a,))
                conn.commit()
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_process'))
                await main.send_message(chid, '<i>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞</i>', parse_mode='html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'log_in':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('login', a,))
                conn.commit()
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_process'))
                await main.send_message(chid, '<i>–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞</i>', parse_mode='html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'proceed_trolley':
            try:
                a = call.from_user.id
                cursor.execute('SELECT trolleytoken FROM userdata WHERE user_id=?', (a,))
                token = cursor.fetchone()[0]
                if token<1:
                    markup = types.InlineKeyboardMarkup()
                    markup.add(types.InlineKeyboardButton(text='üé´ –ü–æ–∫—É–ø–∫–∞ —Ç–∞–ª–æ–Ω–æ–≤', callback_data='trolley_tickets'))
                    await call.message.answer('<i>&#10060; –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–æ–µ–∑–¥–Ω—ã—Ö —Ç–∞–ª–æ–Ω–æ–≤</i>'.format(token), parse_mode='html', reply_markup=markup)
                    return
                cursor.execute('UPDATE userdata SET trolleytoken=trolleytoken-1 WHERE user_id=?', (a,))
                conn.commit()
                await buscall(call)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'clan_link':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–ò–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('clanuser', a,))
                conn.commit()
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_process'))
                await main.send_message(chid, '<i>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –∫–ª–∞–Ω–∞. –°—Å—ã–ª–∫–∞ –Ω–∞ —á–∞—Ç –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å <code>https://t.me/</code> –∏–ª–∏ <code>t.me/</code>.\n–†–∞–∑—Ä–µ—à–µ–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram (–ø—Ä–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è), –Ω–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –∫–∞–Ω–∞–ª–∞ –∏–ª–∏ –±–æ—Ç, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å –∏–≥—Ä–æ–π. –£–∫–∞–∑—ã–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–µ –∏–ª–∏ –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∏–≥—Ä–æ–π –±–æ—Ç—ã, –≥—Ä—É–ø–ø—ã –∏ –∫–∞–Ω–∞–ª—ã –∑–∞–ø—Ä–µ—â–µ–Ω–æ</i>', parse_mode = 'html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'delete_clan':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                cursor.execute('SELECT owner_id FROM clandata WHERE group_id=?', (chid,))
                if a != cursor.fetchone()[0]:
                    await main.send_message(chid, '&#10060; <i>–†–∞—Å–ø—É—Å—Ç–∏—Ç—å –∫–ª–∞–Ω –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å</i>', parse_mode = 'html')
                    return
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text = '‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ä–æ—Å–ø—É—Å–∫', callback_data = 'delete_clan_confirm'))
                markup.add(types.InlineKeyboardButton(text = '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', callback_data = 'cancel_action'))
                await call.message.answer('<i>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Ä–∞—Å–ø—É—Å—Ç–∏—Ç—å –∫–ª–∞–Ω? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–∏—Ç—å –Ω–µ–ª—å–∑—è</i>', parse_mode = 'html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'delete_clan_confirm':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                cursor.execute('SELECT owner_id FROM clandata WHERE group_id=?', (chid,))
                if a != cursor.fetchone()[0]:
                    await main.send_message(chid, '&#10060; <i>–†–∞—Å–ø—É—Å—Ç–∏—Ç—å –∫–ª–∞–Ω –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—å</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                rasa = cursor.fetchone()[0]
                cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                nick = cursor.fetchone()[0]
                cursor.execute('SELECT name FROM clandata WHERE group_id=?', (chid,))
                chn = cursor.fetchone()[0]
                await main.send_message(fid, '<i><b><a href="tg://user?id={0}">{1}{2}</a></b> —Ä–∞—Å–ø—É—Å—Ç–∏–ª –∫–ª–∞–Ω <b>{3} ({4})</b>\n#clan_delete</i>'.format(a, rasa, nick, chn, chid), parse_mode='html')
                cursor.execute('DELETE FROM clandata WHERE group_id = ?', (chid,))
                conn.commit()
                await call.message.answer('<i>–ö–ª–∞–Ω —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø—É—â–µ–Ω</i>', parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'headquarters':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–°–æ–∑–¥–∞—Ç—å —à—Ç–∞–±-–∫–≤–∞—Ä—Ç–∏—Ä—É –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT place FROM userdata WHERE user_id = ?', (a,))
                place = cursor.fetchone()[0]
                cursor.execute('SELECT hqplace FROM clandata WHERE group_id=?', (chid,))
                hqplace = cursor.fetchone()[0]
                if hqplace!=None and hqplace!='':
                    await main.send_message(chid, '<i>–£ –∫–ª–∞–Ω–∞ —É–∂–µ –µ—Å—Ç—å —à—Ç–∞–±-–∫–≤–∞—Ä—Ç–∏—Ä–∞</i>', parse_mode='html')
                    return
                cursor.execute('UPDATE clandata SET hqplace=? WHERE group_id=?', (place, chid,))
                conn.commit()
                cursor.execute('SELECT hqplace FROM clandata WHERE group_id=?', (chid,))
                hqplace = cursor.fetchone()[0]
                try:
                    cursor.execute('SELECT MAX(address) FROM clandata WHERE hqplace=?', (hqplace,))
                    address = cursor.fetchone()[0]+1
                except:
                    address = 1
                cursor.execute('UPDATE clandata SET address=? WHERE group_id=?', (address, chid,))
                conn.commit()
                cursor.execute('SELECT address FROM clandata WHERE group_id=?', (chid,))
                address = cursor.fetchone()[0]
                await main.send_message(chid, '<i>&#127970; –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –∞–¥—Ä–µ—Å —à—Ç–∞–±-–∫–≤–∞—Ä—Ç–∏—Ä—ã –∫–ª–∞–Ω–∞: <b>{0}, {1}</b></i>'.format(hqplace, address), parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'clan_buildings':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                cursor.execute('SELECT lootbox FROM clandata WHERE group_id = ?', (chid,))
                lootbox = cursor.fetchone()[0]
                cursor.execute('SELECT foodshop FROM clandata WHERE group_id = ?', (chid,))
                foodshop = cursor.fetchone()[0]
                cursor.execute('SELECT apteka FROM clandata WHERE group_id = ?', (chid,))
                apteka = cursor.fetchone()[0]
                cursor.execute('SELECT farm FROM clandata WHERE group_id = ?', (chid,))
                farm = cursor.fetchone()[0]
                markup = types.InlineKeyboardMarkup()
                if lootbox>=1:
                    markup.add(types.InlineKeyboardButton(text='üè§ –ü–æ—á—Ç–æ–≤–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ', callback_data='mailoffice'))
                if foodshop>=1:
                    markup.add(types.InlineKeyboardButton(text='üçµ –°—Ç–æ–ª–æ–≤–∞—è', callback_data='canteen'))
                if apteka>=1:
                    markup.add(types.InlineKeyboardButton(text='üíä –ê–ø—Ç–µ–∫–∞', callback_data='chemists'))
                if farm>=1:
                    markup.add(types.InlineKeyboardButton(text='üêÑ –§–µ—Ä–º–∞', callback_data='clan_farm'))
                markup.add(types.InlineKeyboardButton(text='üèó –°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–µ –∞–≥–µ–Ω—Å—Ç–≤–æ', callback_data='building_shop'))
                await main.send_message(chid, '<i>&#127959; <b>–ü–æ—Å—Ç—Ä–æ–π–∫–∏ </b>- –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—Ç—å –∫–ª–∞–Ω</i>', parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'building_shop':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–£–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='üè§ –ü–æ—á—Ç–æ–≤–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ', callback_data='mailoffice'))
                markup.add(types.InlineKeyboardButton(text='üçµ –°—Ç–æ–ª–æ–≤–∞—è', callback_data='canteen'))
                markup.add(types.InlineKeyboardButton(text='üíä –ê–ø—Ç–µ–∫–∞', callback_data='chemists'))
                markup.add(types.InlineKeyboardButton(text='üêÑ –§–µ—Ä–º–∞', callback_data='clan_farm'))
                await main.send_message(chid, '<i>&#127959; <b>–ü–æ—Å—Ç—Ä–æ–π–∫–∏ </b>- –æ–¥–∏–Ω –∏–∑ —Å–∞–º—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—Ç—å –∫–ª–∞–Ω</i>', parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'clan_plugins':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–£–ø—Ä–∞–≤–ª—è—Ç—å –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è–º–∏ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='üìõ –§–∏–ª—å—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏–π', callback_data='clanfilter'))
                markup.add(types.InlineKeyboardButton(text='üé∞ –ú–∏–Ω–∏-–∫–∞–∑–∏–Ω–æ', callback_data='clangameclub'))
                await main.send_message(chid, '<i>‚ûï <b>–î–æ–ø–æ–ª–Ω–µ–Ω–∏—è</b> - —Å–ø–æ—Å–æ–±—ã —É–ª—É—á—à–∏—Ç—å –∫–ª–∞–Ω</i>', parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'clanfilter':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–£–ø—Ä–∞–≤–ª—è—Ç—å –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è–º–∏ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT stickers FROM clandata WHERE group_id = ?', (chid,))
                stickers = cursor.fetchone()[0]
                cursor.execute('SELECT dice FROM clandata WHERE group_id = ?', (chid,))
                dice = cursor.fetchone()[0]
                cursor.execute('SELECT mat FROM clandata WHERE group_id = ?', (chid,))
                mat = cursor.fetchone()[0]
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='üÄÑ –°—Ç–∏–∫–µ—Ä—ã: {0}'.format('–ó–∞–ø—Ä–µ—â–µ–Ω—ã' if stickers==0 else '–†–∞–∑—Ä–µ—à–µ–Ω—ã'), callback_data='clanfset_stickers'))
                markup.add(types.InlineKeyboardButton(text='üé≤ –ò–≥—Ä–æ–≤—ã–µ —ç–º–æ–¥–∑–∏: {0}'.format('–ó–∞–ø—Ä–µ—â–µ–Ω—ã' if dice==0 else '–†–∞–∑—Ä–µ—à–µ–Ω—ã'), callback_data='clanfset_dice'))
                markup.add(types.InlineKeyboardButton(text='ü§¨ –ë—Ä–∞–Ω–Ω—ã–µ —Å–ª–æ–≤–∞: {0}'.format('–ó–∞–ø—Ä–µ—â–µ–Ω—ã' if mat==0 else '–†–∞–∑—Ä–µ—à–µ–Ω—ã'), callback_data='clanfset_mat'))
                await main.send_message(chid, '<i>üìõ <b>–§–∏–ª—å—Ç—Ä —Å–æ–æ–±—â–µ–Ω–∏–π</b> - –æ—Ç–ª–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± –Ω–∞–≤–µ—Å—Ç–∏ –ø–æ—Ä—è–¥–æ–∫ –≤ –∫–ª–∞–Ω–µ. –ë–æ—Ç –±—É–¥–µ—Ç —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º —Ñ–∏–ª—å—Ç—Ä–∞</i>', parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('clanfset_'):
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                set = call.data[9:]
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–£–ø—Ä–∞–≤–ª—è—Ç—å –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è–º–∏ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT {0} FROM clandata WHERE group_id = ?'.format(set), (chid,))
                stickers = cursor.fetchone()[0]
                s = 1 if stickers==0 else 0
                cursor.execute('UPDATE clandata SET {0}=? WHERE group_id = ?'.format(set), (s,chid,))
                conn.commit()
                await clancall(call)
                await main.delete_message(call.message.chat.id, call.message.message_id)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'clangameclub':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–£–ø—Ä–∞–≤–ª—è—Ç—å –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è–º–∏ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT gameclub FROM clandata WHERE group_id = ?', (chid,))
                gameclub = cursor.fetchone()[0]
                markup = types.InlineKeyboardMarkup()
                if gameclub==1:
                    txt = 'üì≥ –í–∫–ª—é—á–∏—Ç—å - $700'
                else:
                    txt = 'üì¥ –í—ã–∫–ª—é—á–∏—Ç—å (–≤–æ–∑–≤—Ä–∞—Ç $700)'
                markup.add(types.InlineKeyboardButton(text=txt, callback_data='buy_gameclub'))
                await main.send_message(chid, '<i>üé∞ <b>–ú–∏–Ω–∏-–∫–∞–∑–∏–Ω–æ</b> –¥–∞—ë—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä–æ–≤—ã–µ –∞–≤—Ç–æ–º–∞—Ç—ã. –£—Å–ª–æ–≤–∏—è:\n1. 50% –¥–µ–Ω–µ–≥ –∑–∞ –∫–∞–∂–¥—É—é –∫—Ä—É—Ç–∫—É –∏–¥—ë—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å –∫–ª–∞–Ω–∞, 50% –æ—Ç–¥–∞—ë—Ç—Å—è –ò–≥—Ä–æ–≤–æ–º—É –∫–ª—É–±—É.\n2. –î–µ–Ω—å–≥–∏ –∑–∞ –≤—ã–∏–≥—Ä—ã—à–∏ –≤—ã—á–∏—Ç–∞—é—Ç—Å—è –∏–∑ –±–∞–ª–∞–Ω—Å–∞ –∫–ª–∞–Ω–∞. –ü—Ä–∏ –Ω–µ—Ö–≤–∞—Ç–∫–µ –¥–µ–Ω–µ–≥ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –∫–ª–∞–Ω–∞ –∏–∑ –∫–∞–∑–Ω—ã –∑–∞–±–∏—Ä–∞–µ—Ç—Å—è —É–¥–≤–æ–µ–Ω–Ω–∞—è —Å—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞, –≤ –ò–≥—Ä–æ–≤–æ–π –∫–ª—É–± –æ—Ç–¥–∞—ë—Ç—Å—è —Å—É–º–º–∞ –≤—ã–∏–≥—Ä—ã—à–∞. –ü—Ä–∏ –Ω–µ—Ö–≤–∞—Ç–∫–µ –¥–µ–Ω–µ–≥ –≤ –∫–∞–∑–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –≤—ã–∏–≥—Ä—ã—à.\n3. –£—Å–ª—É–≥—É "–ú–∏–Ω–∏-–∫–∞–∑–∏–Ω–æ" –º–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å, –ø—Ä–∏ —ç—Ç–æ–º –æ—Ç–º–µ–Ω–∏–≤—à–µ–º—É –∞–¥–º–∏–Ω—É –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –æ–ø–ª–∞—á–µ–Ω–Ω–∞—è –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ —Å—É–º–º–∞.</i>', parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'clanlocation':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–£–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT islocation FROM clandata WHERE group_id = ?', (chid,))
                loc = cursor.fetchone()[0]
                markup = types.InlineKeyboardMarkup()
                if loc==0:
                    txt = 'üì≥ –í–∫–ª—é—á–∏—Ç—å - $1200'
                else:
                    txt = 'üì¥ –í—ã–∫–ª—é—á–∏—Ç—å (–≤–æ–∑–≤—Ä–∞—Ç $1200)'
                markup.add(types.InlineKeyboardButton(text=txt, callback_data='buy_location'))
                await main.send_message(chid, '<i>–ü—Ä–∏ –≤–∫–ª—é—á—ë–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ üèõ <b>–õ–æ–∫–∞—Ü–∏–∏</b> –∫–ª–∞–Ω –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –≤ —Å–ø–∏—Å–∫–µ –ª–æ–∫–∞—Ü–∏–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π —Ä–∞–∑–º–µ—â–µ–Ω–∞ —à—Ç–∞–±-–∫–≤–∞—Ä—Ç–∏—Ä–∞. –ö–ª–∞–Ω –ø—Ä–∏ —ç—Ç–æ–º –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—É–±–ª–∏—á–Ω—ã–º –∏ –∏–º–µ—Ç—å —à—Ç–∞–±-–∫–≤–∞—Ä—Ç–∏—Ä—É.\n–ü–æ—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–∫–∞—Ü–∏–∏ —Å—Ç–æ–∏—Ç $1200, –ø—Ä–∏ –µ—ë –æ—Ç–º–µ–Ω–µ –æ—Ç–º–µ–Ω–∏–≤—à–µ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —ç—Ç–∞ —Å—É–º–º–∞</i>', parse_mode='html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'buy_location':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                balance = cursor.fetchone()[0]
                if count == 0:
                    return
                cursor.execute('SELECT islocation FROM clandata WHERE group_id = ?', (chid,))
                loc = cursor.fetchone()[0]
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–ü–æ–∫—É–ø–∞—Ç—å –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                if loc == 0:
                    cursor.execute('SELECT type FROM clandata WHERE group_id = ?', (chid,))
                    type = cursor.fetchone()[0]
                    cursor.execute('SELECT hqplace FROM clandata WHERE group_id = ?', (chid,))
                    hqplace = cursor.fetchone()[0]
                    if hqplace=='' or type=='private':
                        await call.answer('‚ùå –¢–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–µ –∫–ª–∞–Ω—ã —Å —à—Ç–∞–±-–∫–≤–∞—Ä—Ç–∏—Ä–∞–º–∏ –º–æ–≥—É—Ç –∏–º–µ—Ç—å —Å–≤–æ—é –ª–æ–∫–∞—Ü–∏—é', show_alert=True)
                        return
                    if balance>=1200:
                        cursor.execute('UPDATE clandata SET islocation=1 WHERE group_id=?', (chid,))
                        conn.commit()
                        cursor.execute('UPDATE userdata SET balance=? WHERE user_id=?', (balance-1200, a,))
                        conn.commit()
                        await clancall(call)
                    else:
                        await call.answer('‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', show_alert = True)
                        return
                else:
                    if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                        await main.send_message(chid, '&#10060; <i>–ü–æ–∫—É–ø–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                        return
                    cursor.execute('UPDATE clandata SET islocation=0 WHERE group_id=?', (chid,))
                    conn.commit()
                    cursor.execute('UPDATE userdata SET balance=? WHERE user_id=?', (balance+1200, a,))
                    conn.commit()
                    await call.answer('–£—Å–ø–µ—Ö!', show_alert = True)
                    await clancall(call)
                await main.delete_message(call.message.chat.id, call.message.message_id)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'buy_gameclub':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                balance = cursor.fetchone()[0]
                if count == 0:
                    return
                cursor.execute('SELECT gameclub FROM clandata WHERE group_id = ?', (chid,))
                gameclub = cursor.fetchone()[0]
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–ü–æ–∫—É–ø–∞—Ç—å –∏ –ø—Ä–æ–¥–∞–≤–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                if gameclub == 1:
                    if balance>=700:
                        cursor.execute('UPDATE clandata SET gameclub=? WHERE group_id=?', (0, chid,))
                        conn.commit()
                        cursor.execute('UPDATE userdata SET balance=? WHERE user_id=?', (balance-700, a,))
                        conn.commit()
                        await clancall(call)
                    else:
                        await call.answer('‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', show_alert = True)
                        return
                else:
                    if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                        await main.send_message(chid, '&#10060; <i>–ü–æ–∫—É–ø–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                        return
                    cursor.execute('UPDATE clandata SET gameclub=? WHERE group_id=?', (1, chid,))
                    conn.commit()
                    cursor.execute('UPDATE userdata SET balance=? WHERE user_id=?', (balance+700, a,))
                    conn.commit()
                    await call.answer('–£—Å–ø–µ—Ö!', show_alert = True)
                    await clancall(call)
                await main.delete_message(call.message.chat.id, call.message.message_id)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'buy_mailoffice':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT lootbox FROM clandata WHERE group_id = ?', (chid,))
                lootbox = cursor.fetchone()[0]
                cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                balance = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–ü–æ–∫—É–ø–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                if balance>=700:
                    cursor.execute('UPDATE clandata SET lootbox=? WHERE group_id=?', (lootbox+1, chid))
                    conn.commit()
                    cursor.execute('UPDATE userdata SET balance=? WHERE user_id=?', (balance-700*lootbox, a))
                    conn.commit()
                    await clancall(call)
                else:
                    await call.answer('‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', show_alert = True)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'act_mailoffice':
            try:
                a = call.from_user.id
                now = datetime.now()
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT lootbox FROM clandata WHERE group_id = ?', (chid,))
                lootbox = cursor.fetchone()[0]
                cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                balance = cursor.fetchone()[0]
                cursor.execute('SELECT lastbox FROM clandata WHERE group_id = ?', (chid,))
                box = cursor.fetchone()[0]
                cursor.execute('SELECT name FROM clandata WHERE group_id = ?', (chid,))
                chn = cursor.fetchone()[0]
                cursor.execute('SELECT username FROM clandata WHERE group_id = ?', (chid,))
                chu = cursor.fetchone()[0]
                diff = (now - datetime.fromtimestamp(0)).total_seconds() - box
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–†–∞–∑–¥–∞–≤–∞—Ç—å –ª—É—Ç–±–æ–∫—Å—ã –¥–ª—è –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                if lootbox==0:
                    await main.send_message(chid, '<i>&#10060; –í –∫–ª–∞–Ω–µ –Ω–µ—Ç –ø–æ—Å—Ç—Ä–æ–π–∫–∏ <b>"–ü–æ—á—Ç–æ–≤–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ"</b></i>', parse_mode='html')
                    return
                if diff>=604800:
                    cursor.execute('SELECT * FROM userdata WHERE clan=?', (chid,))
                    err = 0
                    nerr = 0
                    for row in cursor:
                        try:
                            await main.send_message(row[1], '<i>–ö–ª–∞–Ω <b><a href="{1}">{0}</a></b> –¥–∞—Ä–∏—Ç –≤–∞–º {2} &#128230;<b>–õ—É—Ç–±–æ–∫—Å</b></i>'.format(chn, chu, lootbox), parse_mode = 'html')
                            nerr+=1
                        except:
                            err+=1
                    conn.commit()
                    await call.message.answer('<i><b>üì¶ –†–∞—Å—Å—ã–ª–∫–∞ –ª—É—Ç–±–æ–∫—Å–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</b>\n&#9989; –£–¥–∞—á–Ω–æ: {0}\n&#10060; –û—à–∏–±–∫–∏: {1}</i>'.format(nerr, err), parse_mode = 'html')
                    cursor.execute('UPDATE userdata SET lootbox=lootbox+? WHERE clan=?', (lootbox, chid,))
                    cursor.execute('UPDATE clandata SET lastbox = ? WHERE group_id = ?', ((now - datetime.fromtimestamp(0)).total_seconds(), chid,))
                    conn.commit()
                else:
                    d = 7-ceil(diff/86400)
                    h = 24-ceil(diff%86400/3600)
                    m = 60-ceil(diff%86400%3600/60)
                    s = 60-ceil(diff%86400%3600%60)
                    await main.send_message(chid, f'<i>–°–ª–µ–¥—É—é—â–∏–π –ª—É—Ç–±–æ–∫—Å –æ–∂–∏–¥–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ {d} –¥–Ω–µ–π {h} —á–∞—Å–æ–≤ {m} –º–∏–Ω—É—Ç {s} —Å–µ–∫—É–Ω–¥</i>', parse_mode='html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'mailoffice':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT lootbox FROM clandata WHERE group_id = ?', (chid,))
                lootbox = cursor.fetchone()[0]
                if count == 0:
                    return
                markup = types.InlineKeyboardMarkup()
                lvl = ''
                if lootbox >=1:
                    markup.add(types.InlineKeyboardButton(text='üì¶ –†–∞–∑–¥–∞—Ç—å –ª—É—Ç–±–æ–∫—Å—ã', callback_data='act_mailoffice'))
                    markup.add(types.InlineKeyboardButton(text='üè§ –ü—Ä–æ–∫–∞—á–∫–∞ - ${0}'.format(700*lootbox), callback_data='buy_mailoffice'))
                    markup.add(types.InlineKeyboardButton(text='üí∏ –ü—Ä–æ–¥–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫—É (–≤–æ–∑–≤—Ä–∞—Ç $700)', callback_data='sell_mailoffice'))
                    lvl = '–£—Ä–æ–≤–µ–Ω—å –≤–∞—à–µ–≥–æ –ø–æ—á—Ç–æ–≤–æ–≥–æ –æ—Ç–¥–µ–ª–µ–Ω–∏—è: <b>{0}</b>'.format(lootbox)
                else:
                    markup.add(types.InlineKeyboardButton(text='üè§ –ö—É–ø–∏—Ç—å - $700', callback_data='buy_mailoffice'))
                    lvl = '–£ –≤–∞—Å –Ω–µ—Ç –ø–æ—á—Ç–æ–≤–æ–≥–æ –æ—Ç–¥–µ–ª–µ–Ω–∏—è'
                await main.send_message(chid, '<i>&#127972; <b>–ü–æ—á—Ç–æ–≤–æ–µ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ</b> - –ø–æ–ª–µ–∑–Ω–∞—è –ø–æ—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ä–∞–∑–¥–∞—á–∏ –ª—É—Ç–±–æ–∫—Å–æ–≤ —Å–æ–∫–ª–∞–Ω–æ–≤—Ü–∞–º. {0}</i>'.format(lvl), parse_mode = 'html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'clan_farm':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT farm FROM clandata WHERE group_id = ?', (chid,))
                farm = cursor.fetchone()[0]
                cursor.execute('SELECT cow FROM clandata WHERE group_id = ?', (chid,))
                cow = cursor.fetchone()[0]
                cursor.execute('SELECT cow FROM userdata WHERE user_id = ?', (a,))
                my_cow = cursor.fetchone()[0]
                if count == 0:
                    return
                markup = types.InlineKeyboardMarkup()
                if farm >=1:
                    markup.add(types.InlineKeyboardButton(text='üêÑ –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å –∫–æ—Ä–æ–≤—É', callback_data='donate_cow'))
                    markup.add(types.InlineKeyboardButton(text='ü•õ –ü–æ–¥–æ–∏—Ç—å –∫–æ—Ä–æ–≤—É', callback_data='milk_clan'))
                    markup.add(types.InlineKeyboardButton(text='üí∏ –ü—Ä–æ–¥–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫—É (–≤–æ–∑–≤—Ä–∞—Ç $500)', callback_data='sell_farm'))
                    lvl = '&#128004; –í –∫–ª–∞–Ω–µ <b>{0}</b> –∫–æ—Ä–æ–≤. –£ –≤–∞—Å <b>{1}</b> –∫–æ—Ä–æ–≤'.format(cow, my_cow)
                else:
                    markup.add(types.InlineKeyboardButton(text='üêÑ –ö—É–ø–∏—Ç—å - $500', callback_data='buy_farm'))
                    lvl = '–í –∫–ª–∞–Ω–µ –Ω–µ—Ç —Ñ–µ—Ä–º—ã'
                await main.send_message(chid, '<i>&#128004; <b>–§–µ—Ä–º–∞</b> - –æ—Ç–ª–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–∏—Ç—å –º–æ–ª–æ–∫–æ –≤ –∫–ª–∞–Ω–µ. –î–æ–∏—Ç—å –∫–æ—Ä–æ–≤ –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å.\n{0}</i>'.format(lvl), parse_mode = 'html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'sell_canteen':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT foodshop FROM clandata WHERE group_id = ?', (chid,))
                foodshop = cursor.fetchone()[0]
                if foodshop<1:
                    await main.send_message(chid, '<i>–í –∫–ª–∞–Ω–µ –Ω–µ—Ç —Å—Ç–æ–ª–æ–≤–æ–π</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                balance = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–ü—Ä–æ–¥–∞–≤–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('UPDATE clandata SET foodshop=? WHERE group_id=?', (0, chid))
                conn.commit()
                cursor.execute('UPDATE userdata SET balance=? WHERE user_id=?', (balance+500, a))
                conn.commit()
                await clancall(call)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'sell_farm':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT farm FROM clandata WHERE group_id = ?', (chid,))
                foodshop = cursor.fetchone()[0]
                if foodshop<1:
                    await main.send_message(chid, '<i>–í –∫–ª–∞–Ω–µ –Ω–µ—Ç —Ñ–µ—Ä–º—ã</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                balance = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–ü—Ä–æ–¥–∞–≤–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('UPDATE clandata SET farm=? WHERE group_id=?', (0, chid))
                conn.commit()
                cursor.execute('UPDATE userdata SET balance=? WHERE user_id=?', (balance+500, a))
                conn.commit()
                await clancall(call)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'sell_mailoffice':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT lootbox FROM clandata WHERE group_id = ?', (chid,))
                lootbox = cursor.fetchone()[0]
                if lootbox<1:
                    await main.send_message(chid, '<i>–í –∫–ª–∞–Ω–µ –Ω–µ—Ç –ø–æ—á—Ç–æ–≤–æ–≥–æ –æ—Ç–¥–µ–ª–µ–Ω–∏—è</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                balance = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–ü—Ä–æ–¥–∞–≤–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('UPDATE clandata SET lootbox=? WHERE group_id=?', (0, chid))
                conn.commit()
                cursor.execute('UPDATE userdata SET balance=? WHERE user_id=?', (balance+700, a))
                conn.commit()
                await clancall(call)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'sell_chemists':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT apteka FROM clandata WHERE group_id = ?', (chid,))
                apteka = cursor.fetchone()[0]
                if apteka<1:
                    await main.send_message(chid, '<i>–í –∫–ª–∞–Ω–µ –Ω–µ—Ç –∞–ø—Ç–µ–∫–∏</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                balance = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–ü—Ä–æ–¥–∞–≤–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('UPDATE clandata SET apteka=? WHERE group_id=?', (0, chid))
                conn.commit()
                cursor.execute('UPDATE userdata SET balance=? WHERE user_id=?', (balance+500, a))
                conn.commit()
                await clancall(call)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'buy_canteen':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT foodshop FROM clandata WHERE group_id = ?', (chid,))
                foodshop = cursor.fetchone()[0]
                if foodshop>=1:
                    await main.send_message(chid, '<i>–í –∫–ª–∞–Ω–µ —É–∂–µ –µ—Å—Ç—å —Å—Ç–æ–ª–æ–≤–∞—è</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                balance = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–ü–æ–∫—É–ø–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                if balance>=500:
                    cursor.execute('UPDATE clandata SET foodshop=? WHERE group_id=?', (foodshop+1, chid))
                    conn.commit()
                    cursor.execute('UPDATE userdata SET balance=? WHERE user_id=?', (balance-500, a))
                    conn.commit()
                    await clancall(call)
                else:
                    await call.answer('‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', show_alert = True)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'buy_farm':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT farm FROM clandata WHERE group_id = ?', (chid,))
                farm = cursor.fetchone()[0]
                if farm>=1:
                    await main.send_message(chid, '<i>–í –∫–ª–∞–Ω–µ —É–∂–µ –µ—Å—Ç—å —Ñ–µ—Ä–º–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                balance = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–ü–æ–∫—É–ø–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                if balance>=500:
                    cursor.execute('UPDATE clandata SET farm=? WHERE group_id=?', (farm+1, chid))
                    conn.commit()
                    cursor.execute('UPDATE userdata SET balance=? WHERE user_id=?', (balance-500, a))
                    conn.commit()
                    await clancall(call)
                else:
                    await call.answer('‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', show_alert = True)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'buy_chemists':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT apteka FROM clandata WHERE group_id = ?', (chid,))
                apt = cursor.fetchone()[0]
                if apt>=1:
                    await main.send_message(chid, '<i>–í –∫–ª–∞–Ω–µ —É–∂–µ –µ—Å—Ç—å –∞–ø—Ç–µ–∫–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT balance FROM userdata WHERE user_id = ?', (a,))
                balance = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–ü–æ–∫—É–ø–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                if balance>=500:
                    cursor.execute('UPDATE clandata SET apteka=? WHERE group_id=?', (apt+1, chid))
                    conn.commit()
                    cursor.execute('UPDATE userdata SET balance=? WHERE user_id=?', (balance-500, a))
                    conn.commit()
                    await clancall(call)
                else:
                    await call.answer('‚ùå –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤', show_alert = True)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'donate_cow':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                cursor.execute('SELECT cow FROM userdata WHERE user_id=?', (a,))
                cow = cursor.fetchone()[0]
                if cow<1:
                    await call.answer(text='‚ùå –£ –≤–∞—Å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –∫–æ—Ä–æ–≤—ã', show_alert = True)
                    return
                cursor.execute('UPDATE userdata SET cow=cow-1 WHERE user_id=?', (a,))
                conn.commit()
                cursor.execute('UPDATE clandata SET cow=cow+1 WHERE group_id=?', (chid,))
                conn.commit()
                cursor.execute('SELECT cow FROM userdata WHERE user_id=?', (a,))
                cow = cursor.fetchone()[0]
                cursor.execute('SELECT cow FROM clandata WHERE group_id=?', (chid,))
                clancow = cursor.fetchone()[0]
                await call.answer(text='–ü–µ—Ä–µ–¥–∞—á–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å {0} –∫–æ—Ä–æ–≤.\n–í –∫–ª–∞–Ω–µ —Ç–µ–ø–µ—Ä—å {1} –∫–æ—Ä–æ–≤'.format(cow, clancow), show_alert = True)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'milk_clan':
            try:
                a = call.from_user.id
                cursor.execute('SELECT nick FROM userdata WHERE user_id=?', (a,))
                nick = cursor.fetchone()[0]
                cursor.execute('SELECT rasa FROM userdata WHERE user_id=?', (a,))
                rasa = cursor.fetchone()[0]
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                cursor.execute('SELECT cow FROM clandata WHERE group_id=?', (chid,))
                cow = cursor.fetchone()[0]
                if cow<1:
                    await call.answer(text='‚ùå –í –∫–ª–∞–Ω–µ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–π –∫–æ—Ä–æ–≤—ã', show_alert = True)
                    return
                cursor.execute('SELECT lastfarm FROM userdata WHERE user_id=?', (a,))
                lastfarm = cursor.fetchone()[0]
                diff = current_time()-lastfarm
                if diff>=86400:
                    cursor.execute('UPDATE clandata SET cow=cow-1 WHERE group_id=?', (chid,))
                    conn.commit()
                    cursor.execute('UPDATE userdata SET milk=milk+1 WHERE user_id=?', (a,))
                    conn.commit()
                    cursor.execute('UPDATE userdata SET lastfarm=? WHERE user_id=?', (current_time(), a,))
                    conn.commit()
                    cursor.execute('SELECT milk FROM userdata WHERE user_id=?', (a,))
                    milk = cursor.fetchone()[0]
                    await call.answer(text='–î–æ–π–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ. –¢–µ–ø–µ—Ä—å —É –≤–∞—Å {0} —Å—Ç–∞–∫–∞–Ω–æ–≤ –º–æ–ª–æ–∫–∞'.format(milk), show_alert = True)
                    await call.message.answer('<i><b><a href="tg://user?id={0}">{1}{2}</a></b> –ø–æ–¥–æ–∏–ª –∫–æ—Ä–æ–≤—É</i>'.format(a, rasa, nick), parse_mode='html')
                else:
                    h = int(24-ceil(diff/3600))
                    m = int(60-ceil(diff%3600/60))
                    s = int(60-ceil(diff%3600%60))
                    await call.answer(text='–î–æ–∏—Ç—å –∫–æ—Ä–æ–≤—É –≤ –∫–ª–∞–Ω–µ –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ –¥–µ–Ω—å. –î–æ —Å–ª–µ–¥—É—é—â–µ–π –¥–æ–π–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å {0} —á–∞—Å–æ–≤ {1} –º–∏–Ω—É—Ç {2} —Å–µ–∫—É–Ω–¥'.format(h, m, s), show_alert = True)
                    return
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'canteen':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT foodshop FROM clandata WHERE group_id = ?', (chid,))
                foodshop = cursor.fetchone()[0]
                if count == 0:
                    return
                markup = types.InlineKeyboardMarkup()
                lvl = ''
                if foodshop >=1:
                    markup.add(buybutton('porridge', 'clan'))
                    markup.add(buybutton('kisel', 'clan'))
                    markup.add(types.InlineKeyboardButton(text='üí∏ –ü—Ä–æ–¥–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫—É (–≤–æ–∑–≤—Ä–∞—Ç $500)', callback_data='sell_canteen'))
                else:
                    markup.add(types.InlineKeyboardButton(text='üçµ –ö—É–ø–∏—Ç—å - $500', callback_data='buy_canteen'))
                    lvl = '. –í –∫–ª–∞–Ω–µ –Ω–µ—Ç —Å—Ç–æ–ª–æ–≤–æ–π'
                await main.send_message(chid, '<i>&#127861; <b>–°—Ç–æ–ª–æ–≤–∞—è</b> - —Ö–æ—Ä–æ—à–µ–µ –º–µ—Å—Ç–æ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ–∫—É—Å–∞{0}</i>'.format(lvl), parse_mode = 'html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'chemists':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                cursor.execute('SELECT apteka FROM clandata WHERE group_id = ?', (chid,))
                apteka = cursor.fetchone()[0]
                if count == 0:
                    return
                markup = types.InlineKeyboardMarkup()
                lvl = ''
                if apteka >=1:
                    markup.add(buybutton('medicine', 'clan'))
                    markup.add(types.InlineKeyboardButton(text='üí∏ –ü—Ä–æ–¥–∞—Ç—å –ø–æ—Å—Ç—Ä–æ–π–∫—É (–≤–æ–∑–≤—Ä–∞—Ç $500)', callback_data='sell_chemists'))
                else:
                    markup.add(types.InlineKeyboardButton(text='üíä –ö—É–ø–∏—Ç—å - $500', callback_data='buy_chemists'))
                    lvl = '. –í –∫–ª–∞–Ω–µ –Ω–µ—Ç —Å—Ç–æ–ª–æ–≤–æ–π'
                await main.send_message(chid, '<i>&#128138; <b>–ê–ø—Ç–µ–∫–∞</b> - —Ç—É—Ç –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ –¥–µ—à–µ–≤–ª–µ, —á–µ–º –≤ –†–∞–π–±–æ–ª—å–Ω–∏—Ü–µ{0}</i>'.format(lvl), parse_mode = 'html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'clan_name':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–ò–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('clanname', a,))
                conn.commit()
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_process'))
                await main.send_message(chid, '<i>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∞–Ω–∞</i>', parse_mode = 'html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'clan_photo':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–ò–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('clanphoto', a,))
                conn.commit()
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_process'))
                markup.add(types.InlineKeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å', callback_data='clear_clan_photo'))
                await main.send_message(chid, '<i>–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ –∏–ª–∏ —Å–∞–º–æ —Ñ–æ—Ç–æ</i>', parse_mode='html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'clear_clan_photo':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–ò–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                conn.commit()
                cursor.execute('UPDATE clandata SET photo="" WHERE group_id=?', (chid,))
                conn.commit()
                await main.send_message(chid, '<i>–§–æ—Ç–æ —É–¥–∞–ª–µ–Ω–æ</i>', parse_mode='html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'clan_bio':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–ò–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('clanbio', a,))
                conn.commit()
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_process'))
                markup.add(types.InlineKeyboardButton(text='üóë –£–¥–∞–ª–∏—Ç—å', callback_data='clear_clan_bio'))
                await main.send_message(chid, '<i>–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ</i>', parse_mode='html', reply_markup = markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'clear_clan_bio':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–ò–∑–º–µ–Ω—è—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('UPDATE userdata SET process=? WHERE user_id=?', ('nothing', a,))
                conn.commit()
                cursor.execute('UPDATE clandata SET bio="" WHERE group_id=?', (chid,))
                conn.commit()
                await main.send_message(chid, '<i>–û–ø–∏—Å–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ</i>', parse_mode='html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'clear_headquarters':
            try:
                a = call.from_user.id
                chid = call.message.chat.id
                cursor.execute('SELECT count(*) FROM clandata WHERE group_id = ?', (chid,))
                count = cursor.fetchone()[0]
                if count == 0:
                    return
                if not isinstance(await main.get_chat_member(chid, a), types.ChatMemberAdministrator) and not isinstance(await main.get_chat_member(chid, a), types.ChatMemberOwner):
                    await main.send_message(chid, '&#10060; <i>–°–Ω–µ—Å—Ç–∏ —à—Ç–∞–±-–∫–≤–∞—Ä—Ç–∏—Ä—É –∫–ª–∞–Ω–∞ –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —á–∞—Ç–∞</i>', parse_mode = 'html')
                    return
                cursor.execute('UPDATE clandata SET hqplace=? WHERE group_id=?', ('', chid,))
                conn.commit()
                cursor.execute('UPDATE clandata SET address=0 WHERE group_id=?', (chid,))
                conn.commit()
                await main.send_message(chid, '<i>&#127970; –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å —à—Ç–∞–±-–∫–≤–∞—Ä—Ç–∏—Ä–∞ –∫–ª–∞–Ω–∞ —Å–Ω–µ—Å–µ–Ω–∞</i>', parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'sign_up':
            await create_acc(call.from_user, call.message.chat.id)
        if call.data == 'clan_qrcode':
            try:
                chid = call.message.chat.id
                cursor.execute('SELECT username FROM clandata WHERE group_id=?', (chid,))
                username = cursor.fetchone()[0]
                cursor.execute('SELECT type FROM clandata WHERE group_id=?', (chid,))
                typ = cursor.fetchone()[0]
                if username=='':
                    await main.send_message(chid, '<i>–£ –≤–∞—à–µ–≥–æ –∫–ª–∞–Ω–∞ –Ω–µ—Ç —Å—Å—ã–ª–∫–∏, –ø–æ—ç—Ç–æ–º—É —Å–æ–∑–¥–∞—Ç—å QR-–∫–æ–¥ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è</i>', parse_mode='html')
                    return
                if typ=='private':
                    await main.send_message(chid, '<i>–í–∞—à –∫–ª–∞–Ω —á–∞—Å—Ç–Ω—ã–π, –ø–æ—ç—Ç–æ–º—É —Å–æ–∑–¥–∞—Ç—å QR-–∫–æ–¥ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è</i>', parse_mode='html')
                    return
                color = '0-0-0'
                bgcolor = '255-255-255'
                style = random.choice(['', 'bgbluelight', 'bggreen', 'bgblack', 'red', 'blue', 'green',])
                if style=='bgbluelight':
                    color = '255-255-255'
                    bgcolor = '0-0-255'
                if style=='bgblue':
                    color = '0-0-0'
                    bgcolor = '0-0-255'
                if style=='bgred':
                    color = '0-0-0'
                    bgcolor = '255-0-0'
                if style=='bggreen':
                    color = '0-0-0'
                    bgcolor='0-255-0'
                if style=='bgyellow':
                    color = '0-0-0'
                    bgcolor = '255-255-0'
                if style=='bgblack':
                    color = '255-255-255'
                    bgcolor = '0-0-0'
                if style=='bgpink':
                    color = '0-0-0'
                    bgcolor = '255-0-255'
                if style=='bgcyan':
                    color = '0-0-0'
                    bgcolor = '0-255-255'
                if style=='red':
                    color = '255-0-0'
                    bgcolor = '255-255-255'
                if style=='blue':
                    color = '0-0-255'
                    bgcolor = '255-255-255'
                if style=='green':
                    color = '0-255-0'
                    bgcolor = '255-255-255'
                if style=='cyan':
                    color = '0-255-255'
                    bgcolor = '255-255-255'
                if style=='pink':
                    color = '255-0-255'
                    bgcolor = '255-255-255'
                if style=='yellow':
                    color = '255-255-0'
                    bgcolor = '0-0-0'
                if style=='yellowlight':
                    color = '255-255-0'
                    bgcolor = '255-255-255'
                await main.send_photo(call.message.chat.id, 'https://api.qrserver.com/v1/create-qr-code/?data={0}&size=512x512&charset-source=UTF-8&charset-target=UTF-8&ecc=L&color={1}&bgcolor={2}&margin=1&qzone=1&format=png'.format(username, color, bgcolor), '<i>QR-–∫–æ–¥ –≥–æ—Ç–æ–≤</i>', parse_mode = 'html')
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data == 'local_clans':
            try:
                a = call.from_user.id
                cursor.execute('SELECT place FROM userdata WHERE user_id = ?', (a,))
                place = cursor.fetchone()[0]
                clans = ''
                cursor.execute('SELECT count(*) FROM clandata WHERE hqplace = ? AND type=?', (place, 'public',))
                count = cursor.fetchone()[0]
                if count == 0:
                    await call.message.answer('<i>–í —ç—Ç–æ–π –º–µ—Å—Ç–Ω–æ—Å—Ç–∏ –∫–ª–∞–Ω–æ–≤ –Ω–µ—Ç :(</i>', parse_mode = 'html')
                    return
                cursor.execute('SELECT * FROM clandata WHERE hqplace = ? AND type = ? ORDER BY address LIMIT 50', (place, 'public',))
                for row in cursor:
                    clans+='\n<b>{0}.</b> <a href = "{1}">{2}</a>'.format(row[11], row[8], row[1])
                markup = types.InlineKeyboardMarkup()
                markup.add(types.InlineKeyboardButton(text='–ò—Å–∫–∞—Ç—å –ø–æ –Ω–æ–º–µ—Ä—É –¥–æ–º–∞', callback_data='hq_number'))
                await call.message.answer('<i>&#127970; –ö–ª–∞–Ω—ã –ø–æ–±–ª–∏–∑–æ—Å—Ç–∏: <b>{0}</b></i>'.format(clans), parse_mode = 'html', reply_markup=markup)
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
        if call.data.startswith('battle_'):
            try:
                await battle(call.message, call.from_user.id, int(call.data[7:]))
            except Exception as e:
                await call.message.answer('&#10060; <i>–ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ï—Å–ª–∏ –≤—ã –≤—ã–ø–æ–ª–Ω—è–ª–∏ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞–¥ –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∞–∫–∫–∞—É–Ω—Ç –≤ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–µ. –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –±–æ—Ç–æ–º –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.\n–ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –¥–∞–∂–µ –∫–æ–≥–¥–∞ —É –≤–∞—Å –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫–æ–¥–µ –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞. –°–æ–æ–±—â–∏—Ç–µ –æ –Ω–µ–π –≤ –ü—Ä–∏—ë–º–Ω—É—é (t.me/zhivolab), –∏ –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É.\n–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞</i>', parse_mode='html')
                await call.message.answer('<i><b>–¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: </b>{0}</i>'.format(e), parse_mode = 'html')
    
    @bot.message_handler(content_types=['new_chat_members'])
    async def welcome_new_member(message: types.Message):
        if message.new_chat_members[0].id == ID:
            await main.send_photo(message.chat.id, 'https://te.legra.ph/file/c1ee7f35883ab50abcde5.jpg', caption='''<i><b>ü•≥ –ú—ã –¥–æ–∂–¥–∞–ª–∏—Å—å —ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞!</b>
üòº –ü–æ–∫–∞ –ë–æ–π—Ü–æ–≤—Å–∫–∏–π –∫–ª—É–± –ø–æ—Ç–∏—Ö–æ–Ω—å–∫—É —É–º–∏—Ä–∞–ª, –≤ —Ç–∞–π–Ω–µ (–Ω—É, –∫–∞–∫ —Å–∫–∞–∑–∞—Ç—å –≤ —Ç–∞–π–Ω–µ, –ø—Ä–æ —ç—Ç–æ –∑–Ω–∞–ª–∏ –º–Ω–æ–≥–∏–µ –∏–≥—Ä–æ–∫–∏ –ë–ö :) –≤–µ–ª–∞—Å—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã ‚Äî –ñ–∏–≤–æ–ø–æ–ª–∏—Å–∞
üöÜ –ê–∫—Ü–µ–Ω—Ç –≤ —ç—Ç–æ–π –∏–≥—Ä–µ –¥–µ–ª–∞–µ—Ç—Å—è –Ω–µ –Ω–∞ –∂–µ—Å—Ç–æ–∫–∏–µ –±–∏—Ç–≤—ã, –∞ –Ω–∞ –º–∏—Ä–Ω—ã–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è (—Ö–æ—Ç—è –∂–µ—Å—Ç–æ–∫–∏–µ –±–∏—Ç–≤—ã –Ω–∞ –±–∞–Ω —Ç–æ–∂–µ –º–æ–∂–Ω–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—å :)
üíº –†–∞–±–æ—Ç–∞–π, –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –¥–µ–Ω—å–≥–∏ –∏ —Ç—Ä–∞—Ç—å –∏—Ö –≤ –º–Ω–æ–≥–æ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –º–∞–≥–∞–∑–∏–Ω–∞—Ö –ø–æ –≤—Å–µ–º—É –ñ–∏–≤–æ–ø–æ–ª–∏—Å—É (–∞ –µ—â—ë –¥–µ–Ω—å–≥–∏ –º–æ–∂–Ω–æ –∫—Ä–∞—Å—Ç—å, –Ω–æ –ª—É—á—à–µ —Ç–∞–∫ –Ω–µ –¥–µ–ª–∞—Ç—å, –∏–±–æ –∞–¥–º–∏–Ω—ã –≤—Å—ë –≤–∏–¥—è—ÇüëÄ :)
üë¶üèø –¢—ã –º–æ–∂–µ—à—å —Å—Ç–∞—Ç—å –∫–µ–º —É–≥–æ–¥–Ω–æ, –æ—Ç –µ–Ω–æ—Ç–∞ –¥–æ –Ω–∏–≥–µ—Ä–∞ (–Ω–µ—Ç, –ø–æ—Å–ª–µ–¥–Ω–∏–º –Ω–µ–ª—å–∑—è –∏–ª–∏ –±–∞–Ω :)
ü§¨ –£ –Ω–∞—Å –≤—Å—ë –ø–æ–¥ –∫–æ–Ω—Ç—Ä–æ–ª–µ–º. –ó–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –¥–æ–±—Ä—ã–µ –∞–¥–º–∏–Ω—ã –≤–∞–º –æ–±–Ω—É–ª—è—Ç –∞–∫–∫–∞—É–Ω—Ç</i>''', parse_mode = 'html')
        else:
            await startdef(message)
    
    @inline.bot
            if money<0 and whole:
                markup.add(types.InlineKeyboardButton(text='üíµ –û–ø–ª–∞—Ç–∏—Ç—å —Å—á—ë—Ç', callback_data='paybill {0} {1}'.format(-money, a)))
                item.append(InlineQueryResultArticle(
                    id = 'bill_{0}'.format(money),
                    title = f'üíµ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—á—ë—Ç –Ω–∞ —Å—É–º–º—É ${-money}',
                    description='–ë–∞–ª–∞–Ω—Å: ${0}'.format(balance),
                    input_message_content=InputTextMessageContent('<i>&#128181; <b><a href="tg://user?id={3}">{0}{1}</a></b> –≤—ã—Å—Ç–∞–≤–∏–ª –≤–∞–º —Å—á—ë—Ç –Ω–∞ —Å—É–º–º—É <b>${2}</b></i>'.format(rasa, nick, -money, a), parse_mode='html'),
                    reply_markup = markup,
                ))
            if not whole:
                item.append(InlineQueryResultArticle(
                    id = 'error',
                    title = f'üí≤ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ–∫ –Ω–∞ —Å—É–º–º—É $',
                    description='‚ùå –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –ø–æ—Å–ª–µ –∑–Ω–∞–∫–∞ $\n–ë–∞–ª–∞–Ω—Å: ${0}'.format(balance),
                    input_message_content=InputTextMessageContent('<i>–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ</i>', parse_mode='html'),
                    reply_markup = markup,
                ))
            if item[0].id.startswith('check_'):
                money = int(item[0].id[6:])
                if money>balance:
                    return
                else:
                    cursor.execute('UPDATE userdata SET balance=balance-? WHERE user_id=?', (money, a,))
                    conn.commit()
        elif text.startswith('%'):
            try:
                money = int(text[1:])
            except:
                money = 0
                whole = False
            markup = types.InlineKeyboardMarkup()
            if money>=0 and whole:
                for itid in ITEMS[1]:
                    markup = types.InlineKeyboardMarkup()
                    if money == 0:
                        markup.add(types.InlineKeyboardButton(text='–ó–∞–±—Ä–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ', callback_data='slot {0} 0 {1}'.format(itid, a)))
                    else:
                        markup.add(types.InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å –∑–∞ ${0}'.format(money), callback_data='slot {0} {1} {2}'.format(itid, money, a)))
                    ids = ITEMS[1].index(itid)
                    if itemdata(a, itid)!='emptyslot':
                        cursor.execute('SELECT {0} FROM userdata WHERE user_id=?'.format(itid), (a,))
                        amt = cursor.fetchone()[0]
                        item.append(InlineQueryResultArticle(
                            id = 'slot {0} {1}'.format(ids, money),
                            title = '–ü—Ä–æ–¥–∞—Ç—å {0}{1} –∑–∞ ${2}'.format(ITEMS[0][ids], ITEMS[2][ids], money),
                            description = '–£ –≤–∞—Å —ç—Ç–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞: {0}'.format(amt),
                            input_message_content=InputTextMessageContent('<i><b><a href="tg://user?id={3}">{0}{1}</a></b> –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–∞–º <b>{4} {5}</b> –∑–∞ <b>${2}</b></i>'.format(rasa, nick, money, a, ITEMS[0][ids], ITEMS[2][ids]), parse_mode='html'),
                            reply_markup = markup,
                        ))
            if not whole or money<0:
                item.append(InlineQueryResultArticle(
                    id = 'error',
                    title = f'üö´ –ü—Ä–æ–¥–∞—Ç—å —Ç–æ–≤–∞—Ä –∑–∞ $',
                    description='‚ùå –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ—Å–ª–µ –∑–Ω–∞–∫–∞ $'.format(balance),
                    input_message_content=InputTextMessageContent('<i>–ù—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ</i>', parse_mode='html'),
                    reply_markup = markup,
                ))
            for inst in item:
                if inst.id.startswith('slot '):
                    itid = ITEMS[1][int(inst.id.split(' ')[1])]
                    cursor.execute('SELECT {0} FROM userdata WHERE user_id=?'.format(itid), (a,))
                    amt = cursor.fetchone()[0]
                    if amt<1:
                        return
                    else:
                        cursor.execute('UPDATE userdata SET {0}={0}-1 WHERE user_id=?'.format(itid), (a,))
                        conn.commit()
        else:
            item.append(InlineQueryResultArticle(
                id = 'help',
                title = '–ö–æ–º–∞–Ω–¥—ã',
                description = '${—Å—É–º–º–∞} - –≤—ã–ø–∏—Å–∞—Ç—å —á–µ–∫ –∏–ª–∏ —Å—á—ë—Ç\n%{—Å—Ç–æ–∏–º–æ—Å—Ç—å} - –ø—Ä–æ–¥–∞—Ç—å —Ç–æ–≤–∞—Ä\n–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π',
                input_message_content=InputTextMessageContent('<i><b>–ö–æ–º–∞–Ω–¥—ã</b>\n<code>${—Å—É–º–º–∞}</code> - –≤—ã–ø–∏—Å–∞—Ç—å —á–µ–∫ (–∏–ª–∏ —Å—á—ë—Ç, –µ—Å–ª–∏ —Å—É–º–º–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–∞—è) –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—É–º–º—É.\n<code>%{—Ü–µ–Ω–∞}</code> - –ø—Ä–æ–¥–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ü–µ–Ω–µ</i>', parse_mode='html'),
            ))

    @bot.chosen_inline_handler()
    async def huy():
        if query.startswith('%'):
                        cost = int(query[1:])
                        if cost>0:
                            itid = int(i.result_id.split(' ')[1])
                            itm = ITEMS[0][itid]+' '+ITEMS[2][itid]
                            await main.send_message(fid, '<i><b><a href="tg://user?id={3}">{0}{1}</a></b> –ø—Ä–æ–¥–∞—ë—Ç <b>{4}</b> –∑–∞ <b>${2}</b>\n#user_sellitem</i>'.format(rasa, nick, cost, a, itm), parse_mode='html')
                except Exception as e:
                    print(e)